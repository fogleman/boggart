// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// EnrichedThingDTO enriched thing d t o
// swagger:model EnrichedThingDTO
type EnrichedThingDTO struct {

	// UID
	UID string `json:"UID,omitempty"`

	// bridge UID
	BridgeUID string `json:"bridgeUID,omitempty"`

	// channels
	Channels []*ChannelDTO `json:"channels"`

	// configuration
	Configuration map[string]interface{} `json:"configuration,omitempty"`

	// editable
	Editable *bool `json:"editable,omitempty"`

	// firmware status
	FirmwareStatus *FirmwareStatusDTO `json:"firmwareStatus,omitempty"`

	// label
	Label string `json:"label,omitempty"`

	// location
	Location string `json:"location,omitempty"`

	// properties
	Properties map[string]string `json:"properties,omitempty"`

	// status info
	StatusInfo *ThingStatusInfo `json:"statusInfo,omitempty"`

	// thing type UID
	ThingTypeUID string `json:"thingTypeUID,omitempty"`
}

// Validate validates this enriched thing d t o
func (m *EnrichedThingDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChannels(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirmwareStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatusInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EnrichedThingDTO) validateChannels(formats strfmt.Registry) error {

	if swag.IsZero(m.Channels) { // not required
		return nil
	}

	for i := 0; i < len(m.Channels); i++ {
		if swag.IsZero(m.Channels[i]) { // not required
			continue
		}

		if m.Channels[i] != nil {
			if err := m.Channels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("channels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *EnrichedThingDTO) validateFirmwareStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.FirmwareStatus) { // not required
		return nil
	}

	if m.FirmwareStatus != nil {
		if err := m.FirmwareStatus.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("firmwareStatus")
			}
			return err
		}
	}

	return nil
}

func (m *EnrichedThingDTO) validateStatusInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.StatusInfo) { // not required
		return nil
	}

	if m.StatusInfo != nil {
		if err := m.StatusInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("statusInfo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EnrichedThingDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EnrichedThingDTO) UnmarshalBinary(b []byte) error {
	var res EnrichedThingDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
