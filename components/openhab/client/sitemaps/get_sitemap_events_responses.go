// Code generated by go-swagger; DO NOT EDIT.

package sitemaps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetSitemapEventsReader is a Reader for the GetSitemapEvents structure.
type GetSitemapEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSitemapEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSitemapEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetSitemapEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSitemapEventsOK creates a GetSitemapEventsOK with default headers values
func NewGetSitemapEventsOK() *GetSitemapEventsOK {
	return &GetSitemapEventsOK{}
}

/*GetSitemapEventsOK handles this case with default header values.

OK
*/
type GetSitemapEventsOK struct {
}

func (o *GetSitemapEventsOK) Error() string {
	return fmt.Sprintf("[GET /sitemaps/events/{subscriptionid}][%d] getSitemapEventsOK ", 200)
}

func (o *GetSitemapEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSitemapEventsNotFound creates a GetSitemapEventsNotFound with default headers values
func NewGetSitemapEventsNotFound() *GetSitemapEventsNotFound {
	return &GetSitemapEventsNotFound{}
}

/*GetSitemapEventsNotFound handles this case with default header values.

Subscription not found.
*/
type GetSitemapEventsNotFound struct {
}

func (o *GetSitemapEventsNotFound) Error() string {
	return fmt.Sprintf("[GET /sitemaps/events/{subscriptionid}][%d] getSitemapEventsNotFound ", 404)
}

func (o *GetSitemapEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
