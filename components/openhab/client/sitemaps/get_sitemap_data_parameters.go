// Code generated by go-swagger; DO NOT EDIT.

package sitemaps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSitemapDataParams creates a new GetSitemapDataParams object
// with the default values initialized.
func NewGetSitemapDataParams() *GetSitemapDataParams {
	var (
		jsoncallbackDefault = string("callback")
	)
	return &GetSitemapDataParams{
		Jsoncallback: &jsoncallbackDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSitemapDataParamsWithTimeout creates a new GetSitemapDataParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSitemapDataParamsWithTimeout(timeout time.Duration) *GetSitemapDataParams {
	var (
		jsoncallbackDefault = string("callback")
	)
	return &GetSitemapDataParams{
		Jsoncallback: &jsoncallbackDefault,

		timeout: timeout,
	}
}

// NewGetSitemapDataParamsWithContext creates a new GetSitemapDataParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSitemapDataParamsWithContext(ctx context.Context) *GetSitemapDataParams {
	var (
		jsoncallbackDefault = string("callback")
	)
	return &GetSitemapDataParams{
		Jsoncallback: &jsoncallbackDefault,

		Context: ctx,
	}
}

// NewGetSitemapDataParamsWithHTTPClient creates a new GetSitemapDataParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSitemapDataParamsWithHTTPClient(client *http.Client) *GetSitemapDataParams {
	var (
		jsoncallbackDefault = string("callback")
	)
	return &GetSitemapDataParams{
		Jsoncallback: &jsoncallbackDefault,
		HTTPClient:   client,
	}
}

/*GetSitemapDataParams contains all the parameters to send to the API endpoint
for the get sitemap data operation typically these are written to a http.Request
*/
type GetSitemapDataParams struct {

	/*AcceptLanguage
	  language

	*/
	AcceptLanguage *string
	/*Jsoncallback*/
	Jsoncallback *string
	/*Sitemapname
	  sitemap name

	*/
	Sitemapname string
	/*Type*/
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get sitemap data params
func (o *GetSitemapDataParams) WithTimeout(timeout time.Duration) *GetSitemapDataParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get sitemap data params
func (o *GetSitemapDataParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get sitemap data params
func (o *GetSitemapDataParams) WithContext(ctx context.Context) *GetSitemapDataParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get sitemap data params
func (o *GetSitemapDataParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get sitemap data params
func (o *GetSitemapDataParams) WithHTTPClient(client *http.Client) *GetSitemapDataParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get sitemap data params
func (o *GetSitemapDataParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAcceptLanguage adds the acceptLanguage to the get sitemap data params
func (o *GetSitemapDataParams) WithAcceptLanguage(acceptLanguage *string) *GetSitemapDataParams {
	o.SetAcceptLanguage(acceptLanguage)
	return o
}

// SetAcceptLanguage adds the acceptLanguage to the get sitemap data params
func (o *GetSitemapDataParams) SetAcceptLanguage(acceptLanguage *string) {
	o.AcceptLanguage = acceptLanguage
}

// WithJsoncallback adds the jsoncallback to the get sitemap data params
func (o *GetSitemapDataParams) WithJsoncallback(jsoncallback *string) *GetSitemapDataParams {
	o.SetJsoncallback(jsoncallback)
	return o
}

// SetJsoncallback adds the jsoncallback to the get sitemap data params
func (o *GetSitemapDataParams) SetJsoncallback(jsoncallback *string) {
	o.Jsoncallback = jsoncallback
}

// WithSitemapname adds the sitemapname to the get sitemap data params
func (o *GetSitemapDataParams) WithSitemapname(sitemapname string) *GetSitemapDataParams {
	o.SetSitemapname(sitemapname)
	return o
}

// SetSitemapname adds the sitemapname to the get sitemap data params
func (o *GetSitemapDataParams) SetSitemapname(sitemapname string) {
	o.Sitemapname = sitemapname
}

// WithType adds the typeVar to the get sitemap data params
func (o *GetSitemapDataParams) WithType(typeVar *string) *GetSitemapDataParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get sitemap data params
func (o *GetSitemapDataParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetSitemapDataParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AcceptLanguage != nil {

		// header param Accept-Language
		if err := r.SetHeaderParam("Accept-Language", *o.AcceptLanguage); err != nil {
			return err
		}

	}

	if o.Jsoncallback != nil {

		// query param jsoncallback
		var qrJsoncallback string
		if o.Jsoncallback != nil {
			qrJsoncallback = *o.Jsoncallback
		}
		qJsoncallback := qrJsoncallback
		if qJsoncallback != "" {
			if err := r.SetQueryParam("jsoncallback", qJsoncallback); err != nil {
				return err
			}
		}

	}

	// path param sitemapname
	if err := r.SetPathParam("sitemapname", o.Sitemapname); err != nil {
		return err
	}

	if o.Type != nil {

		// query param type
		var qrType string
		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {
			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
