// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/kihamo/boggart/components/openhab/client/channel_types"
	"github.com/kihamo/boggart/components/openhab/client/config_descriptions"
	"github.com/kihamo/boggart/components/openhab/client/discovery"
	"github.com/kihamo/boggart/components/openhab/client/extensions"
	"github.com/kihamo/boggart/components/openhab/client/habmin_charts"
	"github.com/kihamo/boggart/components/openhab/client/habmin_dashboards"
	"github.com/kihamo/boggart/components/openhab/client/habmin_designer"
	"github.com/kihamo/boggart/components/openhab/client/habmin_floorplan"
	"github.com/kihamo/boggart/components/openhab/client/habmin_rules"
	"github.com/kihamo/boggart/components/openhab/client/habpanel"
	"github.com/kihamo/boggart/components/openhab/client/inbox"
	"github.com/kihamo/boggart/components/openhab/client/items"
	"github.com/kihamo/boggart/components/openhab/client/links"
	"github.com/kihamo/boggart/components/openhab/client/operations"
	"github.com/kihamo/boggart/components/openhab/client/persistence"
	"github.com/kihamo/boggart/components/openhab/client/services"
	"github.com/kihamo/boggart/components/openhab/client/sitemaps"
	"github.com/kihamo/boggart/components/openhab/client/things"
	"github.com/kihamo/boggart/components/openhab/client/uuid"
	"github.com/kihamo/boggart/components/openhab/client/voice"
)

// Default open h a b r e s t HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/rest"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new open h a b r e s t HTTP client.
func NewHTTPClient(formats strfmt.Registry) *OpenHABREST {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new open h a b r e s t HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *OpenHABREST {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new open h a b r e s t client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *OpenHABREST {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(OpenHABREST)
	cli.Transport = transport

	cli.ChannelTypes = channel_types.New(transport, formats)

	cli.ConfigDescriptions = config_descriptions.New(transport, formats)

	cli.Discovery = discovery.New(transport, formats)

	cli.Extensions = extensions.New(transport, formats)

	cli.HabminCharts = habmin_charts.New(transport, formats)

	cli.HabminDashboards = habmin_dashboards.New(transport, formats)

	cli.HabminDesigner = habmin_designer.New(transport, formats)

	cli.HabminFloorplan = habmin_floorplan.New(transport, formats)

	cli.HabminRules = habmin_rules.New(transport, formats)

	cli.Habpanel = habpanel.New(transport, formats)

	cli.Inbox = inbox.New(transport, formats)

	cli.Items = items.New(transport, formats)

	cli.Links = links.New(transport, formats)

	cli.Operations = operations.New(transport, formats)

	cli.Persistence = persistence.New(transport, formats)

	cli.Services = services.New(transport, formats)

	cli.Sitemaps = sitemaps.New(transport, formats)

	cli.Things = things.New(transport, formats)

	cli.UUID = uuid.New(transport, formats)

	cli.Voice = voice.New(transport, formats)

	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// OpenHABREST is a client for open h a b r e s t
type OpenHABREST struct {
	ChannelTypes *channel_types.Client

	ConfigDescriptions *config_descriptions.Client

	Discovery *discovery.Client

	Extensions *extensions.Client

	HabminCharts *habmin_charts.Client

	HabminDashboards *habmin_dashboards.Client

	HabminDesigner *habmin_designer.Client

	HabminFloorplan *habmin_floorplan.Client

	HabminRules *habmin_rules.Client

	Habpanel *habpanel.Client

	Inbox *inbox.Client

	Items *items.Client

	Links *links.Client

	Operations *operations.Client

	Persistence *persistence.Client

	Services *services.Client

	Sitemaps *sitemaps.Client

	Things *things.Client

	UUID *uuid.Client

	Voice *voice.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *OpenHABREST) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.ChannelTypes.SetTransport(transport)

	c.ConfigDescriptions.SetTransport(transport)

	c.Discovery.SetTransport(transport)

	c.Extensions.SetTransport(transport)

	c.HabminCharts.SetTransport(transport)

	c.HabminDashboards.SetTransport(transport)

	c.HabminDesigner.SetTransport(transport)

	c.HabminFloorplan.SetTransport(transport)

	c.HabminRules.SetTransport(transport)

	c.Habpanel.SetTransport(transport)

	c.Inbox.SetTransport(transport)

	c.Items.SetTransport(transport)

	c.Links.SetTransport(transport)

	c.Operations.SetTransport(transport)

	c.Persistence.SetTransport(transport)

	c.Services.SetTransport(transport)

	c.Sitemaps.SetTransport(transport)

	c.Things.SetTransport(transport)

	c.UUID.SetTransport(transport)

	c.Voice.SetTransport(transport)

}
