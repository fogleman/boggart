// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kihamo/boggart/components/openhab/models"
)

// GetByIDReader is a Reader for the GetByID structure.
type GetByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetByIDOK creates a GetByIDOK with default headers values
func NewGetByIDOK() *GetByIDOK {
	return &GetByIDOK{}
}

/*GetByIDOK handles this case with default header values.

OK
*/
type GetByIDOK struct {
	Payload *models.ConfigurableServiceDTO
}

func (o *GetByIDOK) Error() string {
	return fmt.Sprintf("[GET /services/{serviceId}][%d] getByIdOK  %+v", 200, o.Payload)
}

func (o *GetByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigurableServiceDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByIDNotFound creates a GetByIDNotFound with default headers values
func NewGetByIDNotFound() *GetByIDNotFound {
	return &GetByIDNotFound{}
}

/*GetByIDNotFound handles this case with default header values.

Not found
*/
type GetByIDNotFound struct {
}

func (o *GetByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /services/{serviceId}][%d] getByIdNotFound ", 404)
}

func (o *GetByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
