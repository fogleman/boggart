// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutItemStateReader is a Reader for the PutItemState structure.
type PutItemStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutItemStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 202:
		result := NewPutItemStateAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutItemStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutItemStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutItemStateAccepted creates a PutItemStateAccepted with default headers values
func NewPutItemStateAccepted() *PutItemStateAccepted {
	return &PutItemStateAccepted{}
}

/*PutItemStateAccepted handles this case with default header values.

Accepted
*/
type PutItemStateAccepted struct {
}

func (o *PutItemStateAccepted) Error() string {
	return fmt.Sprintf("[PUT /items/{itemname}/state][%d] putItemStateAccepted ", 202)
}

func (o *PutItemStateAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutItemStateBadRequest creates a PutItemStateBadRequest with default headers values
func NewPutItemStateBadRequest() *PutItemStateBadRequest {
	return &PutItemStateBadRequest{}
}

/*PutItemStateBadRequest handles this case with default header values.

Item state null
*/
type PutItemStateBadRequest struct {
}

func (o *PutItemStateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /items/{itemname}/state][%d] putItemStateBadRequest ", 400)
}

func (o *PutItemStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutItemStateNotFound creates a PutItemStateNotFound with default headers values
func NewPutItemStateNotFound() *PutItemStateNotFound {
	return &PutItemStateNotFound{}
}

/*PutItemStateNotFound handles this case with default header values.

Item not found
*/
type PutItemStateNotFound struct {
}

func (o *PutItemStateNotFound) Error() string {
	return fmt.Sprintf("[PUT /items/{itemname}/state][%d] putItemStateNotFound ", 404)
}

func (o *PutItemStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
