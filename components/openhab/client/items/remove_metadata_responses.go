// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RemoveMetadataReader is a Reader for the RemoveMetadata structure.
type RemoveMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRemoveMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewRemoveMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewRemoveMetadataMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveMetadataOK creates a RemoveMetadataOK with default headers values
func NewRemoveMetadataOK() *RemoveMetadataOK {
	return &RemoveMetadataOK{}
}

/*RemoveMetadataOK handles this case with default header values.

OK
*/
type RemoveMetadataOK struct {
}

func (o *RemoveMetadataOK) Error() string {
	return fmt.Sprintf("[DELETE /items/{itemname}/metadata/{namespace}][%d] removeMetadataOK ", 200)
}

func (o *RemoveMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveMetadataNotFound creates a RemoveMetadataNotFound with default headers values
func NewRemoveMetadataNotFound() *RemoveMetadataNotFound {
	return &RemoveMetadataNotFound{}
}

/*RemoveMetadataNotFound handles this case with default header values.

Item not found.
*/
type RemoveMetadataNotFound struct {
}

func (o *RemoveMetadataNotFound) Error() string {
	return fmt.Sprintf("[DELETE /items/{itemname}/metadata/{namespace}][%d] removeMetadataNotFound ", 404)
}

func (o *RemoveMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveMetadataMethodNotAllowed creates a RemoveMetadataMethodNotAllowed with default headers values
func NewRemoveMetadataMethodNotAllowed() *RemoveMetadataMethodNotAllowed {
	return &RemoveMetadataMethodNotAllowed{}
}

/*RemoveMetadataMethodNotAllowed handles this case with default header values.

Meta data not editable.
*/
type RemoveMetadataMethodNotAllowed struct {
}

func (o *RemoveMetadataMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /items/{itemname}/metadata/{namespace}][%d] removeMetadataMethodNotAllowed ", 405)
}

func (o *RemoveMetadataMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
