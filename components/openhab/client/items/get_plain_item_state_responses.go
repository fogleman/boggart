// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetPlainItemStateReader is a Reader for the GetPlainItemState structure.
type GetPlainItemStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPlainItemStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPlainItemStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetPlainItemStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPlainItemStateOK creates a GetPlainItemStateOK with default headers values
func NewGetPlainItemStateOK() *GetPlainItemStateOK {
	return &GetPlainItemStateOK{}
}

/*GetPlainItemStateOK handles this case with default header values.

OK
*/
type GetPlainItemStateOK struct {
	Payload string
}

func (o *GetPlainItemStateOK) Error() string {
	return fmt.Sprintf("[GET /items/{itemname}/state][%d] getPlainItemStateOK  %+v", 200, o.Payload)
}

func (o *GetPlainItemStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlainItemStateNotFound creates a GetPlainItemStateNotFound with default headers values
func NewGetPlainItemStateNotFound() *GetPlainItemStateNotFound {
	return &GetPlainItemStateNotFound{}
}

/*GetPlainItemStateNotFound handles this case with default header values.

Item not found
*/
type GetPlainItemStateNotFound struct {
}

func (o *GetPlainItemStateNotFound) Error() string {
	return fmt.Sprintf("[GET /items/{itemname}/state][%d] getPlainItemStateNotFound ", 404)
}

func (o *GetPlainItemStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
