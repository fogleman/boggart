// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kihamo/boggart/components/openhab/models"
)

// NewCreateOrUpdateItemParams creates a new CreateOrUpdateItemParams object
// with the default values initialized.
func NewCreateOrUpdateItemParams() *CreateOrUpdateItemParams {
	var ()
	return &CreateOrUpdateItemParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateOrUpdateItemParamsWithTimeout creates a new CreateOrUpdateItemParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateOrUpdateItemParamsWithTimeout(timeout time.Duration) *CreateOrUpdateItemParams {
	var ()
	return &CreateOrUpdateItemParams{

		timeout: timeout,
	}
}

// NewCreateOrUpdateItemParamsWithContext creates a new CreateOrUpdateItemParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateOrUpdateItemParamsWithContext(ctx context.Context) *CreateOrUpdateItemParams {
	var ()
	return &CreateOrUpdateItemParams{

		Context: ctx,
	}
}

// NewCreateOrUpdateItemParamsWithHTTPClient creates a new CreateOrUpdateItemParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateOrUpdateItemParamsWithHTTPClient(client *http.Client) *CreateOrUpdateItemParams {
	var ()
	return &CreateOrUpdateItemParams{
		HTTPClient: client,
	}
}

/*CreateOrUpdateItemParams contains all the parameters to send to the API endpoint
for the create or update item operation typically these are written to a http.Request
*/
type CreateOrUpdateItemParams struct {

	/*AcceptLanguage
	  language

	*/
	AcceptLanguage *string
	/*Body
	  item data

	*/
	Body *models.GroupItemDTO
	/*Itemname
	  item name

	*/
	Itemname string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create or update item params
func (o *CreateOrUpdateItemParams) WithTimeout(timeout time.Duration) *CreateOrUpdateItemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create or update item params
func (o *CreateOrUpdateItemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create or update item params
func (o *CreateOrUpdateItemParams) WithContext(ctx context.Context) *CreateOrUpdateItemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create or update item params
func (o *CreateOrUpdateItemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create or update item params
func (o *CreateOrUpdateItemParams) WithHTTPClient(client *http.Client) *CreateOrUpdateItemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create or update item params
func (o *CreateOrUpdateItemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAcceptLanguage adds the acceptLanguage to the create or update item params
func (o *CreateOrUpdateItemParams) WithAcceptLanguage(acceptLanguage *string) *CreateOrUpdateItemParams {
	o.SetAcceptLanguage(acceptLanguage)
	return o
}

// SetAcceptLanguage adds the acceptLanguage to the create or update item params
func (o *CreateOrUpdateItemParams) SetAcceptLanguage(acceptLanguage *string) {
	o.AcceptLanguage = acceptLanguage
}

// WithBody adds the body to the create or update item params
func (o *CreateOrUpdateItemParams) WithBody(body *models.GroupItemDTO) *CreateOrUpdateItemParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create or update item params
func (o *CreateOrUpdateItemParams) SetBody(body *models.GroupItemDTO) {
	o.Body = body
}

// WithItemname adds the itemname to the create or update item params
func (o *CreateOrUpdateItemParams) WithItemname(itemname string) *CreateOrUpdateItemParams {
	o.SetItemname(itemname)
	return o
}

// SetItemname adds the itemname to the create or update item params
func (o *CreateOrUpdateItemParams) SetItemname(itemname string) {
	o.Itemname = itemname
}

// WriteToRequest writes these params to a swagger request
func (o *CreateOrUpdateItemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AcceptLanguage != nil {

		// header param Accept-Language
		if err := r.SetHeaderParam("Accept-Language", *o.AcceptLanguage); err != nil {
			return err
		}

	}

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param itemname
	if err := r.SetPathParam("itemname", o.Itemname); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
