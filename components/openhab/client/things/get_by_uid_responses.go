// Code generated by go-swagger; DO NOT EDIT.

package things

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kihamo/boggart/components/openhab/models"
)

// GetByUIDReader is a Reader for the GetByUID structure.
type GetByUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetByUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetByUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetByUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetByUIDOK creates a GetByUIDOK with default headers values
func NewGetByUIDOK() *GetByUIDOK {
	return &GetByUIDOK{}
}

/*GetByUIDOK handles this case with default header values.

OK
*/
type GetByUIDOK struct {
	Payload *models.ThingDTO
}

func (o *GetByUIDOK) Error() string {
	return fmt.Sprintf("[GET /things/{thingUID}][%d] getByUidOK  %+v", 200, o.Payload)
}

func (o *GetByUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ThingDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByUIDNotFound creates a GetByUIDNotFound with default headers values
func NewGetByUIDNotFound() *GetByUIDNotFound {
	return &GetByUIDNotFound{}
}

/*GetByUIDNotFound handles this case with default header values.

Thing not found.
*/
type GetByUIDNotFound struct {
}

func (o *GetByUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /things/{thingUID}][%d] getByUidNotFound ", 404)
}

func (o *GetByUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
