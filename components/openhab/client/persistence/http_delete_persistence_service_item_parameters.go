// Code generated by go-swagger; DO NOT EDIT.

package persistence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewHTTPDeletePersistenceServiceItemParams creates a new HTTPDeletePersistenceServiceItemParams object
// with the default values initialized.
func NewHTTPDeletePersistenceServiceItemParams() *HTTPDeletePersistenceServiceItemParams {
	var ()
	return &HTTPDeletePersistenceServiceItemParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewHTTPDeletePersistenceServiceItemParamsWithTimeout creates a new HTTPDeletePersistenceServiceItemParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewHTTPDeletePersistenceServiceItemParamsWithTimeout(timeout time.Duration) *HTTPDeletePersistenceServiceItemParams {
	var ()
	return &HTTPDeletePersistenceServiceItemParams{

		timeout: timeout,
	}
}

// NewHTTPDeletePersistenceServiceItemParamsWithContext creates a new HTTPDeletePersistenceServiceItemParams object
// with the default values initialized, and the ability to set a context for a request
func NewHTTPDeletePersistenceServiceItemParamsWithContext(ctx context.Context) *HTTPDeletePersistenceServiceItemParams {
	var ()
	return &HTTPDeletePersistenceServiceItemParams{

		Context: ctx,
	}
}

// NewHTTPDeletePersistenceServiceItemParamsWithHTTPClient creates a new HTTPDeletePersistenceServiceItemParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewHTTPDeletePersistenceServiceItemParamsWithHTTPClient(client *http.Client) *HTTPDeletePersistenceServiceItemParams {
	var ()
	return &HTTPDeletePersistenceServiceItemParams{
		HTTPClient: client,
	}
}

/*HTTPDeletePersistenceServiceItemParams contains all the parameters to send to the API endpoint
for the http delete persistence service item operation typically these are written to a http.Request
*/
type HTTPDeletePersistenceServiceItemParams struct {

	/*Endtime
	  End time of the data to return. [yyyy-MM-dd'T'HH:mm:ss.SSSZ]

	*/
	Endtime string
	/*Itemname
	  The item name.

	*/
	Itemname string
	/*ServiceID
	  Id of the persistence service.

	*/
	ServiceID string
	/*Starttime
	  Start time of the data to return. [yyyy-MM-dd'T'HH:mm:ss.SSSZ]

	*/
	Starttime string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) WithTimeout(timeout time.Duration) *HTTPDeletePersistenceServiceItemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) WithContext(ctx context.Context) *HTTPDeletePersistenceServiceItemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) WithHTTPClient(client *http.Client) *HTTPDeletePersistenceServiceItemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndtime adds the endtime to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) WithEndtime(endtime string) *HTTPDeletePersistenceServiceItemParams {
	o.SetEndtime(endtime)
	return o
}

// SetEndtime adds the endtime to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) SetEndtime(endtime string) {
	o.Endtime = endtime
}

// WithItemname adds the itemname to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) WithItemname(itemname string) *HTTPDeletePersistenceServiceItemParams {
	o.SetItemname(itemname)
	return o
}

// SetItemname adds the itemname to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) SetItemname(itemname string) {
	o.Itemname = itemname
}

// WithServiceID adds the serviceID to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) WithServiceID(serviceID string) *HTTPDeletePersistenceServiceItemParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) SetServiceID(serviceID string) {
	o.ServiceID = serviceID
}

// WithStarttime adds the starttime to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) WithStarttime(starttime string) *HTTPDeletePersistenceServiceItemParams {
	o.SetStarttime(starttime)
	return o
}

// SetStarttime adds the starttime to the http delete persistence service item params
func (o *HTTPDeletePersistenceServiceItemParams) SetStarttime(starttime string) {
	o.Starttime = starttime
}

// WriteToRequest writes these params to a swagger request
func (o *HTTPDeletePersistenceServiceItemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param endtime
	qrEndtime := o.Endtime
	qEndtime := qrEndtime
	if qEndtime != "" {
		if err := r.SetQueryParam("endtime", qEndtime); err != nil {
			return err
		}
	}

	// path param itemname
	if err := r.SetPathParam("itemname", o.Itemname); err != nil {
		return err
	}

	// query param serviceId
	qrServiceID := o.ServiceID
	qServiceID := qrServiceID
	if qServiceID != "" {
		if err := r.SetQueryParam("serviceId", qServiceID); err != nil {
			return err
		}
	}

	// query param starttime
	qrStarttime := o.Starttime
	qStarttime := qrStarttime
	if qStarttime != "" {
		if err := r.SetQueryParam("starttime", qStarttime); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
