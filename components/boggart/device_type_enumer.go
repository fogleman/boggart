// Code generated by "enumer -type=DeviceType -trimprefix=DeviceType -output=device_type_enumer.go"; DO NOT EDIT

package boggart

import (
	"fmt"
)

const _DeviceTypeName = "CameraInternetProviderPhoneRouterVideoRecorder"

var _DeviceTypeIndex = [...]uint8{0, 6, 22, 27, 33, 46}

func (i DeviceType) String() string {
	if i < 0 || i >= DeviceType(len(_DeviceTypeIndex)-1) {
		return fmt.Sprintf("DeviceType(%d)", i)
	}
	return _DeviceTypeName[_DeviceTypeIndex[i]:_DeviceTypeIndex[i+1]]
}

var _DeviceTypeNameToValueMap = map[string]DeviceType{
	_DeviceTypeName[0:6]:   0,
	_DeviceTypeName[6:22]:  1,
	_DeviceTypeName[22:27]: 2,
	_DeviceTypeName[27:33]: 3,
	_DeviceTypeName[33:46]: 4,
}

// DeviceTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func DeviceTypeString(s string) (DeviceType, error) {
	if val, ok := _DeviceTypeNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to DeviceType values", s)
}
