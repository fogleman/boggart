// Code generated by go-bindata.
// sources:
// templates/views/devices.html
// templates/views/index.html
// templates/views/toolbar.html
// assets/js/devices.js
// assets/js/security.js
// locales/ru/LC_MESSAGES/boggart.mo
// locales/ru/LC_MESSAGES/devices.mo
// DO NOT EDIT!

package internal

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsDevicesHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x4d\x8f\xd3\x30\x10\xbd\xf7\x57\x8c\x7c\x82\x43\x6b\x6d\x4f\x1c\xb2\x95\x90\x16\xb4\x48\x85\x03\x2a\x67\xe4\xc4\x93\xed\x94\xd4\x0e\x1e\x13\xba\x8a\xfa\xdf\x51\xbe\xba\x26\x49\xdb\xed\xd2\xe5\xd2\x26\xe3\x79\xf3\xe6\xe3\x8d\x9c\xb2\x04\x8d\x29\x19\x04\x91\x58\xe3\xd1\x78\x01\xfb\xfd\x64\x12\x69\x2a\x20\xc9\x14\xf3\xad\x70\xf6\xb7\x00\xd2\xb7\x42\x63\x41\x09\xb2\x58\x4c\x00\x00\x42\x97\xdd\xf7\x5c\x19\xcc\xda\x93\xe1\xa9\x27\x9f\x61\x70\x5a\x7b\xac\xe7\x8b\xb2\x04\xba\x79\x67\x40\xdc\xb5\xa1\x61\x06\xfb\x7d\x24\xd7\xf3\x9e\x6f\x10\x2d\xc9\x50\xb9\x94\x76\x62\x11\x49\x4d\x45\x40\xd9\x7b\xfd\x2b\x83\xae\xba\x5e\x5c\xaf\xe2\x0c\x3b\xaf\xe6\xa5\xfe\x9d\xb2\x77\x94\xa3\xee\xf9\x37\x98\x35\x2a\x3d\x66\x77\x43\x63\x0b\x78\x2a\x74\xf5\x98\x63\x57\xa5\x5f\x1f\x05\x74\x29\x6d\xf5\x34\xb1\xd9\x74\x2e\x9e\x22\x7c\xba\x7b\x06\x3e\xec\x2c\x27\x8e\x72\x4f\xd6\x5c\xce\x7b\x13\xf0\xae\x14\xff\xe0\x7f\x0b\xf1\x3e\xa9\xd2\x38\x19\x24\x92\x63\x6d\xac\x7c\x07\x4d\x8f\x64\x3d\xaa\x51\x01\xb4\x8f\xed\xdf\xb8\x9c\x33\x62\x8f\x06\xdd\x35\x05\x1d\x51\xe7\x93\x2a\x48\xd5\x54\xa3\x4a\x2b\xa1\xd2\x02\x0e\x5d\x58\x1e\x78\xff\xb7\xda\x03\x9f\x46\xe5\x0e\x39\xb7\x86\xa9\xe8\xd7\x02\x2f\x5c\x0e\x38\xb1\x20\x70\x6a\x49\xa0\xaf\xdb\xf3\x32\x1f\x40\xbe\xa8\xed\xd9\xdd\x1a\x80\x3e\x14\x68\xfc\x59\x5d\x0f\x60\x1f\xc9\xe1\x8b\x50\xec\x21\x25\x87\xfa\x62\xec\x52\x3d\x17\x3a\xbe\x43\x70\x6c\x8f\x60\x6c\x97\x60\x44\x62\xc7\xd6\xab\x2c\x01\x8d\xae\xef\x8d\xe0\x3e\xa9\x88\xea\xcb\xa4\x02\x94\x25\xb0\x57\x9e\x92\xfb\xd5\xe7\x25\xbc\x69\x9e\xbf\x7d\x5d\x82\x90\x5a\xf1\x3a\xb6\xca\x69\xa9\x98\xd1\xb3\x2c\xd0\x68\xeb\x58\x6a\xe5\x55\x9d\x15\xcf\x0c\xfa\x69\xcc\x32\xe1\xc6\xba\x6a\xac\xb1\xb5\x9e\xbd\x53\xf9\x6c\x4b\x66\x96\x30\x0b\x48\x55\xc6\xf8\xf6\x8a\xac\x29\xed\x50\x57\xa5\xa0\xeb\x32\xa8\x4d\xf7\xb5\xe9\x74\x0a\xe3\x7d\xd9\xf0\x15\xbb\x22\x37\x2c\x37\x3f\x7f\xa1\x7b\x9c\x05\x8d\xa9\x72\xd9\xbc\x46\x37\x62\xae\x08\x8f\x8e\xe0\x55\x38\x83\x09\xf4\xc8\xc3\x41\x5c\x4c\x1f\xdb\x87\x07\xe5\x7c\x47\x5e\x45\x6e\xbe\x41\x7a\x61\x0e\x43\xfc\x13\x00\x00\xff\xff\x65\x67\xde\x0b\x2b\x09\x00\x00")

func templatesViewsDevicesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsDevicesHtml,
		"templates/views/devices.html",
	)
}

func templatesViewsDevicesHtml() (*asset, error) {
	bytes, err := templatesViewsDevicesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/devices.html", size: 2347, mode: os.FileMode(420), modTime: time.Unix(1531045566, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x5b\x6f\x1b\xc7\x15\x7e\xf7\xaf\x18\x10\x06\x24\x1b\x21\x57\xa2\x02\x14\x91\x29\x03\x71\x7a\x05\x92\x36\x68\x52\xe7\x71\x31\xdc\x3d\xe4\x8e\xbd\xbb\xb3\x99\x9d\xe5\x05\x84\x00\x9a\x72\x9c\x06\x6e\xe1\x20\x2d\xd0\xa2\x28\x92\xa2\x40\x1f\x0b\x30\x8a\xd5\xa8\xb2\xc8\xfc\x81\x3e\x9c\xf9\x47\xc5\x0c\x97\x14\x45\x91\x34\x6f\x76\x68\x49\xfb\xc2\xdd\x9d\x99\xfd\xce\x39\xf3\xcd\xb9\xcc\x2e\x1b\x0d\xe2\x42\x89\x85\x40\x32\x0e\x0f\x25\x84\x32\x43\xf6\xf7\x6f\x14\x5c\x56\x21\x8e\x4f\xe3\x78\x2f\x23\x78\x95\x14\x79\xb9\x4c\x85\xcc\xdc\xbd\x41\x08\x21\xc3\xad\x0e\xf7\xb3\x81\x9b\xdd\xce\xa7\x6d\xa3\xed\x43\xb7\x47\x9b\x6a\xb6\x64\xd2\x87\x91\x1e\xa6\x97\x97\xbf\x8b\xff\xc0\x23\xf5\x48\x1d\xa8\xa6\x7a\xa4\x9e\x16\x2c\x2f\x3f\xa6\xdf\xb0\x20\x3e\x50\x51\x62\xb5\xcc\xdd\x82\xe5\xb2\xca\x08\xec\x98\x5b\xe7\x24\xe9\x2b\x3f\x1d\x43\xf0\xea\x98\x1e\xfa\x68\x34\x08\x2b\x91\xdc\x7b\x3c\x2c\xb1\x72\xee\x1e\xe7\x3e\xc9\xa4\x46\xcb\x45\x89\x1f\x53\x91\x83\x90\x16\x7d\x70\x8d\x7d\xc7\x3d\x62\x8c\x55\x77\x88\x3e\xa9\xc5\xd9\xed\x3c\xa9\x32\xb7\x0c\x32\xfd\xb1\x25\xf5\xfd\xba\x5d\xe4\xb5\x09\xf2\x5c\xd4\x30\xa2\x21\xf8\x53\x7a\xcf\x63\x93\xb1\xe3\x98\xbb\x97\x11\x10\xf3\x44\x38\x90\xf5\x80\xca\x2c\x0b\x33\x24\x96\x75\x1f\xf6\x32\x1e\xb0\xb2\x27\x77\x77\xb6\xb6\xa2\xda\x9d\x19\x9e\xa8\x8f\x5f\x85\x33\x75\x6b\x34\x48\x2e\x35\xb5\xed\x42\x85\x39\x60\x6b\x74\x3b\x00\x09\xc2\xee\x19\xdf\x96\x10\x44\x20\xa8\x4c\x04\xd8\x2c\xb4\x1d\xf0\x63\x96\xc4\xb9\xfb\xd4\x4f\x80\xec\xef\x93\xf7\x66\x82\x2a\x14\x05\xb1\x66\x13\xfe\x37\x89\x7c\x35\xd2\xf3\x44\xbe\x06\xf1\x7f\x0a\xbe\xa4\xaf\x46\x01\x57\x3f\x7a\x11\x15\xc6\x2c\xe2\x39\xbb\x4c\x69\x9e\xd6\x74\xe9\x16\x26\x4f\xe4\x52\x2b\x13\xbf\xc1\x2e\x9e\x60\x1b\xbf\xc7\x36\x76\xf0\x58\x3d\x23\xea\x8f\xd8\xc1\x23\xd5\xc4\xef\xf0\x18\x8f\x57\xc7\x1c\x08\x41\x94\xeb\x76\x99\x95\xa9\xc3\x7d\x2e\x18\x0c\x71\x66\xf8\xee\x35\x7d\xa6\xe8\xb5\x5a\xfa\x98\x15\xbc\x72\x02\xb5\xf0\x08\x4f\xd4\x81\xfa\x02\x8f\xf0\xf8\x7f\x4f\x08\x9e\x62\x57\x7d\x81\x1d\xec\xaa\x47\xaa\xb5\x4a\x4e\x39\x3c\x8c\x93\x20\x92\x8c\x87\xb6\x93\x14\x99\xa3\x9b\x05\xc4\x76\x04\xc2\xf6\x78\x22\xce\x18\x66\x9a\x49\xaf\x99\x44\x20\x88\x6e\xbe\xa6\xda\x14\xbd\x56\x46\xb5\x2a\x95\x20\xb2\x0e\xf7\xdd\xe5\xa8\xf6\x2f\xec\xe2\x0b\xec\xe2\x73\xec\x60\x5b\x3d\x23\x78\x68\x2e\xda\x73\xf3\x69\xc0\x1e\xdf\xb5\x8d\x70\xb6\x43\x23\xea\x30\x59\x3f\xc7\xa2\xf1\xe4\xb9\xe6\xcc\x14\xbd\x56\xcc\x19\x8f\x2f\x19\xde\xfe\x84\x5d\xd5\x54\xcf\xd4\xe7\x2b\x21\x8c\xc7\xe5\x25\xe2\x4b\xa3\x41\x20\x74\x27\x15\x31\xd3\xea\xa0\x00\x84\x93\x88\xfa\xd5\x2a\x84\xc0\x07\x47\x0a\xa6\x67\x7d\x39\x4e\xfe\x1b\x5f\x98\x00\xd9\x52\x4d\x3c\x56\x9f\x9b\xe2\xb8\xa5\xa9\x39\x47\x56\xff\xf1\xf6\xee\x39\x82\xa6\x33\x62\xcb\x6d\x4d\x50\x69\x62\x9f\x2d\xb9\xa4\xfe\x19\x29\x3f\xb1\xbc\x79\x10\xf2\x13\x10\xf2\x2b\x43\xd8\x99\x80\xb0\xb3\x32\x84\xb7\x27\x20\xbc\xbd\x2a\x84\xfb\xdc\x97\xb4\x0c\xbb\xe3\xd2\x95\x21\xc2\xa4\x59\x4b\x1f\x3f\xbf\xb5\x65\x57\x7a\x23\xcd\xef\xa2\xe8\xef\x9a\x5a\x6c\x21\x78\x9a\x0e\xed\x9d\xc0\x99\x04\xef\xce\x81\xff\x21\xaf\x82\x58\x00\x3c\xd2\xe3\xcc\x14\x0c\x69\x3e\x07\xee\x3d\x2a\x25\x88\xfa\x02\xc8\xc5\xde\xc8\x09\xd6\xbf\x3f\xa3\x0c\xeb\xe7\xb1\x5f\xbe\x53\x36\x74\x99\x9e\xa6\x3f\x6b\xb1\x45\xf8\x4f\x3c\xea\x79\x45\xec\xe2\x29\x9e\xaa\x03\x5d\x4b\xe8\xba\x42\x3d\xd1\x55\xe8\x9b\xbc\x69\x18\xf3\x92\xac\x30\x17\xf8\x95\x08\x97\x0e\x0f\x82\x24\x64\x0e\xd5\x35\x59\x96\x85\x12\x44\x08\x4b\x26\x71\x7f\xc5\x8e\xae\x29\x55\xd3\x6c\x4c\xb4\x16\x2d\x1f\xfb\xc2\xd8\x91\xe0\x7a\x42\x84\x3d\x98\x1a\xbb\x48\x7d\x1a\x3a\x60\x8b\xa4\xe8\x43\x3c\x12\x13\x66\x02\x54\x4d\x75\x80\xdf\xe6\xde\x40\xdf\x41\x5e\x96\xed\xf1\x22\xf3\xe1\x0a\xb2\x37\xf2\x78\x08\xcb\x51\xf7\xef\x78\x8c\x1d\x75\xa0\x5a\xea\x29\xc1\x1f\xb0\x4b\x54\x0b\xdb\x26\xef\x7b\x8c\x1d\xed\xeb\xd4\x81\xbe\xff\x02\xdb\xba\xdb\xa2\xcc\x36\x82\xda\x01\x94\x69\x89\x87\x76\x12\x83\x6b\x57\xb8\x6e\x08\x58\x98\xc8\xa1\xc2\x64\x36\xa1\x4f\xfb\x42\xaf\x7a\x2f\xfa\xa3\x0f\x3e\x7a\xbd\x56\x88\x83\x39\x75\x57\xbf\x57\xad\x97\xaf\x61\x32\x9f\xda\xa3\x0e\xec\xf5\xda\x60\xe0\xf6\xca\xac\x4c\x8b\xf5\xb9\xe9\xf0\x8b\x7b\xab\x37\xc8\x97\x78\xa8\x5a\xd8\xc5\x1f\x54\xd3\x54\xe4\x3a\xf4\xeb\x80\x7f\xf4\x2a\xf4\x8e\x04\xf7\x79\x58\x36\x6b\x7a\x71\x23\xac\xd2\x06\x6f\x60\x0c\xb8\x42\x15\xff\xf9\x20\x50\x65\x25\xb6\x54\x0c\xf8\x84\xfd\x9c\x11\x3c\xc1\x17\x9a\xdf\xda\x11\xa8\xa7\x8b\xb2\x5c\xf0\xc4\x14\x34\xec\xa1\xe0\x92\x3d\xb4\xb5\x6c\xb6\xe3\x33\x08\xe5\xdc\x39\xcb\xfa\x71\x70\x89\x1a\xa6\xd1\xb0\x6e\xaf\x45\x1d\xf3\x0d\x76\xf1\xbb\xde\x26\xe3\xba\xd7\x2c\x97\x61\xa9\x56\x81\x4a\x0f\x44\x96\x27\xd2\xe5\x5c\x4c\x5a\xa7\xc3\xd3\x42\xb0\x83\x6d\xa2\x0e\xf4\x7a\x54\x4f\xf0\xe8\x7a\xb7\x7e\x79\xf3\xb3\x70\x76\xeb\x1f\x6a\x5f\x78\xa8\x53\x1f\xd5\xc2\x63\xd5\xfc\x71\x66\x60\x09\x5f\x73\xdb\x5a\x93\xcf\xaa\xbe\x56\x9f\xa9\xa6\x79\xeb\xba\xf6\xbe\x66\x5a\x6a\xe1\xd0\x00\x04\xcd\x79\xec\x61\x85\xc5\x8c\x87\xb9\x58\x0a\x00\x79\x25\x52\x8d\x18\x9c\x44\x30\x59\xcf\x56\xa1\xe8\xd0\x20\xdb\x53\x7d\xb9\x92\xf3\x6f\xd8\xc6\x53\x53\x6c\x5c\xf4\x75\xb3\xa7\xe8\x05\x16\x94\x49\x2c\x9c\xbd\x8c\x95\x4e\x94\xd5\x9b\x28\xab\x27\xa3\x15\x09\xa8\x30\xa8\x0e\x64\x0d\x98\xce\x95\x5c\xe9\xed\x6e\xff\xe4\x9d\xa8\x76\x27\xa0\xb5\xf4\x3a\xbf\xf3\xce\x6c\xe2\xaf\x5f\x4a\x42\xe6\xe5\xae\x47\x7d\xff\x4a\x32\x57\x2b\x9e\xdd\x5e\x1d\x73\x75\x35\x7c\xa8\x3e\x4b\xdf\xf6\x77\xf1\xbf\x04\x9f\xe3\xa1\x69\x3c\x5e\x09\x8d\xb5\xc0\x57\x87\xc4\x97\x96\x72\xf9\x89\x59\xc7\x39\x3f\x78\x48\xb0\x8b\xdf\x9a\x2f\x92\x4e\x75\x02\xd2\x55\x4d\xcd\x24\x7c\xae\xcf\xf0\xc8\xd0\x4d\x3b\xc9\xc7\xaa\xa5\xa3\xe9\x75\x4a\xb8\xf4\x24\x99\xed\x17\x87\x07\x13\xe7\xe7\xcf\xe6\x55\x4f\x57\x3d\xc6\x2e\x76\x7e\xbc\x55\x63\xdd\x9e\xdb\xeb\xeb\x64\x37\xbe\x5a\x5e\x1e\x42\x29\x68\xe8\x40\x76\x5a\xa2\x3f\x9b\x97\xff\x6a\xe0\xd5\xcd\x27\x39\xa9\x57\x57\x7f\xb8\x31\xeb\xae\x08\x2b\x11\xf8\xf4\xc2\xde\x88\x16\xcc\x2e\x47\x8c\xdb\x02\xc0\xb5\xe3\x2a\x93\x8e\x67\xc7\x92\xca\xc1\xb7\xc9\x5b\xb9\xad\x59\xf7\xfb\x8c\xa4\x7f\xc1\x36\x9e\xa8\xa6\x7a\xaa\x9d\xc2\xac\xd2\x81\x1f\xcf\xbc\xab\x68\x50\xbe\x56\xad\x05\x50\x26\xbb\xfa\xe1\x63\x3d\x83\x91\xa9\xa0\xc6\x3e\xf1\x32\x2d\x19\xfa\x69\x42\xb3\x0e\x15\x13\xdf\x20\xe1\x97\x69\x25\xfc\x48\xb5\x4c\x18\xea\xe2\x7f\xae\x43\xcf\x0a\x2c\x5f\x04\xdf\x9f\x68\xf4\xaf\xce\x27\x95\xdf\x9b\x6f\x02\xf5\xc5\xc9\x1b\xb6\x0f\x71\xb6\xc6\x6e\x0c\xfd\xf7\xcb\x03\xda\x0b\x49\x05\xa3\x3f\x91\xf5\x08\xf6\x32\x12\x6a\xd2\x72\xe2\x38\x35\x67\xdf\x77\x92\x5c\x3a\x35\xa4\x31\xc0\x8b\xa8\xeb\xb2\xb0\xbc\x4b\xb6\xee\x98\x7b\xfb\x37\x46\x86\xa4\x5c\x18\x33\x22\x1f\xd5\xfa\x63\x0a\x96\x81\x9f\x24\xe5\x83\x78\x10\x36\x1b\x0d\xa2\x9d\x34\x73\x7e\xf9\xf1\x07\xef\x93\xcd\xde\xf9\xef\x7e\xfb\x3e\xc9\x58\x2e\x8d\xbd\x22\xa7\xc2\xb5\x68\x1c\x83\x8c\xad\x0a\x84\x2e\x17\xb1\x05\x8e\x47\x85\x8c\xad\x07\x83\xd3\x5c\xc0\xc2\x9c\x7e\x6a\x89\xfa\x31\xdc\x32\x78\xe4\x2c\x8c\x83\x10\x5c\xc4\x7d\xc8\x42\xec\x08\x16\xc9\x61\xdb\x3c\xa0\x15\xda\xbb\x3b\xc4\xb8\x9b\x9b\x2e\x77\x92\x00\x42\x79\x2b\x27\x80\xba\xf5\xcd\x52\x12\x3a\x92\xf1\x90\x6c\xde\x1a\x32\x40\x0a\x24\x68\x58\x06\x72\x13\xde\x22\x37\x0d\x1e\xd9\xdd\x1b\x45\xee\x1f\x21\x54\xc9\x87\xbf\xe6\x92\x95\xea\x9b\x8d\x0b\xa4\x30\xbb\x3e\xbb\x64\xe3\x67\x7a\xec\xc6\x5b\x17\xdb\xa1\x26\x77\xc9\x46\xa3\xd1\x07\xda\xdf\x1f\xd7\xab\x1e\xe9\x87\xc0\x84\x87\x78\xcc\x85\xdd\x9e\xb9\x2e\x36\xea\xc9\x33\x53\xba\x51\xe4\x5c\xc6\x52\xd0\x68\x67\xe3\x5c\xaf\xfd\x5b\x77\x46\xf5\x1f\xf1\xf8\xfd\x1e\x05\xab\x67\xd8\x61\x2e\x9c\x9d\xfd\x3f\x00\x00\xff\xff\xdc\xc7\x9e\x2c\xb7\x38\x00\x00")

func templatesViewsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsIndexHtml,
		"templates/views/index.html",
	)
}

func templatesViewsIndexHtml() (*asset, error) {
	bytes, err := templatesViewsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/index.html", size: 14519, mode: os.FileMode(420), modTime: time.Unix(1532261473, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsToolbarHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\x4f\xaf\xd2\x40\x14\xc5\xf7\x7c\x8a\x9b\xd9\x3c\x78\x49\x19\xdd\x19\x5f\x21\x31\xb8\x70\xf1\xd4\xc4\xa7\x6b\x73\xe9\xdc\x96\xc1\x61\xa6\xce\x1f\xd4\x34\x7c\x77\xd3\x52\xa0\xbc\xb6\x3e\x08\x4d\xec\x8a\xce\xe4\x9e\x9e\xf3\x9b\x53\xa0\x28\x40\x50\x2a\x35\x01\x4b\x8c\xf6\xa4\x3d\x83\xdd\x6e\x54\x14\xfc\x7e\x54\x14\xe0\x3c\x7a\x99\x7c\xf8\xfa\xf1\x11\xc6\xfb\xcf\xdf\xbe\x3c\x02\xe3\x4b\x93\x65\x68\x3d\x47\xe7\xc8\x3b\xbe\x76\xdc\x51\x12\xac\xf4\x7f\xa6\x6b\xc7\x20\x45\xe5\x68\x52\x0a\x8d\x62\x25\xc1\x1a\x45\x33\x96\x5b\x72\xa4\x4b\x11\xa3\x19\x24\x0a\x9d\x9b\x31\x61\x4d\x2e\xcc\x2f\xcd\xe6\x23\x00\x80\x18\x61\x65\x29\x9d\xb1\x35\x6e\xd1\x25\x56\xe6\xfe\xed\xd6\x48\x31\x7e\x35\x79\x68\xcd\x44\xde\x64\x99\x22\x90\x3a\x35\x91\x0e\x9b\x25\x59\x06\x02\x3d\xd6\x1b\x0d\x75\x40\x2b\x31\xa2\xdf\x39\x6a\x41\x62\xc6\x2a\x83\xf5\x33\xcb\xab\x28\x40\xa6\x60\x2c\x8c\xe9\x27\x4c\x9f\xea\x2c\x4f\x1e\x7d\x70\xc0\x4c\x4e\x9a\x4d\xfa\xf7\xbe\xa7\xc6\x26\xc4\xaa\xc0\xd0\xb8\x62\x79\xb0\x9c\x22\xa4\x18\x05\xad\x4c\xf2\x83\xcd\x63\x2e\xcf\x1e\x4d\xca\xd1\x4b\xb3\x3d\x93\x5a\x54\x94\x6f\xcf\x91\x28\xe3\x48\x74\x64\x70\x39\xea\x83\x95\x25\x8a\x8c\x60\x99\x45\x99\x25\xd2\x6c\xfe\x2e\xe6\xe5\x76\x97\xa5\x6a\x96\x63\x7d\xac\x41\xb5\x0e\x6f\x43\x3a\xc0\xf1\x2e\x38\xb2\xd5\x4a\x1e\x94\x8a\xac\xcc\x56\xbe\x75\x3c\x9a\xfa\x6c\xd7\x07\xd0\xf2\xae\x1a\xb4\x8e\x8b\x1d\x15\x3b\x94\x77\xb1\x42\x9d\xd1\x5e\x7b\x7c\xd7\xd4\xbe\x9b\x3c\xb0\xb6\x56\x3f\x20\x4b\xe2\x2c\x4a\x99\xe0\xf5\x1b\x0d\xac\x76\x3a\x85\xdd\xee\x39\xbc\x96\xea\x69\x6a\x51\x5a\xf9\xf7\xd4\x11\xf6\x69\x41\x5d\x52\x96\x2e\xaa\x8d\x52\x37\x99\xb6\x78\x5e\xce\xf2\xa4\xd8\x4d\x72\x78\x8a\xcf\x08\x7e\x2e\xbb\xdf\x3b\x70\x06\xef\x06\x70\xf5\x5b\x34\x10\xb4\xbd\xda\x35\xc0\xaa\xf7\xb2\x1b\x19\x06\x6f\xae\x22\xf6\x42\xe7\x86\x42\x56\x7d\x29\x0d\xd8\xb2\xff\x85\x6b\xc8\x82\xf5\x23\xe0\x45\x01\xd3\x85\xd9\xe4\x46\x93\xf6\x9f\x70\x53\xfe\x70\x70\x41\x5b\x99\x90\xe3\xb7\x05\x9f\xbe\xdf\xcb\x2c\x4c\xd0\xfe\xf2\xe0\xf5\xd4\xd5\xd9\x63\x1e\xd4\x7c\xb4\xbf\xbf\xe7\xd5\x9f\x8e\x1a\xc4\xdf\x00\x00\x00\xff\xff\x29\x66\xdd\x10\x95\x08\x00\x00")

func templatesViewsToolbarHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsToolbarHtml,
		"templates/views/toolbar.html",
	)
}

func templatesViewsToolbarHtml() (*asset, error) {
	bytes, err := templatesViewsToolbarHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/toolbar.html", size: 2197, mode: os.FileMode(420), modTime: time.Unix(1532284661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsDevicesJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x51\x6f\xdb\x36\x10\x7e\xef\xaf\xb8\xba\x01\x28\x21\xb1\xbc\x61\x18\x30\x28\x91\xf7\xd0\xf4\xa1\x40\xb1\x16\x68\xde\xda\x22\xa0\xc5\x93\xcc\x86\x26\x0d\x92\xb2\xeb\x15\xfe\xef\x03\x45\x49\xb5\x62\x4b\x72\x66\x77\xeb\x30\x3e\x18\x12\xc5\x3b\xde\xdd\xf7\xf1\xee\xe8\x8b\x80\xa9\xb4\x58\xa0\xb4\x61\xa4\x91\xb2\x4d\x90\x15\x32\xb5\x5c\x49\x08\x42\xf8\xfa\x0c\x00\x60\x45\x35\x58\x3a\x13\x78\x8b\x2b\x9e\xa2\x81\x04\x2e\x02\xf2\x82\x55\x6f\xe5\x27\x12\x96\x4b\xdd\x88\x6e\xa9\xa5\x77\x6e\x32\xf8\xda\x4c\xba\xb1\xa4\x39\xbe\x41\x99\xdb\x79\x0c\xbf\xfe\x74\xd5\xfa\x26\xa8\xcc\x0b\x9a\x63\x0c\x6d\x19\x37\x0a\x2d\x62\x20\x13\x46\xcd\x7c\xa6\xa8\x66\x13\x46\x2d\x2d\x77\x35\x13\xfe\xf3\x6f\x32\xfa\x6c\x94\x24\x2d\xb1\x6d\x5b\x3b\xfd\x4c\xbf\xf4\x68\x9e\xa9\x3c\xa7\xda\x4e\x2a\x8f\x26\xbf\xa3\xb4\xdc\x6e\x92\xea\x9d\x5c\xed\x09\x3a\x0b\xde\xeb\x34\x06\xe2\x9e\x7a\xf7\x4e\x95\x28\x16\xd2\xc4\xf0\x61\x4f\xcb\xbe\x41\xb5\xee\x18\x88\xdd\x2c\x0f\x6e\xed\x86\x46\xc9\x50\xc7\xf0\x0d\xab\x72\x75\xd8\xa1\x11\x2a\x10\x53\x25\x2d\x4a\x0b\x09\x10\x72\xfd\xac\x73\x69\xa6\x34\x04\x6e\x3d\x07\x2e\x61\x50\xb3\x77\xd2\x6b\xbe\x4c\x80\xdc\x98\x25\x95\x90\x0a\x6a\x4c\x32\x12\x74\x86\x02\xca\xdf\xb1\x29\xd2\x14\x8d\x19\x4d\x09\x5c\x7a\xb5\x1f\xf8\x27\xb8\x04\x72\x33\x71\x22\x53\x20\xd7\x9d\x9b\x6c\xbb\xcd\xd5\x68\x0b\x2d\x6b\x13\x0e\xab\xd8\xee\xcd\x6e\xf7\x23\xdb\x0b\x07\x67\x1d\x58\xac\xb8\xe1\x33\x81\x31\x64\x54\x18\x3c\x79\x1f\x86\x26\xd5\x7c\xe9\x50\x25\x27\x2b\xb3\xd4\x3c\x98\xfb\x54\x15\xd2\x9e\xae\x0c\xa5\x3b\x72\x5d\x61\xd8\xa7\xa4\x13\xbb\x2a\x71\xbe\x02\xad\xd6\x47\x92\xb3\x87\x97\x3c\x83\x40\xab\x75\x54\x19\x72\x2c\x27\x1d\x25\x67\x85\xb5\xca\x73\x39\x19\xf9\x97\x51\x4d\xd1\x99\x95\x30\xb3\x72\xcc\xa8\xcc\x51\x97\x8f\x3c\x75\xdf\x9d\x03\x63\xab\xf2\x5c\x60\x32\x5a\x28\x46\x45\x3d\x47\x75\x8e\x36\x19\xbd\xd8\x9d\x2c\x9f\xc7\x96\x5b\xb7\xfa\xa5\x92\x19\xd7\x0b\x60\xdc\x38\x5b\xc1\x67\x12\x78\xe1\x98\xef\x5c\xe0\xcc\xf1\xbe\x25\x99\x52\x21\x66\x34\x7d\x48\x46\x7e\xf1\x5d\xb9\x71\xf0\x91\xd4\x32\x1a\x73\x6e\x2c\xea\x7b\x2f\xfc\x91\x84\xd7\xe5\x51\xea\x0d\x82\x1b\xe4\x86\xd7\xbe\xe6\x62\xb3\x9c\x3b\xef\xa0\x79\x1a\x6b\x5c\xa8\x15\x8e\xa0\x32\xfd\xb6\x65\xf2\x68\x7a\x33\xe1\xd3\x7d\xf2\xd4\x63\x0b\x28\x0c\x9e\x19\x89\x2a\x51\x9c\x17\x0a\xcf\x9a\x1f\x1a\x09\xf5\xd0\xa0\xf0\x4a\x3e\x05\x84\xc1\xe4\x48\x6e\x18\x5f\xed\x84\x79\x9c\x6b\x55\x2c\xa1\x79\x1a\x7f\xa9\xd2\x72\x93\xc8\x5d\x56\xf6\xf0\x0c\x7a\x76\x1c\xa8\x5c\x66\xaa\x41\xb4\x72\x6c\x9c\xce\x31\x7d\x18\x4d\x87\x08\x9a\x69\x34\xf3\x26\x36\x2f\x2b\xa1\x09\x9f\x9e\xd9\xc6\x35\xd5\x92\xcb\x7c\xcf\xcc\x25\x97\xf9\xb0\x95\x86\xff\x89\x63\xb3\xa0\x42\x34\xa6\xbe\xf3\x82\x4f\xb3\x74\xc2\xf8\x6a\xda\x51\x0b\x0f\x14\xb2\xd6\xcc\xa7\xe6\x6d\x1b\x56\xa9\xb4\x69\xdf\xde\x38\xd2\x4a\xd4\x75\x03\x27\x9a\xf7\xa3\x5b\xb8\x1f\xb2\x4d\x6b\xfc\xf8\x77\x1a\x35\xce\x4e\xaf\xad\x92\x2e\xf0\x0c\x15\x7a\x85\xd2\x1e\xdf\x33\x3a\xa9\x73\xb7\x8c\xa5\x09\xaf\x99\x6b\x1c\x87\xd4\xc3\xb1\x7d\xa3\xcb\x1c\x3e\x3b\x39\x95\x1f\xaa\x2d\xfe\x33\x9d\x63\xc6\x35\x9a\xd3\xc1\x75\x6a\xee\x33\xae\x8d\x7d\x0a\xc0\xd8\x87\x80\x6b\xa8\x9e\x0f\x2d\x82\x9d\x2a\x72\x52\x98\xdd\x46\x77\xea\xbd\xd5\x5c\xe6\xde\xb4\xef\x19\xf1\x7b\x41\xff\x8f\x91\x1a\x2a\x06\x7b\x17\x77\xb0\x33\xc5\x36\x24\x8c\x94\x0c\x48\x2a\x78\xfa\x40\xae\x80\xf8\x5a\x15\xed\x56\x69\x72\xb5\x13\xaf\x56\x1c\x30\x5a\xea\xf2\x50\xde\x62\x46\x0b\x61\x83\x1d\x73\x5d\x4e\xf0\x5a\x5e\x33\x48\x5a\x7f\x23\x44\x5a\xad\x83\x8b\xc0\xce\xb9\x09\xa3\x54\x28\x83\xc6\x06\xc4\x6a\x12\x86\x91\x03\x32\x08\x77\x1b\xad\x9d\xe4\x73\x11\xb9\x42\xf1\xa8\x32\xb9\xba\x1e\x03\x79\xf7\xf6\xfd\xdd\x23\xd4\x3b\xaa\x47\x99\x4f\x6a\xcb\x2e\x81\x4c\x2a\x2f\x5b\xb2\x55\x27\xfa\x8d\x2a\xc1\x21\x02\xb4\xbc\x72\xb6\x45\x1a\x85\xa2\x2c\x78\x84\xdb\xb6\x85\xc7\xe9\xb8\xb8\xb6\xe4\x54\x58\x9e\x0c\xca\x77\x04\xe2\x71\x63\x3d\xf1\x0e\x0e\x20\xa2\x0f\x41\x52\xde\x15\x4b\x8b\xe1\x79\x92\x00\x29\x24\xc3\x8c\x4b\x64\xa4\xeb\x04\x97\x47\xdc\x8b\xf4\x1d\x72\x89\x6b\x78\xf7\x87\xb2\x3c\xdb\x04\xfd\xa9\xa0\x6c\x01\x63\x20\x6f\xb3\x4c\x70\x89\x1d\xb9\xa8\x59\x8d\x5f\x6c\x0c\xc4\xc3\x00\x3b\x31\xf1\xa1\x00\x6e\x40\x1d\xa7\xc8\xc7\x1f\xb5\x56\x7a\x60\xa9\xb1\x1b\xc1\x65\x1e\x03\x99\x29\x65\x8d\xd5\x74\xf9\x4b\xcf\x2d\xa3\x2b\x0b\x0d\x5d\x01\xff\x46\xc8\xe4\x99\x22\x76\x94\x1e\x1f\xb0\x8a\x58\xff\x4c\xc8\x06\x12\x77\x4f\xa2\x58\x73\xc9\xd4\x3a\xda\xbd\x99\x42\xf2\xed\x30\xd4\x19\x6d\x97\xc2\xdf\x29\x5f\xfa\xeb\xf8\x29\xc7\x53\xa3\x29\x84\x85\xc4\x1d\xd0\x8c\x72\xd1\x73\x3a\x8f\xe3\x50\xcd\x9f\x57\x03\xe4\xf7\xd4\xd1\xd1\x02\x8d\xa1\x39\xf6\x2c\x3c\xee\x30\xcd\x39\xab\xff\x00\xec\x5e\x74\x3c\x75\xba\x68\xe3\xdb\x83\x03\xdc\x39\x67\x45\x7a\xb6\x0d\xaf\xff\x0a\x00\x00\xff\xff\x48\x31\x9e\x90\x16\x18\x00\x00")

func assetsJsDevicesJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsDevicesJs,
		"assets/js/devices.js",
	)
}

func assetsJsDevicesJs() (*asset, error) {
	bytes, err := assetsJsDevicesJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/devices.js", size: 6166, mode: os.FileMode(420), modTime: time.Unix(1531045298, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsSecurityJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x0a\x83\x30\x0c\x86\xef\x3e\x45\x0e\x42\x23\x48\xbd\x4f\x76\xda\x23\xec\x09\xb2\xb6\x73\x82\x6b\x46\x9b\x22\x22\xbe\xfb\xe8\x5c\x37\x73\xfa\x48\xfe\xff\x23\x35\x5a\x36\xe9\xe9\xbc\x34\x3a\x38\xb2\x0b\xde\x93\x37\x32\xb2\x07\x6c\x60\xad\x00\x00\xe6\xd1\x5b\x9e\x75\x74\x26\x85\x51\x96\xcb\x83\xfc\xe0\xae\x42\x92\x22\x9c\xa1\xe4\x31\x7e\x36\xa5\x94\xa7\xd6\x2f\x8e\x82\xaa\xbb\xf1\x30\x50\x90\xae\x28\x3a\xd5\xc2\xaa\xf6\x82\x3a\xc1\x0e\x5b\xfb\x77\x1d\x2d\x87\x17\x26\x36\x94\xef\x3a\xb8\x89\xc9\x62\xd3\xff\x52\xdb\x97\xb7\xbe\xca\x58\xbd\x03\x00\x00\xff\xff\x84\x78\x2f\xca\xd9\x00\x00\x00")

func assetsJsSecurityJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsSecurityJs,
		"assets/js/security.js",
	)
}

func assetsJsSecurityJs() (*asset, error) {
	bytes, err := assetsJsSecurityJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/security.js", size: 217, mode: os.FileMode(420), modTime: time.Unix(1530953840, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesBoggartMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x3f\x6f\x13\x4b\x14\xc5\x4f\xfc\xf2\x5e\xe1\xc7\x1f\x81\x28\x29\x6e\x0a\x22\x10\x9a\xb0\x6b\x13\x29\xda\x64\x13\x44\xfe\x48\x88\x58\x44\xc1\x50\xd1\x0c\xf6\x60\xaf\xf0\xce\x58\xb3\xb3\x11\x91\x22\x14\x82\xa8\x40\xa2\x40\x74\x08\x8a\x34\xa1\x8b\x02\x91\x12\x25\x36\x15\xfd\xdd\x82\x96\x86\x8f\xc0\x17\x40\x5e\x2f\x44\x9c\x66\xce\x4f\xf7\x9c\x3b\xf7\xfb\xf9\xd1\xb7\x00\xf0\x1f\x80\x8b\x00\x96\x01\xfc\x0f\x60\x03\x43\xed\x00\x38\x03\xe0\x23\x80\x53\x00\x0e\x00\x9c\x05\xf0\x15\xc0\x69\x00\xdf\x0a\xfe\x01\xa0\x3d\x02\xfc\x04\x30\x06\xe0\x41\x09\xb8\x00\xe0\x69\xf1\xbe\x29\x0d\xfb\x3b\x25\xe0\x1c\x80\xfd\x12\x30\x52\xfc\xf1\x2f\x80\x7f\x70\xa2\x52\xf1\x8e\x16\x77\xe5\x8a\x95\x4e\x47\x17\x64\xd2\x7e\x68\xa4\x6d\x16\xa8\xd6\xa2\x86\x4a\x86\x50\x33\x3a\x72\xc6\x46\xba\x35\xe4\xbb\xaa\x91\xda\xc8\xad\x17\x14\x4b\xeb\xa8\x6d\x62\x85\x55\xd5\x35\xd6\x89\x5a\xd2\x8a\x9a\xe2\x66\xda\x4a\x44\xdd\x04\xd4\x54\x6b\x37\x1e\x47\x6d\x19\x9b\x09\x9b\x96\x57\xee\xd4\xc5\xbc\x55\xd2\x45\x46\x8b\x05\xe9\x54\x40\x15\xcf\x9f\x12\x5e\x55\x54\xaa\x54\xa9\x06\x93\x93\x57\xbd\xaa\xe7\x95\x97\x65\xe2\x44\xdd\x4a\x9d\x74\xa4\x33\x36\xa0\xdb\xf9\x0e\xaa\xa5\x56\xc6\xa6\x69\x68\xe6\xaf\xc5\xb3\xe5\x65\xa9\x5b\xa9\x6c\x29\x51\x57\x32\x0e\xe8\x0f\x07\xb4\x9a\x26\x49\x24\x75\xb9\x76\xab\xb6\x28\xee\x2b\x9b\x44\x46\x07\xe4\x4f\x78\xe5\x79\xa3\x9d\xd2\x4e\xd4\xd7\xbb\x2a\x20\xa7\x9e\xb8\x6b\xdd\x8e\x8c\xf4\x34\x35\xda\xd2\x26\xca\x85\xf7\xea\x4b\x62\xea\x24\x37\xb8\xe7\x91\xb2\x62\x51\x37\x4c\x33\xd2\xad\x80\xca\x2b\x9d\xd4\xca\x8e\x58\x32\x36\x4e\x02\xd2\xdd\x1c\x93\xb0\x3a\x4d\x43\x1b\xea\x4b\xbe\x17\x86\x3e\x8d\x8f\xd3\xc0\x7a\x63\xa1\xef\xd3\x1c\x79\x14\xe4\x3c\x1b\x56\x7e\x8f\x66\xc2\xeb\x03\x7b\x39\x8f\xcd\xf8\x1e\x6d\x6c\x0c\x2b\xb3\x61\xc5\xbb\x42\x73\xe4\x53\x40\x95\x69\xf0\x07\xde\xe5\x1e\xef\xf3\x51\xf6\x8a\xb2\xe7\xfc\x25\xdb\xe4\x5d\xde\xe3\x23\xde\xe7\x1e\x1f\x64\xaf\xc1\xdb\xd9\xb3\x6c\x2b\xdb\xe4\x3e\x1f\x0e\x1c\xef\xf1\x2e\xf8\x1d\xf7\xf3\xf9\x16\xf7\xb3\x4d\x3e\xe0\x1e\x7f\x02\xbf\xcf\x5e\xe4\xf5\xde\x20\xb1\xcd\xc7\xdc\xcb\x5e\xf2\x21\xf1\x67\xee\xf3\x31\x7e\x05\x00\x00\xff\xff\x45\x49\x1e\x80\xc7\x02\x00\x00")

func localesRuLc_messagesBoggartMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesBoggartMo,
		"locales/ru/LC_MESSAGES/boggart.mo",
	)
}

func localesRuLc_messagesBoggartMo() (*asset, error) {
	bytes, err := localesRuLc_messagesBoggartMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/boggart.mo", size: 711, mode: os.FileMode(420), modTime: time.Unix(1532285215, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesDevicesMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\xcf\x4f\x2b\x55\x14\xfe\xe6\x4d\x9f\xfa\xc6\xe7\x8f\xbc\x68\xdc\x68\x72\x5d\x48\x34\x66\x70\xa6\x95\x84\x0c\x0c\xa0\x14\x12\x22\x55\x24\xd5\xfd\xa5\xbd\x94\x09\xed\x4c\x9d\x3b\x45\x4d\x30\x01\x8c\xc1\x48\x82\x09\xc1\x1f\x89\x51\x82\xec\xdc\x58\x09\x0d\xc5\x4a\x59\xba\x31\xf1\x5c\x37\xee\xfc\x1b\xfc\x13\xcc\x9d\x19\x30\xbc\xbb\x98\x73\xbe\x7b\xbe\xf3\x9d\xef\xdc\xcc\x3f\x0f\x0a\x5f\x01\xc0\x53\x00\x9e\x07\x70\x08\xe0\x39\x00\xf7\x0d\xa4\x67\xcd\x00\x1e\x05\x10\x18\xc0\xe3\x00\x3e\xc8\xf1\x27\x06\xf0\x18\x80\xcf\x72\xbc\x6f\x00\x8f\x00\xf8\xda\x00\xee\x02\xf8\x3e\xe7\x9f\x18\xc0\x1d\x00\x3f\x1b\x80\x05\xe0\xd4\x00\xee\x01\xb8\x34\x80\x02\x80\xdf\x73\xfe\x1f\x39\xfe\xcb\xc8\x66\xfe\x6d\x00\x4f\x03\x98\x31\xb3\xf8\xae\x09\x3c\x03\x60\xc5\x04\x1e\x00\xf8\x30\xbf\xff\xc2\x04\x9e\x04\xf0\x9d\x09\xdc\x07\xf0\x93\x99\xf9\x3f\x37\xb3\xb9\x7f\x9a\xc0\x0b\x5a\x37\xef\xfb\xd7\xcc\x7c\x9a\x85\xcc\x8f\x55\xc8\xf0\xb3\x05\x20\x5f\x39\x3d\x7a\x37\x33\xcf\xb5\xbe\xf6\x76\x2f\x7f\x27\x7d\xf4\x2c\xdd\x67\xe5\x58\xbf\x81\xde\xf7\x4e\x8e\xef\xe6\xf1\x89\x6b\xc1\x37\x6a\x49\x10\x85\x12\x65\x21\x6b\x71\xd0\xd6\x00\x65\xb1\x11\xd4\x84\x44\x39\x90\x7c\xa5\x29\xea\x98\x0b\xf3\xb8\x21\xc2\x44\x62\x3e\x88\x45\xfa\x95\x09\x5b\x0d\x62\x51\xc7\x42\x19\x8b\xfc\x06\x2d\x06\x32\x11\xa1\x88\x25\xde\xe6\x2d\x81\x2a\x97\xeb\x12\xd5\x8f\xdb\x02\xcb\xa2\x1d\xc5\x89\x5d\x91\x8d\xa0\x6e\xbf\xd9\x69\x48\xbb\x1a\x79\xac\x2e\x36\x66\xd6\x83\x35\xde\x8a\x46\xe3\x8e\xb5\xf4\x4e\xd5\x9e\x8d\x05\xd7\x56\xec\x32\x4f\x84\xc7\x8a\x8e\x3b\x6e\x3b\x25\xbb\x58\x62\xc5\x92\x37\x36\xf6\xaa\x53\x72\x1c\x4b\x4f\xb4\xab\x31\x0f\x65\x93\x27\x51\xec\xb1\xb7\x52\x0d\x56\xe9\xc4\xbc\x15\xd5\x23\x36\x79\x4b\x78\xca\x5a\xe4\x61\xa3\xc3\x1b\xc2\xae\x0a\xde\xf2\xd8\x0d\xf6\xd8\x72\x47\xca\x80\x87\x56\x65\xa1\x32\x67\xbf\x2f\x62\x19\x44\xa1\xc7\xdc\x51\xc7\x9a\x8d\xc2\x44\x84\x89\xad\xed\x7b\x2c\x11\x1f\x25\xaf\xb5\x9b\x3c\x08\x27\x58\x6d\x8d\xc7\x52\x24\xfe\x7b\xd5\x79\x7b\xfc\x7f\x9e\xf6\xb3\x2a\x62\x7b\x2e\xac\x45\xf5\x20\x6c\x78\xcc\x5a\x6a\x76\x62\xde\xb4\xe7\xa3\xb8\x25\x3d\x16\xb6\x53\x28\xfd\xd2\x04\xcb\x52\x3f\x7c\xc9\x75\x7c\xdf\x65\x23\x23\x4c\xa7\xce\x8b\xbe\xeb\xb2\x69\xe6\x30\x2f\xc5\x53\x7e\xf1\xba\x34\xe9\xbf\xae\xd3\x97\x53\xda\xa4\xeb\xb0\xcd\xcd\xac\x65\xca\x2f\x3a\xaf\xb0\x69\xe6\x32\x8f\x15\x27\x40\x87\xd4\xa3\x0b\xb5\xad\x76\xe8\x94\xfa\xea\x4b\xd0\x0f\x74\x45\x7d\xb5\x4d\x5d\xba\xa4\x3e\xf5\x40\x27\xba\xaa\xb6\x68\x78\xc3\xeb\x82\x0e\xd4\x1e\xfd\x4a\x03\xb5\xaf\x76\xa9\x47\x97\x34\x04\x1d\x3c\x7c\x71\x4c\x43\xfa\x45\xed\xa9\x9d\x4c\x58\xb7\x9c\xd3\x90\x4e\xd5\x1e\xe8\x88\x7a\x6a\x4b\xa7\x74\xc1\xd2\x90\x56\xf4\xff\x41\x47\x34\x54\xdb\x34\xa0\x1e\x9d\xa5\x16\x6e\x11\xe8\x98\x06\xea\x53\xf5\x39\x75\xd5\x0e\xf5\x68\x40\x7d\xd0\xb7\xf4\x9b\xd6\xff\x86\xba\x74\x46\x5d\xb5\x0b\xfa\x91\xfa\x74\x85\xff\x02\x00\x00\xff\xff\xc7\xff\x7a\x4d\x1c\x04\x00\x00")

func localesRuLc_messagesDevicesMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesDevicesMo,
		"locales/ru/LC_MESSAGES/devices.mo",
	)
}

func localesRuLc_messagesDevicesMo() (*asset, error) {
	bytes, err := localesRuLc_messagesDevicesMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/devices.mo", size: 1052, mode: os.FileMode(420), modTime: time.Unix(1532285215, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/devices.html": templatesViewsDevicesHtml,
	"templates/views/index.html": templatesViewsIndexHtml,
	"templates/views/toolbar.html": templatesViewsToolbarHtml,
	"assets/js/devices.js": assetsJsDevicesJs,
	"assets/js/security.js": assetsJsSecurityJs,
	"locales/ru/LC_MESSAGES/boggart.mo": localesRuLc_messagesBoggartMo,
	"locales/ru/LC_MESSAGES/devices.mo": localesRuLc_messagesDevicesMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"js": &bintree{nil, map[string]*bintree{
			"devices.js": &bintree{assetsJsDevicesJs, map[string]*bintree{}},
			"security.js": &bintree{assetsJsSecurityJs, map[string]*bintree{}},
		}},
	}},
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"boggart.mo": &bintree{localesRuLc_messagesBoggartMo, map[string]*bintree{}},
				"devices.mo": &bintree{localesRuLc_messagesDevicesMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"devices.html": &bintree{templatesViewsDevicesHtml, map[string]*bintree{}},
			"index.html": &bintree{templatesViewsIndexHtml, map[string]*bintree{}},
			"toolbar.html": &bintree{templatesViewsToolbarHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
