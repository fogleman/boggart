// Code generated by go-bindata.
// sources:
// templates/views/config.html
// templates/views/devices.html
// assets/js/devices.js
// assets/vendor/clipboard.js/clipboard.min.js
// locales/ru/LC_MESSAGES/boggart.mo
// locales/ru/LC_MESSAGES/devices.mo
// DO NOT EDIT!

package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsConfigHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x4c\xb9\x05\x2c\x03\xb5\xd8\xee\xa9\xc8\xca\x02\x8a\x5c\x8a\x22\xdb\x43\xd3\x1e\x7a\x5a\x50\xe4\x48\xa2\x43\x73\x08\x92\x96\x63\xb8\xfe\xef\x05\x65\xcb\x56\x1c\xb9\x5d\x2c\xc2\x13\x25\xbe\xf9\x78\x9c\x79\x9c\xfd\x1e\x14\xd6\xda\x22\x30\x49\x36\xa2\x8d\x0c\x0e\x87\x3b\x00\x80\xfd\x1e\x74\x0d\x96\x22\xe4\x6b\x52\xc2\x0c\xff\x8b\x20\xbd\x76\x11\xe2\xce\xe1\x92\x09\xe7\x8c\x96\x22\x6a\xb2\x7c\x25\x3a\x71\x3c\x64\x65\x0f\x4d\xeb\xfb\x4c\x91\xdc\xac\xd1\xc6\x79\xee\x51\xa8\x5d\x56\x6f\xac\x4c\x78\xc8\xe6\xb0\x3f\xe3\xd2\xd2\x75\xf6\x60\xb4\xab\x48\x78\xf5\xdb\x53\xae\xc3\xd3\xc6\x39\xf2\x11\x55\x36\xbf\xc6\xa6\xd5\x09\x0f\xb2\x82\x25\x58\xdc\xc2\xc8\x32\x63\x1f\x24\xb9\xdd\xa2\xda\xc4\x48\x96\xcd\x3f\xbd\xb1\x94\x55\x4e\x36\x9b\x85\x8d\x94\x18\xc2\xec\x07\x18\x92\xca\x70\x2a\xd0\x91\xc8\x6c\xec\x75\x36\xcf\x23\x91\x89\xda\x65\xd3\xf8\xb4\xa2\x8e\x06\xef\x61\x96\xee\xf2\xa7\x9f\x2d\xb0\x07\xb2\xb5\x6e\x40\x92\xd3\xa8\x18\xe4\x70\x38\xcc\x26\xad\x0f\x17\xf7\xb3\xd0\xd2\x76\x36\x41\x22\x2d\xcc\xa5\x41\xe1\x9f\xd0\xe0\x31\xff\x09\xdc\xe1\xf6\x05\xa0\xf7\xe4\xbf\x8a\xfe\xb7\x04\x3a\x00\x9a\x80\x13\x0e\xdf\xde\x65\xab\x15\x5e\xbb\x3c\xdc\x5d\x3b\x2e\xf8\xb1\xbf\x8e\xed\x55\x28\xdd\x81\x34\x22\x84\x25\xf3\xb4\x65\xa0\xd5\x92\x29\xec\xb4\xc4\x30\xea\xc0\x31\xec\xe5\x8b\x13\x16\xcd\xe8\xf4\x2d\xa2\x2f\xda\x15\xa2\x47\xb5\x1f\xcb\xeb\x42\xfe\xfd\xcb\xe7\xc7\x63\x19\x0b\xde\x7e\x9c\xb0\xd9\x98\xc1\xb1\x15\x1d\x58\xd1\x55\xc2\x2f\xbc\x6e\xda\x08\x7d\x26\x5f\x52\x95\x2b\x7a\x99\x88\xd7\xdb\x1b\x5d\x16\x62\x70\x21\xc9\x18\xe1\x02\x2e\x8c\xb6\xcf\xac\x2c\xf4\x70\x50\x0b\xa8\xc5\x42\xb6\xd8\x79\xb2\x8b\x8d\x63\x65\xc1\x75\x59\x70\x51\x16\xdc\xe8\x9b\xae\x07\x73\xe5\xc9\x29\xda\xda\x1b\x49\xf4\x68\x01\xad\xc7\x7a\xc9\x2e\x22\xbf\xef\x48\xab\xec\xc7\xf9\x27\x06\x4a\x44\xb1\x70\x46\x48\x4c\x42\x5f\xb2\x8a\x62\xa4\xf5\xe9\xbf\x1c\x84\xb9\x10\x7d\xe7\x24\x1e\x6e\xf7\xe6\x30\x0a\xdf\x60\x5c\xb2\x0f\x3b\xb1\x36\xc7\x5a\x8e\x45\x3c\x62\xdb\x98\x9d\x6b\xb5\x24\x0b\xe7\xdd\xa2\x77\x79\x66\x3d\x4d\xf8\xbd\xaf\x82\x57\xd4\x34\xc2\x47\x2e\xfb\x66\xe0\xc9\xce\x90\x50\x27\x6a\x91\x9a\xc6\xe0\x92\x9d\x74\xcc\x8e\xaf\xc1\x92\x4d\xf5\x10\x5c\x6c\x53\x33\xfd\x1f\xdb\x01\xbd\x10\x26\x7e\x13\xeb\x82\x6f\xcc\xc4\xdf\x91\x0e\x7a\xb5\xd7\xfa\x25\xb9\x57\xba\xbb\x12\xcc\xc4\xaf\x57\x1a\x1a\x86\x49\x39\x8c\x92\xfe\x21\x38\x4f\x90\xb8\x33\x78\x1a\x20\x11\x5f\x22\x97\x61\x2c\xd8\x8a\xd4\x0e\xf6\x50\x09\xf9\xdc\x78\xda\x58\x75\x0f\x96\x2c\xc2\x77\x7a\x9d\xa6\x81\xb0\xf1\xf4\x34\x14\xbc\xf7\x74\x09\x62\xd5\x10\xe3\x9c\x96\xf3\x58\x16\x92\x14\x0e\xc9\x5d\xda\xab\xdf\x25\x49\xe7\x69\xf7\x8f\x17\xdb\x5e\xc7\x09\x5c\x16\x3c\x19\xde\x4d\x10\xbe\x35\x17\xaf\x60\xaf\x2d\x4e\x99\x5d\x76\x77\xa3\xc9\xdb\x62\xaa\xfb\x65\xec\x86\x28\xa2\x96\xbf\xfe\xf9\xf9\x11\xb2\xe3\xfe\xaf\x3f\x1e\x81\x71\x25\x42\xdb\x6b\x85\x8b\x10\x30\x06\xde\xa1\x55\xe4\x03\x6f\x75\xd3\x9a\xf4\xa6\xac\x42\xba\x4a\x1e\x69\x4d\xde\xd3\x36\x5f\x6b\x9b\xa7\xbb\x85\x5a\x98\x80\xf3\xdb\x29\xac\xc2\xbb\x25\xb0\x1a\x7d\xe6\x4e\xc8\xe7\x3e\x8b\xd5\xab\x24\xfe\x33\x4e\xe6\xbc\xb6\x11\x18\x67\x90\x3f\xd0\xda\x91\x45\x1b\x7f\x17\x6b\x04\xf6\x3a\x2e\x3f\x3f\x1e\x79\x22\x7e\xfe\x38\xc5\x9b\x4f\xb1\xfe\x37\x00\x00\xff\xff\xc5\xa3\xd4\xcb\xf1\x08\x00\x00")

func templatesViewsConfigHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsConfigHtml,
		"templates/views/config.html",
	)
}

func templatesViewsConfigHtml() (*asset, error) {
	bytes, err := templatesViewsConfigHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/config.html", size: 2289, mode: os.FileMode(420), modTime: time.Unix(1547246405, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsDevicesHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xc1\x8e\xdb\x46\x0c\xbd\xe7\x2b\x88\x29\x5a\x24\x07\x59\xbb\x41\x0e\x45\x6a\x19\x28\x92\x06\x2d\xb0\x29\xd0\xd6\x3d\xf4\xb4\xa0\x34\x94\x34\xde\xd1\x8c\x3a\x43\x79\x6d\x18\xfb\xef\x85\x24\x5b\x2b\x7b\xa5\x75\xec\x78\x73\xea\xc9\x96\x44\xf2\x91\x8f\x7c\xd4\x68\xb3\x01\x49\xa9\x32\x04\x22\xb1\x86\xc9\xb0\x80\x87\x87\x57\x53\xa9\x96\x90\x68\xf4\x3e\x12\x85\x95\xa8\x21\x45\x49\x02\x94\x8c\x6a\xbb\x54\x65\xc1\x1a\x0b\x2d\x80\x31\x56\x46\xd2\x2a\x12\xc1\xb5\x00\x67\x35\x45\x42\x2a\xd4\x36\x13\x80\x4e\x61\x90\x2b\x29\xc9\x44\x82\x5d\x45\x62\xf6\x0a\x00\xe0\x49\xf0\xa0\xf5\x80\xf6\x42\x67\x5b\xbb\x61\xdb\x5d\x9a\x8f\x36\xc3\x76\x39\xa1\x24\x77\x60\xd6\x98\xc6\x15\xb3\x35\xc0\xeb\x92\x22\xd1\x5e\x88\x9d\x6f\xa2\xad\x27\x01\x12\x19\x03\xa9\x7c\xa1\xba\x80\x83\xf5\xfc\xc0\xaa\x20\xff\xd3\x34\x6c\xc3\x0c\x80\xe5\xef\xf6\xd3\x62\xc5\x9a\xc4\x6c\xb3\x01\x75\xfd\xa3\x01\xf1\xa1\x61\x13\xfe\xf9\xf9\xf3\x8d\x80\x09\x3c\x3c\x4c\xc3\xfc\xdd\x41\x6d\xa1\x54\xcb\x63\xe5\xc6\x56\xae\x87\x8a\x55\xa9\xc3\x82\xc0\xbb\x24\x12\x61\x6c\xb3\x0c\x1d\x87\x6d\x0b\xc3\x6d\x5d\xf7\x4a\x72\x1e\x89\xeb\xab\xab\xef\x05\x34\xe6\xb1\x75\x92\x5c\x24\xae\xc4\x6c\x1a\xb6\x11\xce\x48\x29\xb5\x96\x87\x3b\x80\x90\x3b\x4a\x9f\x26\x24\xed\xbd\xd1\x16\x65\xd7\x8e\x98\x0d\xc4\x6c\x02\x5f\x25\x09\x79\xdf\xe3\xed\x63\x67\xda\x92\x86\x27\x36\x7a\x17\x59\x52\x8a\x95\xe6\xe1\x96\xf7\xda\xd4\xce\x45\x8b\x35\xd4\xec\x03\x46\x7a\x97\xdb\xbf\xdb\x9f\x3d\x69\x39\x7b\xdf\x6a\x4a\xd2\x52\x25\xe4\x07\x04\xb2\xba\x2d\xd1\x90\x1e\x91\xc4\xea\x76\x3b\x4f\xfb\xb9\xe4\x6f\x7b\x44\x6d\x43\xef\x86\xeb\xed\x81\x6d\xa5\x77\xc1\x0c\x2e\xc1\xe0\x32\x46\x17\x38\x95\xe5\x0c\x0d\xf2\x2d\x5b\xab\x63\xbb\x1a\xea\xa3\x56\xb3\x29\x76\xd2\xb1\x5a\x63\xe9\x29\xd0\xca\xdc\x89\xd9\x54\xed\x1e\xa4\x08\x29\x06\x49\x4e\x4b\x67\x4d\x50\x95\xcd\x50\xcd\xea\x96\x4d\x43\xad\x86\xc3\x3e\xb9\xb9\x37\x37\x0b\x5c\xa2\x4f\x9c\x2a\xf9\xfd\xd2\x2a\xf9\xfa\xea\xcd\xb6\x7f\x6c\xb3\xac\x5e\x41\xdb\xc9\x6e\xef\xa1\xcb\x88\x23\xf1\xdd\xde\xe2\x6a\x1e\xf5\x24\x19\x89\x71\x49\x0e\x94\xde\xa5\xd4\x55\x99\xe9\x75\x99\xab\xc4\x1a\xe8\xfe\x05\x5a\x79\x0e\xb0\x9b\xae\x5d\x76\x35\xa3\xac\x4a\x01\xc7\x91\x5b\xc7\x52\x63\x42\x05\x19\x8e\x44\x6c\x99\x6d\xd1\x52\x38\x4c\xd2\xa0\x14\xce\x24\x7a\x5c\xa0\xcf\xa4\x0e\x72\x4f\x9b\x63\xc5\x8f\x55\x76\x26\xd7\x3b\xd0\x86\xef\xaf\xa6\x67\x1a\x56\x7a\x7c\xbf\x25\x9a\xd0\xa5\x6a\x55\xe3\x8c\xc9\xfe\xd0\x67\x75\x7b\xfc\xcd\xc5\x18\x6b\x0a\x1c\xf9\xd2\x1a\xaf\x96\x87\xba\x6e\xcc\x1b\x9b\x3d\x07\x68\xdd\x3c\x3b\x55\x92\x04\xc9\xbd\x08\x60\xec\xbd\xc3\x52\x80\xe7\x75\xcd\x7e\xb3\xeb\xdf\x37\xab\x7e\x84\x1f\xae\x5f\x9c\x63\xcf\xdc\x33\xdd\xe1\xbc\x5b\xff\x32\x48\xac\x0e\xae\x7b\xfb\x73\xbe\x2e\xbb\xf5\xc9\xf9\xb3\x51\x7a\x4e\x98\xf9\x2f\x74\x7a\x06\xfa\x2f\x46\xae\x2e\x10\x67\x8e\xfe\xce\x43\x62\xab\xfa\x8c\xf4\xb5\xc1\x3e\xff\x31\x9f\x03\xdb\x52\x25\x17\xc8\xac\x09\xe6\xab\xb8\x5e\x89\x31\xb9\x2f\x8d\xd8\xa3\x88\x9c\x42\x0d\xa6\x2a\x62\x72\xe7\xe5\xf3\xb6\x97\xcf\x6f\x1f\x4f\xce\xe0\x23\xb5\xfb\x5c\xd5\xaf\xe8\x93\xc7\xc4\xdf\x9d\x5e\xf3\xe9\x1d\xb8\x20\xe1\xed\xb6\x3c\xe6\x36\x0d\xc7\x04\x57\xfb\x0c\xca\x74\x1a\x36\xcb\xe0\x92\x67\x93\xfa\x25\x46\xa6\xae\xf2\x72\xa7\x93\xc3\xc3\x81\x24\x4c\xdb\xa5\x0d\x1d\x47\x37\x1d\xee\xd8\xd1\xe5\xff\x8d\x7c\x6c\x23\x3f\x4e\xdc\xef\x58\x9c\xbe\x80\xcf\x10\xf2\x27\xe5\xe8\x74\x3d\x7c\x52\xce\x33\xa4\xca\x91\x3c\xd9\xf7\x06\xcf\x76\xfd\x65\x49\x86\x8f\x66\xfb\xad\x65\xb8\xd9\x00\x19\x59\x7f\x86\xbf\xea\x7d\x9e\xd7\x40\xcd\xb7\x79\xed\xb0\xd9\x80\x67\x64\x95\xfc\x3a\xff\x7c\x03\xaf\xdb\xff\x7f\xff\x79\x03\x22\x94\xe8\xf3\xd8\xa2\x93\x21\x7a\x4f\xec\xc3\x25\x19\x69\x9d\x0f\xeb\xf3\x56\x93\x95\x9f\x18\xe2\x20\xf6\x61\xe2\xdb\xbb\xf3\xf6\x6e\x6c\x2d\x7b\x76\x58\x4e\x0a\x65\x26\x89\xf7\x02\x52\xd4\x9e\xde\x5c\x10\xf5\x51\x07\xbb\x04\x1e\xef\xbc\x4c\x02\xb9\xca\x72\x5d\x7f\xce\x2c\x5a\x3c\xb6\x85\x75\xce\xde\x0f\x61\x0c\x33\xbf\xf0\x17\xe4\x3d\x5c\xf8\x70\xf1\x6f\x45\x6e\x3d\xe9\x51\x5f\xe7\xb2\x78\x09\xbe\x63\x5f\x03\x8e\x36\xf9\x45\x30\x1f\x3b\x7a\x80\xdd\x6b\xf5\x37\x00\xdf\xd6\x3e\x3a\x5f\x97\x81\xef\x8f\xd7\xa2\x77\x39\x29\x31\xb9\x3b\x15\xe7\x75\xe9\x94\x61\x10\xa1\x80\xc9\x07\x5b\x94\xd6\x90\xe1\x7a\x73\x83\xd8\xe1\xd6\x8c\xb6\x5f\xf4\x75\xe0\x37\x43\xc3\xfb\x5f\x00\x00\x00\xff\xff\x15\x0b\x23\x83\xd4\x13\x00\x00")

func templatesViewsDevicesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsDevicesHtml,
		"templates/views/devices.html",
	)
}

func templatesViewsDevicesHtml() (*asset, error) {
	bytes, err := templatesViewsDevicesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/devices.html", size: 5076, mode: os.FileMode(420), modTime: time.Unix(1547245749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsDevicesJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x4f\x4f\xfb\x38\x10\xbd\xf3\x29\x66\x59\x24\xa7\x82\x6d\xd8\xc3\x4a\xab\xd0\x76\x0f\xcb\x65\x25\x6e\x70\x43\x08\x4d\xe2\x49\x30\x24\x76\xd7\x76\xca\x56\xa8\xdf\x7d\xe5\x24\xfd\xb7\x6d\x93\x94\xb4\x0b\x95\x7e\x3e\x54\xb5\xf3\xfc\xfc\x66\x3c\x1e\x8f\x7c\xe1\x71\x15\xe5\x19\x49\xdb\xeb\x6b\x42\x3e\xf5\xe2\x5c\x46\x56\x28\x09\x5e\x0f\x3e\xce\x00\x00\x26\xa8\xc1\x62\x98\xd2\x2d\x4d\x44\x44\x06\x86\x70\xe1\xb1\x9f\x79\xd5\x2b\x3e\xb1\x5e\x01\x75\xad\x7f\x8b\x16\x1f\xdc\xa0\xf7\xb1\x18\x74\x6d\x8c\x09\xdd\x91\x4c\xec\x4b\x00\xbf\x5d\x5f\xad\x7d\x4b\x51\x26\x39\x26\x14\xc0\xfa\x1c\xd7\x72\x9d\x06\xc0\x7c\x8e\xe6\x25\x54\xa8\xb9\xcf\xd1\x62\xb1\xaa\xf1\xc5\xaf\xbf\xcb\xfe\xab\x51\x92\xad\x4d\x9b\xad\xb3\xe3\x2b\xfe\x53\xc3\x1c\xaa\x24\x41\x6d\xfd\xca\x22\xff\x0f\x92\x56\xd8\xe9\xb0\xea\xb3\xab\x8d\x89\x4e\xc1\xbd\x8e\x02\x60\xee\x5f\xed\xda\x91\x4a\xf3\x4c\x9a\x00\x1e\x37\x58\x36\x05\xcd\xb9\x03\x60\x76\x3a\xa6\x2d\x2b\xcf\x36\x87\xea\x69\x30\xd9\x66\x80\x6b\x9a\x24\x27\x1d\xc0\x72\xc7\x1d\xb8\xb7\x83\x0f\xaa\x48\x88\x94\xb4\x24\x2d\x0c\x81\xb1\x9b\xb3\x9d\xd0\x58\x69\xf0\x1c\x5e\x80\x90\xd0\x44\x0c\x85\xa3\x4a\xe2\xcb\x21\xb0\x81\x19\xa3\x84\x28\x45\x63\x86\xe7\x29\x86\x94\x42\xf1\xfb\x8b\xc9\xa3\x88\x8c\x39\x1f\x31\xb8\x2c\x58\x1f\xc5\x13\x5c\x02\x1b\xf8\x6e\xc6\x08\xd8\xcd\xce\x35\x66\xbb\xc5\x6a\xb2\xb9\x96\x73\x05\xdb\x29\x66\x9d\xb7\xc2\x58\xb4\x79\xfb\xcd\x28\xe1\x75\x5e\x33\xef\xc2\x46\x2f\x15\xb0\x6f\xd5\x9d\x7a\x27\xfd\x27\x1a\xf2\x7a\x8d\xce\x46\x43\xc0\x94\x4c\x85\x24\x16\xd4\x42\x61\xe9\xa0\x96\xfb\x52\x0a\x5a\xd9\x96\xba\x40\x59\x51\x13\xc7\x87\x92\xc3\x51\x26\xa4\x3b\xa9\xd1\x94\xa9\x89\x90\xc9\x21\xe4\x08\x19\xab\xee\x62\x88\x1f\x42\xcb\x3b\x6a\x29\x64\xf2\x49\x39\x9c\x62\xcc\x53\x7b\x88\x2d\x2a\x99\x76\xeb\xd8\xc5\xbc\x79\x10\xb7\x8f\xee\x9f\x29\xcd\xdb\x3e\xa9\xd2\xbc\xd5\x1e\xce\xca\x01\x05\xae\x9f\x16\xd7\xde\xb1\x12\x4b\xf6\xb7\xb5\xcf\x56\x8d\x45\xb4\x87\xfe\x02\xde\xc6\x80\x02\xf8\x7f\x58\x60\xf2\xd0\x44\x5a\x84\xa4\xf7\x48\x92\xcb\x39\x2d\x6c\x59\x41\x1f\xd9\x20\x43\x5a\x60\xfa\x2c\xf3\x2c\x24\xcd\x3a\xd3\x09\xde\x9d\x83\x93\xb3\x7d\xec\xfc\xd6\x9d\xec\xc0\x87\xa5\x43\x61\xd1\xc0\xec\x9a\x88\xc1\x13\x30\x82\xeb\x26\x20\xfc\xb7\x0c\x09\x35\xf8\x75\xb9\x08\xea\xeb\x8a\x0d\xbe\x56\x49\xb9\xb0\x69\xbd\xae\xf9\xce\x65\xcd\x71\xb2\xcf\xe7\x23\xa2\x91\x1a\x4e\x22\x24\xc6\x5a\x64\xa8\xa7\x55\x48\x14\x46\x9d\x58\x4c\x1c\x31\x9f\x7f\x3a\x3a\x5a\xf2\xc3\x49\x84\xc8\x4a\x59\xb9\x34\xeb\x74\x82\x24\x52\x32\x16\x49\xeb\xd0\x28\xe1\x2d\x6e\x79\x36\x18\x6b\x1a\x0d\x22\xc5\x69\xee\xb5\x29\x66\x69\xe9\xa9\x92\xa5\xf4\x90\x43\x8c\x06\xbe\x43\xef\xf0\xd3\x16\x23\xd7\x46\x9e\x16\xbd\x59\xaf\x8a\xc1\xc5\x6b\xc9\x9d\x30\x96\x24\xe9\xf9\x7b\x49\xba\xe8\xb7\x7e\x31\xf9\x96\xaf\x22\x0b\x3b\xbe\xe6\x5d\x44\x62\x46\xdf\xa3\xa0\x8a\x85\x26\x73\x18\x9a\xe7\x58\x68\x63\x5b\x1f\x05\x8e\x96\xea\x0e\x82\x4b\x5d\x3f\x35\x81\x60\xe5\xc4\x74\x4a\x13\x6e\xa1\x07\x75\x6f\xb5\x90\x49\x29\xed\x58\x19\xa3\x70\x55\x8a\x3f\x3c\x05\x4d\x9e\xa2\x09\x49\xdb\xfe\xda\x75\xb3\x0e\x7d\xdf\x16\x12\xfe\xe2\xee\xd6\x6d\xa2\x87\xfd\x6f\x3c\x47\xf9\x58\x2d\xf1\x75\x2f\x80\x35\x97\xc1\xac\x77\xf3\x6f\x00\x00\x00\xff\xff\xde\x0b\x37\x47\x5d\x17\x00\x00")

func assetsJsDevicesJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsDevicesJs,
		"assets/js/devices.js",
	)
}

func assetsJsDevicesJs() (*asset, error) {
	bytes, err := assetsJsDevicesJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/devices.js", size: 5981, mode: os.FileMode(420), modTime: time.Unix(1547240784, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsVendorClipboardJsClipboardMinJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xfb\x8e\xdb\xb8\x7a\xff\x7f\x9f\x42\xd6\x1f\x0a\xb9\xc3\x55\x3c\xdb\xed\x25\xf6\x12\x46\x30\xc8\xe2\x6c\xb1\xd9\x04\x99\x29\xd0\x53\xd7\x18\x70\xa4\xcf\x36\x4f\x64\xd2\x87\xa2\xe6\xb2\xb6\x1e\xa8\xaf\xd1\x27\x2b\x78\x93\x28\x5b\x4e\xce\x02\x8b\x16\x05\x0e\x90\x60\x68\x92\x1f\xf9\xdd\xbf\x1f\x49\xbd\xfe\x76\xf2\x4d\xf2\x6d\x52\x54\x7c\xff\x20\x99\x2a\xf3\xbf\xd4\xc9\xe3\xf7\xf9\x34\xff\xc1\x74\x6f\xb5\xde\xd7\xb3\xd7\xaf\x7f\x03\x21\x95\x2c\xb6\x2c\xdf\x70\xbd\x6d\x1e\x72\x2e\x5f\xc7\x24\x66\xae\xf9\xff\x0b\x2f\x40\xd4\x50\x26\xef\x7f\xbe\x4b\xfe\xfb\xbf\x92\xff\x00\x21\x93\x4f\x86\xf0\x9b\xe4\xdb\xd7\xdf\x4c\xd6\x8d\x28\x34\x97\x02\x69\x02\xf8\x90\xca\x87\xbf\x40\xa1\x53\x4a\xf5\xcb\x1e\xe4\x3a\x81\xe7\xbd\x54\xba\xce\xb2\xb3\x91\x9d\x2c\x9b\x0a\x16\xee\x4f\xee\xe7\x51\x40\x78\x96\x86\x35\xfb\xc9\x25\xac\xb9\x80\x2c\x73\x7f\x73\xb6\x2b\x17\xae\x89\x96\x2b\x02\x78\x76\x69\xdf\x85\xff\x9b\xdf\x04\xd1\xfe\xf5\xd6\xee\xa1\x4f\x7b\x5a\xa4\xb7\xbc\x26\x9d\x38\xf8\xa0\x40\x37\x4a\x24\x5d\x8f\xc0\x87\x47\xa6\x12\x49\x0f\xed\x3c\x74\x26\x0a\x69\x7c\xe0\x6b\x24\x97\x7a\x85\x3d\x85\x69\x07\x81\xe6\x86\x04\xa8\xe9\xa2\x07\x3e\xd3\xa4\x9a\x4d\xae\x89\x1f\x9c\x1d\xda\x76\xee\x89\x84\x21\x2a\x58\x55\xa1\x4e\x19\x04\x48\xdf\x56\x98\x40\x5e\xd1\xc9\xb4\xef\x6b\x3d\xa9\xca\x77\x54\x10\x95\x17\x54\x12\x95\x97\x34\x36\x09\x11\xf8\xa0\x72\x69\xad\x73\x3c\x7e\xb0\x5a\xca\x9d\xea\x3e\x2a\xb9\x07\xa5\x5f\xec\xb4\x03\x88\x66\x07\x8a\x3d\x54\x30\x9b\x4c\xc9\x06\xf4\x4c\xb4\xb8\x25\x2a\x57\xd1\x7a\xf8\x90\x36\xc2\x51\x97\xe9\x24\xe8\xfa\xf6\x65\xf7\x20\xab\x2c\x73\x7f\x73\x2d\x6f\xb5\xe2\x62\x73\xc7\x36\x59\x76\x69\xc7\xf3\xb9\xe4\xf0\xc8\xaa\x06\x66\xe9\x7b\xeb\x11\x69\x8b\xc9\x25\xe2\xf4\xfe\x1e\x6a\x3f\x2d\x90\x4d\xa6\x8e\x5d\xdd\xb3\x0b\xc4\xd9\xe6\x3a\xd3\x59\x86\x80\x2a\x04\x18\x93\x7f\xc9\x74\x30\x14\xcc\xf9\x1a\xfd\x60\x46\xcf\xfd\x27\xcb\xcc\xbf\xbc\xdf\xa9\x27\x32\x26\x15\xd4\x33\x57\x28\x60\x1a\x90\x68\xaa\x0a\x9b\xe5\x54\xae\x90\xb8\xc4\xba\x20\x69\x09\x6b\xd6\x54\x3a\x3d\xd5\xb8\x93\x02\x5a\x4c\xbe\xb7\x0c\xd5\x56\x2f\xbd\x92\x01\xaf\xa5\x42\xd6\x01\x13\x2e\x12\xc0\x2a\x2f\x91\x20\x92\xc4\xd6\x09\x2c\x2e\xf5\xaa\xcd\x1f\xb8\x28\x2d\x5f\x44\x62\xdc\xb9\x99\xd1\x91\x18\x98\xd4\x79\xa8\xce\x32\x1d\x49\xbb\x38\x0f\x04\x2b\x8d\xe1\xbd\x9d\x8d\x0c\x76\x8e\x6c\xf8\x02\x92\xb2\x94\x00\x26\x60\xb6\x93\x74\x98\x24\xfc\x44\xaf\xa2\xbd\x92\x5a\x1a\x21\xf3\x2d\xab\x3f\x3c\x89\xa0\x2c\x17\x0c\x86\xc0\xac\xb1\xa7\x69\x4a\x14\x52\x79\x4d\xa7\xb8\x45\xcb\x53\x1f\x4f\x9b\x1a\x12\xa3\xb3\x42\xa7\xd6\x40\x8a\x8e\xa4\x91\xe0\xa9\x69\x6d\x1b\xa7\x03\x39\xd7\xa0\x98\x96\x6a\x31\xa2\x54\x3f\x33\x96\x3e\x1a\xcc\xb2\x2f\x6c\xa7\xf3\x42\x8a\x5a\xab\xa6\xd0\x52\x51\x4a\xbb\xfe\x49\x68\xf7\x5a\x58\x04\xde\x66\xdd\x86\x84\xd3\x48\xe1\x5d\xea\x71\x41\x7d\x08\x6e\x21\xe8\x74\x2e\x7e\x84\xbc\x02\xb1\xd1\xdb\xb9\xb8\xba\x0a\xf9\x0a\x96\x62\x35\x97\x79\xef\x6f\x34\xfe\x71\x3c\x4e\xae\x89\x34\x1c\xae\xf9\xa6\x71\xe3\x93\x29\x49\xad\x43\xa6\x5c\x24\x32\xcb\x90\xcc\x9f\x14\xd7\x7e\xec\x72\x60\xca\xfc\x33\xbc\x10\x89\xdb\xf6\x34\x79\x86\x54\xe4\x1d\x34\xcb\x24\x8a\x4c\x6f\x5c\x45\xd8\x3e\x22\x30\xd1\x6d\x8b\x30\x61\x54\x22\x81\xae\x31\x26\x85\x6d\xfd\x03\xc6\xa4\xb1\xad\x1f\x30\x9e\xc7\x5a\x88\xad\x30\xf0\x61\x3d\x3b\x78\x97\x9d\xe9\xb6\x35\xca\xa8\x06\x9e\x7f\xaa\xca\x93\x62\xc6\xd7\x68\x82\x74\xc2\x45\xad\x99\x28\x5c\x10\x62\xbd\x55\xf2\x29\x11\xf0\x94\xdc\xbd\xec\xe1\x9d\x52\x52\xa1\xf4\x86\x09\x21\x75\x62\x3c\x36\x61\x49\x51\xb1\xba\x4e\x58\x9d\xb0\x4e\xfe\x34\xd4\x17\x89\x7d\xfa\x38\xdf\x4a\x47\x6b\x7f\x82\x35\x28\x10\x45\xd8\xc0\xd0\x26\x5b\x56\x8b\x57\x3a\x79\x00\x10\x09\x17\x5c\x73\x56\x71\x53\x99\xbf\x4b\xea\x66\x0f\x0a\xe1\xc1\x0c\xc3\x0c\x94\x69\x88\xfc\x09\x1c\x8f\x21\xcb\x4d\xa2\x2c\xd7\xbb\x6d\xdf\xbb\xd0\x33\xf0\xfc\x22\x99\xdf\xdf\x5b\x3b\xdd\xdf\x77\xf5\x63\x03\xfa\x63\x30\xdd\x87\x35\x92\x18\xfb\x60\xdd\xf2\x3a\x4a\x35\xb9\x82\x5a\x56\x8f\xf0\x61\x6f\xd6\xaf\x91\x31\x72\x5e\xf1\x5a\x83\xb8\xa9\x78\xf1\x19\x69\x4c\xc4\x98\xa7\x58\x7d\x8c\x31\x96\x65\x26\x9f\x4d\x28\x85\x71\x3b\xdc\x1a\x3d\x98\xda\xaf\xa0\xae\x8d\x61\x77\x4d\xad\x13\xe0\x7a\x0b\x2a\x79\x80\xc4\x50\x27\x52\x45\x86\x21\x89\x31\x5c\x7a\xd5\x65\xd9\x79\xe4\x96\x27\x39\xde\x16\x84\xde\x67\x0f\x51\x50\xcf\x7c\x15\xd2\x24\xce\xea\xd7\x24\x44\x8d\xc9\xf0\x71\x84\x99\x72\xd5\x62\x02\x59\x86\xfc\x1e\xf5\x40\xa7\x8b\xd1\x5e\xab\x9b\x99\xee\x2d\x42\x01\xb7\x48\x92\x22\x64\x66\x4c\x38\x92\x64\x79\xf8\x0c\x2f\xb3\x74\xa8\xfd\xd4\x57\x98\x28\x93\x18\x47\xd4\x74\xfa\x23\x53\x9b\x66\x07\x42\xd7\x3e\x77\x64\xd9\xa3\xe4\x65\x32\x9d\x50\xda\x0d\x2d\xa7\xab\x45\xfc\x63\x76\x68\xe7\xc6\xdc\x39\xb3\xab\x8d\x25\x5b\xed\xc7\x16\xa1\x31\xb3\x04\x9e\xd5\xb7\x4e\xfd\xb6\x4b\x33\xb5\x01\x3d\xbe\x86\x1b\x5b\x84\xc6\x60\x8d\x3b\xdb\xe5\xd7\x80\xe7\x4b\x2b\xc0\xb3\xa5\x87\xe7\x13\x6a\x78\xf6\xb4\x85\x14\x9a\x71\x01\x8a\xf6\x38\x80\x2a\xa4\xfb\x01\xbc\x88\x7e\xcc\x4a\x59\x58\x45\xe4\x0f\xb2\x7c\x69\x5b\xe2\xf4\x1d\x79\xf6\x99\xb2\xfb\x32\xbb\xe5\xb5\x53\x9c\x9b\x0e\x8a\xa2\x29\x69\x3a\x03\x1a\x74\x53\xb8\x25\xc6\x0a\x7b\x2e\xbb\xd0\x69\x71\xb7\xb3\xfc\xea\xae\x79\x09\x15\x6c\x98\x06\xa7\xb2\xe3\x51\xe7\x45\xa3\x14\x08\xaf\x43\xc7\x52\x87\xff\x9d\x71\xb2\x0c\x8d\x75\x53\x8b\x75\xc8\xf8\x10\x3c\x25\x2c\x08\x83\x0e\xb1\xdd\x99\x07\x65\x98\xc4\x96\x74\x6d\xdb\xdb\xd9\xc7\xb4\x4c\x4f\xaf\xf0\xa1\x95\x88\x56\x7c\xb3\x01\x35\x03\x02\x3b\xae\xb5\x9f\x10\x29\x64\xe0\x63\x63\x6a\xf1\xfa\xac\x51\xca\xfc\x1c\x7d\x46\xed\x34\x73\x59\xa9\x35\x4a\xb5\x9f\xa2\x2d\xf4\xeb\x20\x62\xe7\x1f\x7f\x6d\x40\xbd\xdc\x42\x05\x26\x47\x20\x38\xdf\x02\x9e\x47\x37\xe8\xd9\xd3\x76\xc6\x80\xb9\x5a\x2b\xf9\x32\x12\xce\x03\xaf\xca\xfd\x3c\x34\x6e\xa8\x0b\xa6\xfd\x0a\x95\xb3\x7c\xdb\xae\x42\x8a\xe1\xf5\x6d\xb3\x37\x67\x11\x28\xff\xe8\xfc\xb2\x4c\x0b\xb9\x7f\x49\x49\x5a\x34\x3a\x5d\x11\xa0\x01\x11\xf7\x91\xbd\x58\xea\xd5\x4c\x13\x41\x27\x93\xa1\xc6\x6f\xe4\x6e\xc7\x44\xd9\xf1\x36\xef\xc2\x67\x2d\xd5\x3b\x56\x6c\x51\xac\x6c\x41\x45\x96\x7d\x6d\x09\x1b\x70\x44\xb4\xed\x0a\x13\xd9\xa2\x08\x80\xd4\xae\x62\xb9\xaa\x9e\x96\x4c\xb3\xef\x3a\xb5\x7d\x97\x5e\x69\xeb\x19\x06\xdb\xbe\xd5\x5a\xf1\x87\xc6\x1c\x16\x70\x77\x98\x30\xb5\x34\x1e\x68\x75\x77\x14\xae\x5a\xf2\x55\x94\x2b\xc9\xdf\x71\xee\xff\x7b\x9c\x2b\xd0\xf7\x06\xe4\x22\x49\x19\xce\x32\x19\x23\x58\xd9\x23\x58\xd9\x5a\x8b\x37\xa3\x3a\x02\x63\xa3\xff\x05\xf8\x0a\x3e\x31\x9c\x20\x3b\xed\xbb\x0d\x2a\x75\xe9\xce\xf2\x17\xb4\xc3\x11\xfc\x9f\x80\x92\x00\x3c\x4e\xab\xbc\x8e\x6b\x89\x19\xf2\x65\x84\xea\xd0\x1a\xe0\x92\x80\x3d\x22\xa0\xe1\xe0\x84\xef\x70\xd5\xc8\xf4\xb9\x96\xeb\xae\xad\x1e\xa0\xbc\xb3\xc0\x24\xed\x12\xf8\x40\x47\x97\xd2\xb8\xc3\x2c\xfd\x32\x3f\xb1\xcf\xf6\xd6\xaa\xe7\x2a\xcb\xa2\x61\x57\xaa\x50\x5f\x25\x7a\xaa\x8b\x2a\x76\xf6\xa4\xa9\xd2\x26\x3f\x74\xd9\x2f\x34\xde\x55\x60\x7f\x0f\xf2\x53\x5a\x72\x95\xe2\xb9\x77\x81\x9d\x7c\x04\xc7\x98\x93\x78\xcd\x3e\xc3\x9f\x98\x28\x2b\x50\x37\xac\xaa\x1e\x58\xf1\x99\x8e\x5d\x23\xc4\x94\xed\x19\x29\x1d\x1a\x2b\x67\x65\xf9\xee\x11\x84\xfe\xc5\x57\x36\x14\xf0\xd1\xa5\x3d\xf1\xf1\x38\x99\xf6\xa3\x46\x90\x5e\x3c\x07\xe5\xbd\x70\xae\xbc\x32\x05\x2c\xc5\x43\x82\xbc\xd6\x2f\x95\x29\x17\x42\xdf\xf2\xdf\x80\xa6\xd7\xdf\xef\x75\x3a\x3a\xe7\x41\xaa\xd2\x20\xc7\xe9\xf8\xf0\x9e\x95\x25\x17\x9b\x8b\xe3\x3b\xa6\x36\x5c\x5c\x26\x97\x35\x77\x00\x9b\x3d\xd4\xb2\x6a\x34\x8c\xce\x5b\xc2\x22\x55\x7c\xb3\xd5\xe9\x2c\xad\x60\xad\xd3\x15\x4d\xbf\x7b\xf3\xe6\xcd\x9b\xfd\x73\xea\x0f\x9c\x4f\x5c\x94\xf2\x29\xdf\xb3\x0d\xfc\xf9\xc3\x7a\x5d\x1b\x14\x78\xd1\xea\x75\xa1\x64\x55\xdd\xc9\xfd\x7c\x8c\x29\x2d\xf7\x54\x5c\xa5\xfb\xe7\x33\x5e\x06\xce\xa2\x80\x95\x52\x54\xa6\x88\x9f\xe9\xd7\x3a\x25\xed\x7c\x9d\x9c\x1a\x7d\xbf\x07\x51\xde\x6c\x79\x55\xa2\x01\x21\x1e\x09\x2e\x34\x8d\x4e\x40\xa3\xd3\x0d\x94\x30\x53\xa3\x08\xe9\x9d\xf0\x52\x0c\x46\xae\xd5\xc1\xa5\x8e\x41\x47\xfe\x3b\x1d\xf3\xdc\xd7\xed\xf5\xdc\xc5\xe0\x89\x80\x76\x10\xe8\x12\x27\x97\x55\xd5\xc5\x80\x07\x6f\x83\x0c\x71\x01\xe3\x7a\x0d\x7c\x4d\xcb\x2e\x13\x5d\xd6\x71\xe8\xba\x90\x83\x80\xba\x94\x3e\xd7\xea\xe5\x00\x7d\x8c\xc2\x33\x14\x1e\x7f\xa1\x28\x9d\xe3\xb6\x60\xba\xd8\x9a\x4a\x07\x74\x72\xdd\xda\xa1\xad\x55\xd9\x27\xa8\xcd\x79\x23\x02\xd8\x71\xff\x18\xc2\x8e\xd3\xbe\xfd\x8b\xf4\x22\xad\x9b\xa2\x80\xba\x4e\x67\x29\x98\xc2\x98\x92\x91\x03\x4c\x74\x4e\x89\xd5\xd3\x9d\x49\xe2\x92\x40\x8a\x0a\x98\xea\x92\xbd\x3f\xc6\x0c\xfa\xdc\x2d\xad\xbd\x38\x89\xce\x2f\xc3\x39\x17\x8b\x84\xdb\xc5\x57\x02\xff\x2b\x5f\xcb\xa2\xa9\x11\x26\x3e\xde\x37\x10\x57\x64\xef\x2d\x6f\xab\xea\x13\x13\x1b\xa8\xd1\xdf\x7c\xb0\x18\x24\xed\x40\x13\x0e\x4f\x35\xe8\x3f\xac\x86\x3b\xdc\x6f\x50\xb3\xdd\xf7\x3e\xd4\x72\xe2\x06\x26\x94\xc6\xfd\x59\x66\x0f\x08\x27\xbd\x11\xcc\x71\x10\xe7\xd5\xcf\xe2\x91\x55\xbc\x4c\x02\xcb\x89\x95\x92\x24\x06\x50\xfb\xfb\x21\xb7\x7e\x22\x4d\xab\xd1\xe9\x2b\xdc\xda\x67\x90\x91\x0a\x16\xed\xd4\xa9\x22\x1c\x05\x07\xaa\x70\xef\x0f\x9d\xd0\xda\x5f\xf4\xc5\x37\x71\xd4\x0f\x53\x4a\xf5\x22\x7a\x5d\x99\x29\xa4\x31\x3e\x1e\xaf\x0d\x5d\x2e\x64\x09\x06\xb0\x7d\x41\x30\xcf\x40\x2c\x18\x4b\xdc\x98\xcf\xea\xaf\xec\x29\xd5\x89\x49\xbd\xc2\x82\x16\xf5\xf0\x84\x92\x96\xbc\x36\x28\xb8\x4c\xf1\xdf\xb0\x25\x0b\x74\x79\xf2\xb1\x02\x56\x83\xdd\xbd\xcf\xff\x16\x83\x02\x2b\x13\xb9\x4e\xfa\x95\x7b\xb2\xc0\x58\xa3\xcf\xf8\x42\xa7\x8c\x75\x8b\xe2\xe3\xf1\x0b\x4c\xff\x3e\xae\xff\x2c\x9b\xa4\x60\xe2\x3f\x5f\xe9\xa4\x68\x74\x62\x42\x3c\x59\x2b\xb9\x4b\xc0\x69\xae\x4e\x9e\xb8\xde\xc6\x12\x19\x2f\x19\x91\xa4\x7e\xe5\xd1\xd1\x7d\xc0\x8e\xed\x97\xbd\xc8\x4d\xb3\xc7\x4a\x30\xc7\xca\xfe\xf8\xd7\x0c\x8f\x7f\xf8\xd0\x0f\x9d\xdd\x45\x58\xf5\xdd\xbe\xfb\xe5\xdd\xcd\x9d\xd5\xa0\xf5\x97\x5f\xd9\x0e\xb0\xee\xf2\x01\x50\xed\xaa\xee\x1c\xaa\x1a\x12\x43\xf1\xf3\xaf\x1f\xff\xed\x84\xe0\x78\x4c\xef\xde\xfd\xfb\xdd\xdb\x4f\xef\xde\x9e\xac\xe4\x4f\xb8\x97\xed\x31\x17\xc6\x22\x5f\x84\x00\x3e\x65\x22\xd7\xec\x13\x93\x4d\x46\x68\x4a\x3c\x87\x3e\x5d\x60\x62\x57\xf4\x29\x6b\x6c\xcb\x5e\xa8\xd6\x08\x75\x38\x65\xce\x54\x49\x10\x1a\x4a\x77\xa6\x4b\xb1\x71\x74\xaf\x10\x77\x7e\xa6\xa3\x69\x92\xa8\x53\xc4\xe8\x38\xc4\x73\xe5\x45\xf8\x55\x96\x70\xe3\x56\xb7\xc7\x1f\x79\x9e\x59\x89\x34\xd8\xd5\x11\x2a\xc3\xaa\xec\x9e\x3b\xfb\xa3\x11\xb4\xa7\x66\xee\xce\x74\xc6\x57\x5a\x11\xdd\x46\x1f\xa4\x98\x9d\x1e\x34\x9d\x10\xae\x9a\x1d\x8f\x2e\x65\x02\x3d\xb4\xe1\x16\xde\x3e\x4c\x1f\x8f\xf6\x0f\x5d\xae\x30\xce\xf7\x4d\xbd\x45\x87\xb5\x98\x01\x29\xf4\xf3\x4c\xb4\xae\x7e\xb7\x44\x8a\x02\xbe\xb0\x7e\xfc\xe6\x8d\x0f\x32\x97\xeb\x35\xd2\xee\x59\x9a\xed\xf7\xd5\x0b\x12\xa4\xcb\xe3\xb8\x7f\x9a\xbe\xa7\xe0\xf0\x81\x5d\x53\x11\x81\x5b\x7b\x6b\x37\x48\x92\xe1\x6c\x0f\x74\xb9\xca\xeb\x8a\x17\xe0\x1e\x14\xba\x05\xc9\x35\x26\x82\x22\x34\x22\x28\xb6\x02\x2e\x57\xd8\x11\x1a\xbd\xd3\x29\x51\x54\x84\x1b\x02\xf9\xa3\x9a\xcb\xab\x2b\x2c\x96\x72\x95\xaf\x45\xe0\xd6\xfc\x2a\xf4\x33\x81\xee\xc1\xc2\xab\x61\xbd\x9e\x0d\x2d\xe2\x1d\xff\x7c\x6b\x22\xa9\x58\xea\x15\x51\x74\xb9\x32\x21\x28\xb3\xac\x7f\xa6\xe5\x74\x4a\x18\x95\x81\x0b\xfe\x23\x9b\xf3\xab\x2b\x2c\x97\xdc\x70\x31\xa1\x14\xb2\xcc\xff\xc8\xef\xdd\x4f\xe5\x8c\x63\x7a\x71\xff\x9c\xea\x16\x58\x98\x9d\xa8\x9a\x95\x50\x81\x06\xfb\xb9\x80\xb3\x5b\x4b\xfa\xc4\x20\xce\xaf\x8c\x0c\x2b\x25\x15\xe8\x1f\x31\xd9\x52\x81\xfe\x29\x4e\x31\xa7\x73\x6d\x71\xca\xb2\x09\x64\xd9\xe4\xbc\x86\xa6\xef\x79\x5d\x73\xb1\x49\x14\xfc\xb5\xe1\x0a\xca\xa4\x33\x4f\x6a\x13\xf8\xa4\xcc\xdd\x1d\x1d\xba\x74\xd1\x70\x0b\x85\x14\x3d\x9d\x7b\x9e\x79\x30\x85\xca\xc5\x45\xb7\xce\x5a\x20\x71\x61\x8d\xbb\x2d\x57\xa3\x4b\xfc\xd4\x5d\x56\x98\x45\x4a\x9b\xb9\x4c\x0d\x0d\x97\xa9\x14\xc8\x9a\x0a\x82\x2a\xaa\xf1\xf9\xa9\xb2\x26\x6b\x4c\x0e\x1e\x04\xc5\xe9\xba\x1a\xc5\xfa\x66\x7a\xdb\xf6\x1b\x99\x81\x68\x33\x46\x35\x29\x28\x90\x86\x0a\xf2\x56\x29\xf6\x12\x3d\x73\xfb\x3b\x48\xef\xe1\x83\x6b\x7e\x7d\xce\x57\x41\x1a\xdc\x8e\x73\xf6\xbb\x16\x1e\x13\xc2\xad\x1d\xc4\xf0\xb6\xeb\x85\x90\x54\x13\x45\x81\x70\x2a\xc8\x16\x0d\x1e\x3d\x88\x24\x8a\x70\x53\xeb\x46\x2c\xf4\x13\x57\xb5\xbe\x6c\x64\x92\xfc\xe9\xee\xfd\x2f\x1e\x93\xb8\x1f\x37\xb2\xf2\xb9\x97\x98\xca\xfa\xab\x57\x68\x8a\xc3\x25\x27\xe1\x84\x91\x82\x34\xa4\x22\x35\x59\x0f\x73\xa6\xc0\x07\x61\x6d\x40\x47\x2e\x2c\x7b\xec\x95\x65\x83\xbb\xb0\x88\x87\x2c\xbb\xa6\x31\xc8\x6a\x89\xe8\x6c\x3a\xf2\xa5\xc4\xd9\x77\x0b\x21\xab\xfb\x47\xd0\x2e\x74\xe3\xbd\x51\xba\x74\x90\xaf\x13\x6e\x65\xea\xab\xa9\xb7\x61\x60\xa8\x08\x37\x8c\xb3\x2c\x75\xf1\x9f\x72\x7b\xfb\x8a\x2c\x50\xf4\x39\xe1\x78\x14\xde\xcb\x97\xd3\x15\xc6\x86\x6f\x67\xc4\x11\x4d\x9c\x5f\x9f\x1f\x8f\x03\x85\x38\x19\xcc\x1a\x6b\x31\x46\x1f\xd8\x0c\x61\x66\x19\xfc\xaa\x2e\xda\xf1\x8c\xc4\xa8\x40\xff\x1c\x5d\xa2\x73\x37\x68\xdc\xca\x4d\xe0\xf1\x67\x3c\x82\x68\x22\xcf\x3f\xc8\xb2\x7e\x3d\x7c\xd8\xa2\x0c\x75\xb7\x75\xc2\xa0\x8c\xe1\x70\x96\x49\xff\x8d\x95\x7d\x52\xf1\xa5\xc0\xde\x84\xf5\xb5\xab\x2b\x07\xe7\xc1\x28\x08\x37\x15\x6f\x2c\x18\xc7\x23\xcc\x11\xb4\x6d\x7b\x29\xe9\x3a\x89\xbd\x8a\x47\xdf\x50\x4f\x78\x58\xf0\x50\xc0\x9a\xaa\x8a\xb8\x1e\xfb\x6a\x4e\x2c\x78\xf4\x15\x50\x08\x60\x7c\x61\x01\x74\xee\x22\x06\x7f\xd3\xf1\xd7\xac\xb7\xd6\xbc\xf8\x2c\xbb\xed\xd8\x3e\x7c\xb9\x33\x12\x8e\xb1\x9d\x5b\x7c\xea\x1d\xee\xdd\x7f\xe4\x0b\xb3\x2e\x50\x27\xe1\x82\x2a\xde\x50\x17\x5b\xa8\x43\x99\x3e\x9b\x30\x17\x61\x0a\xed\x5a\x41\x08\x13\x40\x3b\xf9\xdb\xfb\x91\xde\x7a\xa4\x53\x8e\xf4\x3d\xc1\xc3\x67\xae\x4f\x06\x2e\x98\xdb\x01\x9d\xb9\xce\xb2\x37\x83\x53\xdd\xfc\xe4\x83\x87\xc8\xfc\x9e\x61\x83\x5b\x7d\xd3\x14\xd7\xe0\xa1\x73\x4d\x75\xbe\x67\x0a\x84\x05\xa4\xad\x39\x47\xb4\x78\xfe\x3f\x01\x00\x00\xff\xff\x1f\x71\x37\xe6\x02\x2a\x00\x00")

func assetsVendorClipboardJsClipboardMinJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsVendorClipboardJsClipboardMinJs,
		"assets/vendor/clipboard.js/clipboard.min.js",
	)
}

func assetsVendorClipboardJsClipboardMinJs() (*asset, error) {
	bytes, err := assetsVendorClipboardJsClipboardMinJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/vendor/clipboard.js/clipboard.min.js", size: 10754, mode: os.FileMode(420), modTime: time.Unix(1547241767, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesBoggartMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x4b\x6b\x14\x41\x14\x85\x4f\xc6\x88\x30\x22\xa2\xb8\x54\xb8\x2e\x0c\x8a\x56\xd2\x3d\x63\x20\x54\xd2\x89\x9a\x07\x88\x19\x12\xe2\x28\xb8\x2c\xd2\x95\x9e\xc6\xee\xaa\xa1\xba\xdb\x07\x64\x11\x1f\xf8\x40\xd1\x95\x1b\x77\xe2\x4e\x5c\x0c\xea\x62\x0c\x49\xdc\xba\xbc\xfd\x07\xfc\x2d\x32\x9d\xc4\x07\x88\x77\x53\xe7\x54\x7d\xe7\x54\x41\xfd\x38\x3e\xfc\x06\x00\x0e\x02\x38\x09\x60\x0e\xc0\x21\x00\x09\x76\xe7\x19\x80\xc3\x00\x9e\x03\x38\x01\x60\x00\x1f\x01\xf0\x01\xc0\x51\x00\x7d\x00\x9d\x21\xe0\x3b\x80\x53\x00\xfc\x1a\x70\x01\xc0\x52\x0d\x18\x03\xb0\x5e\x03\x8e\x01\xf8\x58\x03\x86\x00\x0c\x03\xa8\xed\xdd\x37\x98\x03\x7b\x2b\x66\xad\x59\x8b\x23\xba\x75\xb9\xb5\xf8\xa7\xa6\xd0\xde\x35\x89\x55\xe1\xfe\xe6\xaa\xed\xc6\x3a\x44\xaa\x4d\x31\x7c\x3d\x55\x2e\xa7\x8e\x4d\x35\x56\x74\xd7\xba\x5c\xb4\xb2\x28\x0e\xc5\x95\x22\xca\x44\xdb\x4a\x0a\xf5\x9d\x4b\xb7\xe3\x8e\x4a\xed\xa8\x2b\xea\xcb\x4b\x6d\x31\xeb\xb4\xca\x63\x6b\xc4\x9c\xca\xb5\xa4\x86\xe7\x4f\x08\xaf\x29\x1a\x4d\x6a\x34\xe5\xf8\xf8\x79\xaf\xe9\x79\xf5\x45\x95\xe5\xa2\xed\x94\xc9\x12\x95\x5b\x27\xe9\x5a\xd5\x41\xad\xc2\xa9\xd4\x86\x96\xa6\xfe\x2a\x9e\xae\x2f\x2a\x13\x15\x2a\xd2\xa2\xad\x55\x2a\xe9\x97\x97\xb4\x52\x64\x59\xac\x4c\xbd\x75\xb5\x35\x2f\x6e\x6a\x97\xc5\xd6\x48\xf2\x47\xbd\xfa\xac\x35\xb9\x36\xb9\x68\xdf\xef\x6a\x49\xb9\xbe\x97\x8f\x75\x13\x15\x9b\x49\x5a\xed\x28\x97\xe9\x3c\xb8\xd1\x5e\x10\x13\xbf\xb9\xc1\x7b\xd6\xb4\x13\xf3\x66\xd5\x86\xb1\x89\x24\xd5\x97\x93\xc2\xa9\x44\x2c\x58\x97\x66\x92\x4c\xb7\xb2\x59\xd0\x9c\xa4\x5d\x19\x98\x33\xbe\x17\x04\x3e\x8d\x8c\xd0\x40\x7a\xa7\x03\xdf\xa7\x19\xf2\x48\x56\x7e\x3a\x68\xec\x1f\x4d\x05\x17\x07\xf2\x6c\x85\x4d\xf9\x1e\xad\xaf\xef\x46\xa6\x83\x86\x77\x8e\x66\xc8\x27\x49\x8d\x49\x54\x9f\xc2\x9b\xbc\xc3\xdb\xe5\x63\xee\xf3\xe7\xf2\x51\xb9\xc1\xbd\xf2\x09\xf7\xcb\xd7\xe0\x77\xbc\xc9\xbd\xf2\x29\xf7\xca\x87\xe5\x4b\xfa\x1f\xfc\x0a\xfc\xf6\xdf\x2d\x54\x3e\xa8\x32\xdf\xb8\x5f\x6e\xf0\x0e\x7f\xe2\x1e\x6f\x73\x0f\xfc\x9e\xb7\x78\xbb\x7c\xc1\x5f\x89\xbf\xf0\x0e\x6f\xe1\x67\x00\x00\x00\xff\xff\x8b\x10\xaf\x87\xbe\x02\x00\x00")

func localesRuLc_messagesBoggartMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesBoggartMo,
		"locales/ru/LC_MESSAGES/boggart.mo",
	)
}

func localesRuLc_messagesBoggartMo() (*asset, error) {
	bytes, err := localesRuLc_messagesBoggartMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/boggart.mo", size: 702, mode: os.FileMode(420), modTime: time.Unix(1547246408, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesDevicesMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\xcf\x6f\x1b\x45\x14\xfe\xb2\xac\xa1\x98\xf2\xa3\xa5\x14\x24\xa8\x34\x08\xb5\x02\xc1\x96\xb5\x4d\xa5\xb2\x89\x53\x4a\x9c\x48\x15\x31\x2d\xad\xe9\x89\xcb\xd8\x9e\x38\xab\xda\xbb\xd6\xce\x6e\x54\xa4\x1c\x12\x07\xb5\x48\x51\x41\x8a\xa8\xa8\x38\x50\x25\x70\xe1\x66\xda\x58\x38\x49\xed\xfc\x03\x1c\xde\x9c\x91\xf8\x13\x10\x1c\xb9\xa1\xd9\xd9\x06\xc2\x1c\x66\xe6\x7d\xf3\xbd\xef\x7d\xf3\x66\x7e\x3f\x6e\xdf\x05\x80\x93\x00\x5e\x03\xf0\x2b\x80\x53\x00\x96\x27\x90\x8e\x3f\x27\x80\xa7\x00\xfc\x35\x01\x3c\x09\xe0\xef\x09\xe0\x19\x7d\x60\x19\xfc\xa8\x05\x1c\x01\x70\x22\x8b\x4f\x59\x86\x77\xda\x02\x72\x00\xde\xb1\x0c\xbf\x68\xa5\x29\x98\xb6\x80\x3c\x80\x8b\x16\xf0\x34\x80\x79\x0b\x78\x01\xc0\xf5\x8c\xd7\xb2\x00\x1b\x80\xb4\x80\x67\x01\xdc\xcc\xf4\x6e\x65\xf8\x9d\x4c\x77\x23\xe3\xdf\xcb\xf0\x1f\x2d\x60\x71\x02\xf8\x29\xd3\x3b\x6e\x03\xaf\x00\x78\xc3\x36\xf1\x94\x0d\x9c\x00\x50\xb5\x81\xe3\x00\xea\x19\x9e\xd8\xc0\x73\x5a\xdf\x06\x8e\x02\xb8\x6b\x03\x2f\x03\xd8\xb2\x8d\xdf\x5d\xdb\xf4\x63\x94\xe5\xfd\x66\x03\x2f\x01\xf8\xc3\x06\x8e\x01\xb0\x73\xc6\xdf\xc9\x1c\xf0\xaa\xbe\x7f\xce\xe8\xbc\x9f\x33\x7d\x99\xcb\xe2\xcb\x39\x73\xef\xcf\x32\x7e\x2b\x07\x64\x2d\x4e\xc7\xb1\x6c\xd5\xef\xa0\x7d\x6a\x4f\x4f\xc0\xd4\xca\xfd\x87\xa7\x73\x5f\x84\xf1\xae\x87\xbe\xbb\xee\xc3\xf3\x30\x75\xf4\x1b\x68\x9f\xba\xb7\x47\xcc\x33\xa5\x7d\xd4\x43\xd7\xc7\xc5\x46\xec\x87\x81\xc4\x4c\x18\x2c\xf8\x2d\x54\x84\x6c\x44\x7e\x57\x63\xa8\x88\x25\xbf\x21\x24\x2a\xbe\xe4\xf5\xb6\x68\x62\x36\xc8\xd6\x25\x11\xc4\x12\x73\x7e\x24\xd2\x59\xc6\x6c\xc1\x8f\x44\x13\x97\x2a\x98\xe7\x07\xd1\xbc\x2f\x63\x11\x88\x48\xa2\xfa\x49\xad\xc6\x64\x52\xd7\xda\xf5\x03\x20\x0e\xbb\x7e\x43\xe2\x63\xde\x11\xb8\x26\x22\x9f\xb7\x59\x90\x74\xea\x22\xc2\xb5\x98\xc7\x89\x44\x8d\xb7\xf4\x24\x6f\x64\x33\x6b\x84\x49\x10\xa3\xf6\x79\x57\xe0\xaa\xe8\x86\x51\xec\x54\x65\xcb\x6f\x3a\x1f\x26\x2d\xe9\xd4\x42\x8f\x35\xc5\xd2\x07\x37\xfc\x45\xde\x09\xcf\x46\x49\xfe\xca\xe5\x9a\x33\x13\x09\xae\x6f\xe3\x54\x78\x2c\x3c\x56\x74\x0b\xe7\x1d\xb7\xe4\x14\x4b\xac\x58\xf2\xce\x9d\x7b\xdb\x2d\xb9\x6e\x5e\x9b\x76\x6a\x11\x0f\x64\x9b\xc7\x61\xe4\xb1\x8f\x52\x0d\x56\x4d\x22\xde\x09\x9b\x21\x9b\x3a\x24\x3c\x9d\x9f\xe7\x41\x2b\xe1\x2d\xe1\xd4\x04\xef\x78\xec\x20\xf6\xd8\xd5\x44\x4a\x9f\x07\xf9\xea\xa5\xea\xac\x73\x5d\x44\xd2\x0f\x03\x8f\x15\xce\xba\xf9\x99\x30\x88\x45\x10\x3b\xda\xbe\xc7\x62\x71\x33\x7e\xb7\xdb\xe6\x7e\x30\xc9\x1a\x8b\x3c\x92\x22\x2e\x7f\x5a\x9b\x73\xce\xff\xcb\xd3\x7e\x16\x44\xe4\xcc\x06\x8d\xb0\xe9\x07\x2d\x8f\xe5\xaf\xb4\x93\x88\xb7\x9d\xb9\x30\xea\x48\x8f\x05\xdd\x34\x94\xe5\xd2\x24\x33\xdb\x72\x70\xba\xe0\x96\xcb\x05\x76\xe6\x0c\xd3\x5b\xf7\xf5\x72\xa1\xc0\x2e\x30\x97\x79\x69\x3c\x5d\x2e\x3e\x3e\x9a\x2a\xbf\xa7\xb7\x6f\xa6\xb4\xa9\x82\xcb\x96\x97\x4d\xca\x74\xb9\xe8\xbe\xc5\x2e\xb0\x02\xf3\x58\x71\x12\xf4\x0d\x0d\x68\x47\xad\xaa\x1e\x3d\xa0\xa1\xfa\x1a\xf4\x1d\x8d\x69\xa4\xbe\xa0\x21\x3d\x54\x6b\x6a\x85\xfa\xea\x96\x39\xf8\x9e\xf6\x69\xa8\x56\xa9\x4f\x23\x1a\xd2\x00\xf4\x83\x4e\x53\x2b\x34\x3e\x10\xe8\x83\x36\xd4\x3a\xed\xd2\x9e\xfa\x4a\xdd\xa6\x01\x8d\x68\x0c\xda\xf8\x3f\xb0\x49\x63\xfa\x59\xad\xab\x9e\x11\xd6\x29\xbf\xd0\x98\x1e\xa8\x75\xd0\x7d\x1a\xa8\x15\xbd\xa5\x1d\x96\x2e\xe9\x89\xfe\x7b\x74\x9f\xc6\x6a\x95\xf6\x68\x40\xdb\xa9\x85\x43\x04\xda\xa4\x3d\xb5\xa6\xbe\xa4\xbe\xea\xd1\x80\xf6\x68\x68\xbe\x21\xed\xd3\x98\xb6\x33\xeb\xbb\x8f\x51\xd5\xa3\xb1\xc6\x52\x84\xee\xd1\x23\xed\x63\x33\x2d\x3d\xa4\x1d\x1a\x99\xf2\x23\x1a\xd3\x23\x0d\x82\x36\x55\x4f\x2b\xab\x35\xb5\x0a\xda\x52\x77\xe8\xa1\x4e\xfc\x96\xfa\xb4\x4d\x7d\x75\xfb\x50\x00\xda\xa2\x21\xed\xe3\x9f\x00\x00\x00\xff\xff\xde\x09\x7a\x2e\x6e\x05\x00\x00")

func localesRuLc_messagesDevicesMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesDevicesMo,
		"locales/ru/LC_MESSAGES/devices.mo",
	)
}

func localesRuLc_messagesDevicesMo() (*asset, error) {
	bytes, err := localesRuLc_messagesDevicesMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/devices.mo", size: 1390, mode: os.FileMode(420), modTime: time.Unix(1547246408, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/config.html":                 templatesViewsConfigHtml,
	"templates/views/devices.html":                templatesViewsDevicesHtml,
	"assets/js/devices.js":                        assetsJsDevicesJs,
	"assets/vendor/clipboard.js/clipboard.min.js": assetsVendorClipboardJsClipboardMinJs,
	"locales/ru/LC_MESSAGES/boggart.mo":           localesRuLc_messagesBoggartMo,
	"locales/ru/LC_MESSAGES/devices.mo":           localesRuLc_messagesDevicesMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"js": &bintree{nil, map[string]*bintree{
			"devices.js": &bintree{assetsJsDevicesJs, map[string]*bintree{}},
		}},
		"vendor": &bintree{nil, map[string]*bintree{
			"clipboard.js": &bintree{nil, map[string]*bintree{
				"clipboard.min.js": &bintree{assetsVendorClipboardJsClipboardMinJs, map[string]*bintree{}},
			}},
		}},
	}},
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"boggart.mo": &bintree{localesRuLc_messagesBoggartMo, map[string]*bintree{}},
				"devices.mo": &bintree{localesRuLc_messagesDevicesMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"config.html":  &bintree{templatesViewsConfigHtml, map[string]*bintree{}},
			"devices.html": &bintree{templatesViewsDevicesHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
