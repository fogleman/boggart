// Code generated by go-bindata.
// sources:
// templates/views/devices.html
// templates/views/index.html
// templates/views/security.html
// assets/js/devices.js
// locales/ru/LC_MESSAGES/boggart.mo
// locales/ru/LC_MESSAGES/devices.mo
// DO NOT EDIT!

package internal

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsDevicesHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x4d\x8f\xd3\x30\x10\xbd\xf7\x57\x8c\x7c\x82\x43\x6b\x6d\x4f\x1c\xb2\x95\x90\x16\xb4\x48\x85\x03\x2a\x67\xe4\xc4\x93\xed\x94\xd4\x0e\x1e\x13\xba\x8a\xfa\xdf\x51\xbe\xba\x26\x49\xdb\xed\xd2\xe5\xd2\x26\xe3\x79\xf3\xe6\xe3\x8d\x9c\xb2\x04\x8d\x29\x19\x04\x91\x58\xe3\xd1\x78\x01\xfb\xfd\x64\x12\x69\x2a\x20\xc9\x14\xf3\xad\x70\xf6\xb7\x00\xd2\xb7\x42\x63\x41\x09\xb2\x58\x4c\x00\x00\x42\x97\xdd\xf7\x5c\x19\xcc\xda\x93\xe1\xa9\x27\x9f\x61\x70\x5a\x7b\xac\xe7\x8b\xb2\x04\xba\x79\x67\x40\xdc\xb5\xa1\x61\x06\xfb\x7d\x24\xd7\xf3\x9e\x6f\x10\x2d\xc9\x50\xb9\x94\x76\x62\x11\x49\x4d\x45\x40\xd9\x7b\xfd\x2b\x83\xae\xba\x5e\x5c\xaf\xe2\x0c\x3b\xaf\xe6\xa5\xfe\x9d\xb2\x77\x94\xa3\xee\xf9\x37\x98\x35\x2a\x3d\x66\x77\x43\x63\x0b\x78\x2a\x74\xf5\x98\x63\x57\xa5\x5f\x1f\x05\x74\x29\x6d\xf5\x34\xb1\xd9\x74\x2e\x9e\x22\x7c\xba\x7b\x06\x3e\xec\x2c\x27\x8e\x72\x4f\xd6\x5c\xce\x7b\x13\xf0\xae\x14\xff\xe0\x7f\x0b\xf1\x3e\xa9\xd2\x38\x19\x24\x92\x63\x6d\xac\x7c\x07\x4d\x8f\x64\x3d\xaa\x51\x01\xb4\x8f\xed\xdf\xb8\x9c\x33\x62\x8f\x06\xdd\x35\x05\x1d\x51\xe7\x93\x2a\x48\xd5\x54\xa3\x4a\x2b\xa1\xd2\x02\x0e\x5d\x58\x1e\x78\xff\xb7\xda\x03\x9f\x46\xe5\x0e\x39\xb7\x86\xa9\xe8\xd7\x02\x2f\x5c\x0e\x38\xb1\x20\x70\x6a\x49\xa0\xaf\xdb\xf3\x32\x1f\x40\xbe\xa8\xed\xd9\xdd\x1a\x80\x3e\x14\x68\xfc\x59\x5d\x0f\x60\x1f\xc9\xe1\x8b\x50\xec\x21\x25\x87\xfa\x62\xec\x52\x3d\x17\x3a\xbe\x43\x70\x6c\x8f\x60\x6c\x97\x60\x44\x62\xc7\xd6\xab\x2c\x01\x8d\xae\xef\x8d\xe0\x3e\xa9\x88\xea\xcb\xa4\x02\x94\x25\xb0\x57\x9e\x92\xfb\xd5\xe7\x25\xbc\x69\x9e\xbf\x7d\x5d\x82\x90\x5a\xf1\x3a\xb6\xca\x69\xa9\x98\xd1\xb3\x2c\xd0\x68\xeb\x58\x6a\xe5\x55\x9d\x15\xcf\x0c\xfa\x69\xcc\x32\xe1\xc6\xba\x6a\xac\xb1\xb5\x9e\xbd\x53\xf9\x6c\x4b\x66\x96\x30\x0b\x48\x55\xc6\xf8\xf6\x8a\xac\x29\xed\x50\x57\xa5\xa0\xeb\x32\xa8\x4d\xf7\xb5\xe9\x74\x0a\xe3\x7d\xd9\xf0\x15\xbb\x22\x37\x2c\x37\x3f\x7f\xa1\x7b\x9c\x05\x8d\xa9\x72\xd9\xbc\x46\x37\x62\xae\x08\x8f\x8e\xe0\x55\x38\x83\x09\xf4\xc8\xc3\x41\x5c\x4c\x1f\xdb\x87\x07\xe5\x7c\x47\x5e\x45\x6e\xbe\x41\x7a\x61\x0e\x43\xfc\x13\x00\x00\xff\xff\x65\x67\xde\x0b\x2b\x09\x00\x00")

func templatesViewsDevicesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsDevicesHtml,
		"templates/views/devices.html",
	)
}

func templatesViewsDevicesHtml() (*asset, error) {
	bytes, err := templatesViewsDevicesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/devices.html", size: 2347, mode: os.FileMode(420), modTime: time.Unix(1526562220, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x5b\x6f\x1b\xc7\x15\x7e\xd7\xaf\x18\x10\x06\x24\x03\x21\x29\x51\x01\x8a\xc8\x92\x81\x38\xbd\x02\x49\x1b\x34\xa9\xf3\xb8\x18\xee\x1e\x72\xc7\xde\xdd\xd9\xcc\xcc\xf2\x02\x42\x00\x4d\x39\x4e\x03\xb7\x70\x90\x16\x68\x51\x14\x49\x51\xa0\x8f\x05\x18\xc5\x6a\x54\x59\x64\xfe\x40\x1f\xce\xfc\xa3\x62\x86\x4b\x8a\xa2\x48\x9a\x37\x3b\x92\xa5\x7d\xe1\xee\xce\xcc\x7e\xe7\x9c\xf9\xe6\x5c\x66\x97\x8d\x06\xf1\xa0\xc4\x22\x20\x19\x97\x47\x0a\x22\x95\x21\xfb\xfb\x6b\xbb\x1e\xab\x10\x37\xa0\x52\xee\x65\x04\xaf\x92\x22\x2f\x97\xa9\x50\x99\xbb\x6b\x84\x10\x32\xdc\xea\xf2\x20\x1b\x7a\xd9\xad\x42\xda\x36\xda\x3e\x74\x7b\xb4\xa9\xe6\x28\xa6\x02\x18\xe9\x61\x7b\xf9\x85\xbb\xf8\x0f\x3c\xd2\x8f\xf4\x81\x6e\xea\x47\xfa\xe9\x6e\xde\x2f\x8c\xe9\x37\x2c\x48\x00\x54\x94\x58\x2d\x73\x77\x37\xef\xb1\xca\x08\xec\x98\x5b\xe7\x24\xe9\x2b\x3f\x1d\x43\xf0\xea\x98\x1e\xe6\x68\x34\x08\x2b\x91\xdc\x7b\x3c\x2a\xb1\x72\xee\x1e\xe7\x01\xc9\xa4\x46\xcb\xc5\x49\x20\xa9\xc8\x41\x44\x8b\x01\x78\xd6\xbe\xe3\x1e\x31\xc6\xaa\xdb\xc4\x9c\xd4\x64\x76\xab\x40\xaa\xcc\x2b\x83\x4a\x7f\x1c\x45\x83\xa0\xee\x14\x79\x6d\x82\x3c\x17\x35\x8c\x69\x04\xc1\x94\xde\xf3\xd8\x64\xec\x38\xe6\xed\x65\x04\x48\x9e\x08\x17\xb2\x3e\x50\x95\x65\x51\x86\x48\x55\x0f\x60\x2f\xe3\x03\x2b\xfb\x6a\x67\x7b\x73\x33\xae\xdd\x99\xe1\x89\xe6\xf8\x55\x34\x53\xb7\x46\x83\xe4\x52\x53\x3b\x1e\x54\x98\x0b\x8e\x41\x77\x42\x50\x20\x9c\x9e\xf1\x1d\x05\x61\x0c\x82\xaa\x44\x80\xc3\x22\xc7\x85\x40\xb2\x44\xe6\xee\xd3\x20\x01\xb2\xbf\x4f\xde\x9b\x09\x6a\xb7\x28\x48\x7e\x36\xe1\x7f\x93\xa8\x57\x23\x3d\x4f\xd4\x6b\x10\xff\xa7\x10\x28\xfa\x6a\x14\xf0\xcc\xa3\x17\x51\x61\xcc\x22\x9e\xb3\xcb\x94\xe6\x69\x4d\x6f\xdc\xc2\xe4\x89\x5a\x6a\x65\xe2\x37\xd8\xc5\x13\x6c\xe3\xf7\xd8\xc6\x0e\x1e\xeb\x67\x44\xff\x11\x3b\x78\xa4\x9b\xf8\x1d\x1e\xe3\xf1\xea\x98\x03\x11\x88\x72\xdd\x29\xb3\x32\x75\x79\xc0\x05\x83\x21\xce\x0c\xdf\xbd\xa1\xcf\x14\xbd\x56\x4b\x1f\xbb\x82\x57\x4e\xa0\x16\x1e\xe1\x89\x3e\xd0\x5f\xe0\x11\x1e\xff\xef\x09\xc1\x53\xec\xea\x2f\xb0\x83\x5d\xfd\x48\xb7\x56\xc9\x29\x97\x47\x32\x09\x63\xc5\x78\xe4\xb8\x49\x91\xb9\xa6\x59\x80\x74\x62\x10\x8e\xcf\x13\x71\xc6\x30\xdb\x4c\x7a\xcd\x24\x06\x41\x4c\xf3\x0d\xd5\xa6\xe8\xb5\x32\xaa\x55\xa9\x02\x91\x75\x79\xe0\x2d\x47\xb5\x7f\x61\x17\x5f\x60\x17\x9f\x63\x07\xdb\xfa\x19\xc1\x43\x7b\xd1\x9e\x9b\x4f\x03\xf6\x04\x9e\x63\x85\x73\x5c\x1a\x53\x97\xa9\xfa\x39\x16\x8d\x27\xcf\x0d\x67\xa6\xe8\xb5\x62\xce\xf8\x7c\xc9\xf0\xf6\x27\xec\xea\xa6\x7e\xa6\x3f\x5f\x09\x61\x7c\xae\xde\x20\xbe\x34\x1a\x04\x22\x6f\x52\x11\x33\xad\x0e\x0a\x41\xb8\x89\xa8\x5f\xaf\x42\x08\x02\x70\x95\x60\x66\xd6\x97\xe3\xe4\xbf\xf1\x85\x0d\x90\x2d\xdd\xc4\x63\xfd\xb9\x2d\x8e\x5b\x86\x9a\x73\x64\xf5\x1f\x6f\xed\x9c\x23\x68\x3a\x23\x8e\xda\x32\x04\x55\x36\xf6\x39\x8a\x2b\x1a\x9c\x91\xf2\x93\xbc\x3f\x0f\x42\x61\x02\x42\x61\x65\x08\xdb\x13\x10\xb6\x57\x86\xf0\xf6\x04\x84\xb7\x57\x85\x70\x9f\x07\x8a\x96\x61\x67\x5c\xba\x32\x44\x98\x34\x6b\xe9\xe3\x17\x36\x37\x9d\x4a\x6f\xa4\xfd\x5d\x14\xfd\x5d\x5b\x8b\x2d\x04\x4f\xd3\xa1\xbd\x13\x38\x93\xe0\xdd\x39\xf0\x3f\xe4\x55\x10\x0b\x80\xc7\x66\x9c\x9d\x82\x21\xcd\xe7\xc0\xbd\x47\x95\x02\x51\x5f\x00\xb9\xd8\x1b\x39\xc1\xfa\xf7\x67\x94\xe1\xf2\x79\xec\x97\xef\x94\x0d\x5d\xa6\xa7\xe9\xcf\xa5\xd8\x22\xfc\x27\x1e\xf5\xbc\x22\x76\xf1\x14\x4f\xf5\x81\xa9\x25\x4c\x5d\xa1\x9f\x98\x2a\xf4\x2a\x6f\x1a\x4a\x5e\x52\x15\xe6\x01\xbf\x16\xe1\xd2\xe5\x61\x98\x44\xcc\xa5\xa6\x26\xcb\xb2\x48\x81\x88\x60\xc9\x24\xee\xaf\xd8\x31\x35\xa5\x6e\xda\x8d\x89\xd6\xa2\xe5\x63\x5f\x18\x27\x16\xdc\x4c\x88\x70\x06\x53\xe3\x14\x69\x40\x23\x17\x1c\x91\x14\x03\x90\x23\x31\x61\x26\x40\xdd\xd4\x07\xf8\x6d\xee\x0a\xfa\x0e\xf2\xb2\x6c\x8f\x17\x59\x00\xd7\x90\xbd\xb1\xcf\x23\x58\x8e\xba\x7f\xc7\x63\xec\xe8\x03\xdd\xd2\x4f\x09\xfe\x80\x5d\xa2\x5b\xd8\xb6\x79\xdf\x63\xec\x18\x5f\xa7\x0f\xcc\xfd\x17\xd8\x36\xdd\x16\x65\xb6\x15\xd4\x09\xa1\x4c\x4b\x3c\x72\x12\x09\x9e\x53\xe1\xa6\x21\x64\x51\xa2\x86\x0a\x93\xd9\x84\x3e\xed\x0b\xbd\xea\xbd\xe8\x8f\x3e\xf8\xe8\xf5\x5a\x41\x86\x73\xea\xae\x7f\xaf\x5b\x2f\x5f\xc3\x64\x3e\xb5\x47\x1d\xd8\xeb\xb5\xc1\xc0\xed\x95\x59\x99\x16\xeb\x73\xd3\xe1\x17\xf7\x56\x6f\x90\x2f\xf1\x50\xb7\xb0\x8b\x3f\xe8\xa6\xad\xc8\x4d\xe8\x37\x01\xff\xe8\x55\xe8\x1d\x0b\x1e\xf0\xa8\x6c\xd7\xf4\xe2\x46\x58\xa5\x0d\xae\x60\x0c\xb8\x46\x15\xff\xf9\x20\x50\x65\x25\xb6\x54\x0c\xf8\x84\xfd\x9c\x11\x3c\xc1\x17\x86\xdf\xc6\x11\xe8\xa7\x8b\xb2\x5c\xf0\xc4\x16\x34\xec\xa1\xe0\x8a\x3d\x74\x8c\x6c\x8e\x1b\x30\x88\xd4\xdc\x39\xcb\xe5\xe3\xe0\x55\xaf\x61\xbe\xc1\x2e\x7e\xd7\xdb\x60\xbc\xec\xf5\xca\x9b\xb0\x4c\xab\x40\x95\x0f\x22\xcb\x13\xe5\x71\x2e\x26\xad\xd1\xe1\x69\x21\xd8\xc1\x36\xd1\x07\x66\x2d\xea\x27\x78\x74\xb3\x53\xbf\xbc\xf9\x59\x34\xbb\xf5\x0f\x8d\x1f\x3c\x34\x69\x8f\x6e\xe1\xb1\x6e\xfe\x38\x33\x70\xd5\xfd\xcc\xd7\xfa\x33\xdd\xb4\x6f\x5b\x2f\xbd\x9f\x99\x96\x52\xb8\x34\x04\x41\x73\x3e\x7b\x58\x61\x92\xf1\x28\x27\x95\x00\x50\xd7\x22\xc5\x90\xe0\x26\x82\xa9\x7a\xb6\x0a\x45\x97\x86\xd9\x9e\xea\xcb\x95\x9a\x7f\xc3\x36\x9e\xda\x22\xe3\xa2\x9f\x9b\x3d\x35\xdf\x65\x61\x99\x48\xe1\xee\x65\xf2\xe9\x44\xe5\x7b\x13\x95\xef\xc9\x98\x8f\x05\x54\x18\x54\x07\xb2\x86\xcc\xe4\x48\x9e\xf2\x77\xb6\x7e\xf2\x4e\x5c\xbb\x13\xd2\x5a\x7a\x5d\xd8\x7e\x67\x36\xf1\x2f\x5f\x2a\x42\xe6\xe5\xae\x4f\x83\xe0\x5a\x32\xd7\x28\x9e\xdd\x5a\x1d\x73\x4d\x15\x7c\xa8\x3f\x4b\xdf\xf2\x77\xf1\xbf\x04\x9f\xe3\xa1\x6d\x3c\x5e\x09\x8d\x8d\xc0\xd7\x87\xc4\x6f\x2c\xe5\x0a\x13\x33\x8e\x73\x7e\xf0\x90\x60\x17\xbf\xb5\x5f\x22\x9d\x9a\xe4\xa3\xab\x9b\x86\x49\xf8\xdc\x9c\xe1\x91\xa5\x9b\x71\x92\x8f\x75\xcb\x44\xd3\x9b\x74\x70\xe9\x49\xb2\xdb\x2e\x2e\x0f\x27\xce\xcf\x9f\xed\x2b\x9e\xae\x7e\x8c\x5d\xec\xfc\x88\xab\x66\xa2\x73\x37\xf9\xac\xbc\x5e\xce\x1c\x22\x25\x68\xe4\x42\x76\x5a\x2e\x3f\x9b\x33\xff\x6a\xe0\xbc\xed\x17\x37\xa9\xf3\xd6\x7f\x58\x9b\x75\xd3\x83\x95\x08\x7c\x7a\x61\xeb\xc3\x08\xe6\x94\x63\xc6\x1d\x01\xe0\x39\xb2\xca\x94\xeb\x3b\x52\x51\x35\xf8\xf4\x78\x33\xb7\x39\xeb\x76\x9e\x95\xf4\x2f\xd8\xc6\x13\xdd\xd4\x4f\xcd\xda\x9f\x55\x3a\x08\xe4\xcc\x9b\x86\x16\xe5\x6b\xdd\x5a\x00\x65\xb2\x47\x1f\x3e\x6e\x62\xce\x4c\x23\x96\x59\x19\xf4\xd3\x84\x66\x5d\x2a\x26\xbe\x07\xc2\x2f\xd3\x9a\xf6\x91\x6e\xd9\xa0\xd2\xc5\xff\xdc\x04\x92\x15\x58\xbe\x08\x41\x30\xd1\xe8\x5f\x9d\x4f\x11\xbf\xb7\x5f\xf6\x99\x8b\x93\x2b\xb6\xa3\x70\xb6\x94\xd6\x86\xfe\xc1\xe5\x03\xed\x45\x9e\x5d\xab\x3f\x51\xf5\x18\xf6\x32\x0a\x6a\x2a\xef\x4a\x99\x9a\xb3\xef\x22\x49\x2e\x9d\x1a\xd2\x18\xe0\xc5\xd4\xf3\x58\x54\xde\x21\x9b\x77\xec\xbd\xfd\xb5\x91\x21\x29\x17\xc6\x8c\x28\xc4\xb5\xfe\x98\xdd\xbc\x85\x9f\x24\xe5\x03\x39\x88\x8e\x8d\x06\x31\xbe\x98\xb9\xbf\xfc\xf8\x83\xf7\xc9\x46\xef\xfc\x77\xbf\x7d\x9f\x64\xf2\x1e\x95\x7e\x91\x53\xe1\xe5\xa9\x94\xa0\x64\xbe\x02\x91\xc7\x85\xcc\x83\xeb\x53\xa1\x64\xfe\xc1\xe0\x34\x17\xb2\x28\x67\x9e\x5a\xa2\x81\x84\xdb\x16\x8f\x9c\x45\x6b\x10\x82\x0b\xd9\x87\xdc\x95\xae\x60\xb1\x1a\xb6\xcd\x03\x5a\xa1\xbd\xbb\x43\x8c\xbb\xb5\xe1\x71\x37\x09\x21\x52\xb7\x73\x02\xa8\x57\xdf\x28\x25\x91\xab\x18\x8f\xc8\xc6\xed\x21\x03\xa4\x40\x82\x46\x65\x20\xb7\xe0\x2d\x72\xcb\xe2\x91\x9d\xbd\x51\xe4\xfe\x11\x41\x95\x7c\xf8\x6b\xae\x58\xa9\xbe\xd1\xb8\x40\x0a\xbb\x87\xb3\x43\xd6\x7f\x66\xc6\xae\xbf\x75\xb1\x1d\x6a\x6a\x87\xac\x37\x1a\x7d\xa0\xfd\xfd\x71\xbd\xea\xb1\x79\x08\x4c\x78\x88\xcf\x3c\xd8\xe9\x99\xeb\x62\xa3\x99\x3c\x3b\xa5\xeb\x45\xce\x95\x54\x82\xc6\xdb\xeb\xe7\x7a\xed\xdf\xbe\x33\xaa\xff\x88\x63\xef\xf7\xd8\xcd\xf7\x0c\x3b\xcc\x85\xb3\xb3\xff\x07\x00\x00\xff\xff\x15\xaa\x6e\xe9\x7d\x38\x00\x00")

func templatesViewsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsIndexHtml,
		"templates/views/index.html",
	)
}

func templatesViewsIndexHtml() (*asset, error) {
	bytes, err := templatesViewsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/index.html", size: 14461, mode: os.FileMode(420), modTime: time.Unix(1526562220, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsSecurityHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xce\xcf\x2b\x49\xcd\x2b\x51\x52\xa8\xad\xe5\x52\x50\x50\x50\xb8\xb0\xf0\x62\xd3\x85\x0d\x17\x9b\x2e\x36\x5f\x6c\x54\xb8\xb0\xeb\xc2\xbe\x0b\x7b\xc1\x9c\x86\x0b\x1b\xac\x14\xaa\xab\x15\xf4\x8a\x4b\x12\x4b\x4a\x8b\x41\xca\xab\xab\x15\x52\xf3\x52\x14\x6a\x6b\x01\x01\x00\x00\xff\xff\xcb\xa3\x8c\xac\x4f\x00\x00\x00")

func templatesViewsSecurityHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsSecurityHtml,
		"templates/views/security.html",
	)
}

func templatesViewsSecurityHtml() (*asset, error) {
	bytes, err := templatesViewsSecurityHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/security.html", size: 79, mode: os.FileMode(420), modTime: time.Unix(1530918961, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsDevicesJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x4d\x6f\xe3\x36\x13\xbe\xe7\x57\xcc\x3a\x01\x28\x21\xb6\x8c\x17\xef\xa5\x70\x22\xf7\xb0\xd9\xc3\x02\x45\x37\x40\x72\xcb\x2e\x02\x5a\x1c\xc9\xdc\xd0\xa4\x41\x52\x76\xdc\x85\xff\x7b\x41\x51\x56\xac\xd8\x96\x94\xda\x69\xbb\x28\x0f\x81\x48\x73\x86\xc3\x79\x9e\xf9\x60\x2e\x02\xa6\x92\x7c\x86\xd2\x86\x91\x46\xca\x56\x41\x9a\xcb\xc4\x72\x25\x21\x08\xe1\xc7\x19\x00\xc0\x82\x6a\xb0\x74\x22\xf0\x06\x17\x3c\x41\x03\x31\x5c\x04\xe4\x9c\x95\xb3\xe2\x27\x12\x16\x5b\xdd\x88\x6e\xa8\xa5\xf7\x6e\x31\xf8\x51\x2d\xba\x21\xa8\xcc\x72\x9a\xe1\x08\xea\xeb\x6e\xe4\x5a\x8c\x80\x0c\x19\x35\xd3\x89\xa2\x9a\x0d\x19\xb5\xb4\xd0\x6c\x86\xfc\x7f\xbf\xc8\xe8\xbb\x51\x92\xd4\xc4\xd6\xfd\xda\x94\x7e\xa7\xcf\x0d\x9a\x27\x2a\xcb\xa8\xb6\xc3\xd2\xea\xe1\xaf\x28\x2d\xb7\xab\xb8\x9c\x93\xfe\x8e\xa0\xb3\xe0\x4e\x27\x23\x20\xee\xab\xf1\xec\x44\x89\x7c\x26\xcd\x08\x1e\x76\xb4\xec\x1a\xb4\xd1\x3d\x02\x62\x57\xf3\xbd\x47\xbb\xa1\x51\x32\xd4\x23\x78\xc1\xa3\xd8\x1d\x1e\xd0\x08\x25\x50\x89\x92\x16\xa5\x85\x18\x08\xb9\x3a\x3b\xb8\x35\x55\x1a\x02\xb7\x9f\x03\x97\xd0\xaa\xd9\x5f\xd2\x6b\xbe\x8c\x81\x5c\x9b\x39\x95\x90\x08\x6a\x4c\xdc\x13\x74\x82\x02\x8a\xbf\x03\x93\x27\x09\x1a\xd3\x1b\x13\xb8\xf4\x6a\x1f\xf8\x37\xb8\x04\x72\x3d\x74\x22\x63\x20\x57\x07\x0f\x59\x1f\x36\x57\xa3\xcd\xb5\xdc\x98\xb0\x5f\xc5\x7a\x67\x75\xbd\xeb\xd9\x46\x38\x38\x23\x47\xeb\x60\x68\x12\xcd\xe7\x0e\xb1\xe3\x95\x59\x6a\x9e\xcc\x63\xa2\x72\x69\x8f\x57\x86\xd2\x85\x13\xeb\x4c\x37\x27\xd6\x2f\x30\xec\x83\x56\xcb\x8e\xc4\x6b\xe0\x1c\x4f\x21\xd0\x6a\x19\x95\x86\x74\xe5\x9b\xa3\xdb\x24\xb7\x56\x79\x9e\xc6\x3d\x3f\xe9\x6d\xe8\x37\xb1\x12\x26\x56\x0e\x18\x95\x19\xea\xe2\x93\x27\xee\x77\x77\x81\x81\x55\x59\x26\x30\xee\xcd\x14\xa3\x62\xb3\x46\x75\x86\x36\xee\x9d\x6f\x2f\x16\xdf\x03\xcb\xad\xdb\xfd\x51\xc9\x94\xeb\x19\x30\x6e\x9c\xad\xe0\xb3\x04\x9c\x3b\x56\xbb\x2b\x70\xe6\x38\x5d\x93\x4c\xa8\x10\x13\x9a\x3c\xc5\x3d\xbf\xf9\xbe\x38\x38\xf8\x4a\x36\x32\x1a\x33\x6e\x2c\xea\x47\x2f\xfc\x95\x84\x57\x45\x98\x34\x3a\xc1\x0d\x72\xcd\x37\x77\xcd\xc4\x6a\x3e\x75\xb7\x83\xea\x6b\xa0\x71\xa6\x16\xd8\x83\xd2\xf4\x9b\x9a\xc9\xbd\xf1\xf5\x90\x8f\x77\xc9\xb3\x19\x6b\x40\x61\xf0\xc4\x48\x94\x49\xe0\xb4\x50\x78\xd6\xfc\xab\x91\x50\x4f\x15\x0a\x9f\xe4\x5b\x40\x68\x4d\x7c\xe4\x9a\xf1\xc5\x96\x9b\x07\x99\x56\xf9\x1c\xaa\xaf\xc1\x73\x99\x72\xab\x24\xed\x32\xae\x87\xa7\xf5\x66\xdd\x40\xe5\x32\x55\x15\xa2\xe5\xc5\x06\xc9\x14\x93\xa7\xde\xb8\x8d\xa0\xa9\x46\x33\xad\x7c\xf3\xb1\x14\x1a\xf2\xf1\x89\x6d\x5c\x52\x2d\xb9\xcc\x76\xcc\x9c\x73\x99\xb5\x5b\x69\xf8\x1f\x38\x30\x33\x2a\x44\x65\xea\xad\x17\x7c\x9b\xa5\x43\xc6\x17\xe3\x03\x75\x6e\x4f\x91\xaa\xad\x7c\xab\x66\xeb\xb0\x4c\xa5\x55\xfb\xf5\x9b\x23\xad\x44\xbd\x69\xc0\x44\x35\xff\xb9\x5b\xb0\xea\x1e\xff\x4c\x13\x76\x8a\xaa\x2f\xe9\x0c\x4f\x50\xa1\x17\x28\x6d\xf7\x7e\xd0\x49\x9d\xba\x1d\x2c\x4c\xf8\xcc\x5c\x53\xd8\xa6\x1e\xba\xf6\x84\x2e\x73\xf8\xec\xe4\x54\x3e\x94\x47\xfc\x34\x5d\x61\xca\x35\x9a\xe3\xc1\x75\x6a\x1e\x53\xae\x8d\x7d\x0b\xc0\xd8\x84\x80\x6b\xa8\x3e\xb4\x6d\x82\xad\x2a\x72\x94\x9b\xdd\x41\xf7\xea\xce\x6a\x2e\x33\x6f\xda\x7b\x7a\xfc\x51\xd0\xff\xa2\xa7\xda\x8a\xc1\xce\xc3\x1b\xec\x44\xb1\x15\x09\x23\x25\x03\x92\x08\x9e\x3c\x91\x3e\x10\x5f\xab\xa2\xed\x2a\x4d\xfa\x5b\xfe\xaa\xf9\x01\xa3\xb9\x2e\x82\xf2\x06\x53\x9a\x0b\x1b\x6c\x99\xeb\x72\x82\xd7\xf2\x99\x41\x5c\xfb\x37\x40\xa4\xd5\x32\xb8\x08\xec\x94\x9b\x30\x4a\x84\x32\x68\x6c\x40\xac\x26\x61\x18\x39\x20\x83\x70\xbb\xd1\xda\x4a\x3e\x17\x91\x2b\x14\xaf\x2a\x93\xab\xeb\x23\x20\xb7\x5f\xee\xee\x5f\xa1\x7e\xa0\x7a\x14\xf9\x64\x63\xd9\x25\x90\x61\x79\xcb\x9a\x6c\xd9\x89\xbe\x50\x25\xd8\x47\x80\xda\xad\x9c\x6d\x91\x46\xa1\x28\x0b\x5e\xe1\xb6\xae\xe1\x71\x3c\x2e\xae\x2d\x39\x16\x96\x37\x83\xf2\x8e\x40\xbc\x6e\xac\x87\xfe\x82\x2d\x88\xe8\x7d\x90\x14\x6f\xc5\xc2\x62\xf8\x10\xc7\x40\x72\xc9\x30\xe5\x12\x19\x39\x14\xc1\x45\x88\x7b\x91\xa6\x20\x97\xb8\x84\xdb\xdf\x95\xe5\xe9\x2a\x68\x4e\x05\x45\x0b\x38\x02\xf2\x25\x4d\x05\x97\x78\x20\x17\x55\xbb\xf1\xd9\x8e\x80\x78\x18\x60\xcb\x27\xde\x15\xc0\x0d\xa8\x6e\x8a\xbc\xff\x51\x6b\xa5\x5b\xb6\x1a\xbb\x12\x5c\x66\x23\x20\x13\xa5\xac\xb1\x9a\xce\xff\xdf\xf0\xca\x38\x94\x85\xda\x9e\x80\x7f\xc1\x65\xf2\x44\x1e\xeb\xa4\xc7\x3b\xac\x24\xd6\xdf\xe3\xb2\x96\xc4\xdd\x90\x28\x96\x5c\x32\xb5\x8c\xb6\x5f\xa6\x10\xbf\x04\xc3\x26\xa3\x6d\x53\xf8\x9d\xf2\xa5\x7f\x8e\x1f\x13\x9e\x1a\x4d\x2e\x2c\xc4\x2e\x40\x53\xca\x45\x43\x74\x76\xe3\xd0\x86\x3f\x9f\x5a\xc8\xef\xa9\xa3\xa3\x19\x1a\x43\x33\x6c\xd8\xd8\x2d\x98\xa6\x9c\xe1\x08\x52\x2a\x4c\x83\xae\xee\xd4\x39\x44\x1b\xdf\x1e\xec\xe1\xce\x29\x2b\xd2\xd9\x3a\xbc\xfa\x33\x00\x00\xff\xff\x13\x2d\xe9\x4f\xd6\x17\x00\x00")

func assetsJsDevicesJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsDevicesJs,
		"assets/js/devices.js",
	)
}

func assetsJsDevicesJs() (*asset, error) {
	bytes, err := assetsJsDevicesJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/devices.js", size: 6102, mode: os.FileMode(420), modTime: time.Unix(1526562220, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesBoggartMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x3f\x6f\x13\x4b\x14\xc5\x4f\xfc\xf2\x5e\xe1\xc7\x1f\x81\x28\x29\x6e\x0a\x22\x10\x9a\xb0\x6b\x13\x29\xda\x64\x13\x44\xfe\x48\x88\x58\x44\xc1\x50\xd1\x0c\xf6\x60\xaf\xf0\xce\x58\xb3\xb3\x11\x91\x22\x14\x82\xa8\x40\xa2\x40\x74\x08\x8a\x34\xa1\x8b\x02\x91\x12\x25\x36\x15\xfd\xdd\x82\x96\x86\x8f\xc0\x17\x40\x5e\x2f\x44\x9c\x66\xce\x4f\xf7\x9c\x3b\xf7\xfb\xf9\xd1\xb7\x00\xf0\x1f\x80\x8b\x00\x96\x01\xfc\x0f\x60\x03\x43\xed\x00\x38\x03\xe0\x23\x80\x53\x00\x0e\x00\x9c\x05\xf0\x15\xc0\x69\x00\xdf\x0a\xfe\x01\xa0\x3d\x02\xfc\x04\x30\x06\xe0\x41\x09\xb8\x00\xe0\x69\xf1\xbe\x29\x0d\xfb\x3b\x25\xe0\x1c\x80\xfd\x12\x30\x52\xfc\xf1\x2f\x80\x7f\x70\xa2\x52\xf1\x8e\x16\x77\xe5\x8a\x95\x4e\x47\x17\x64\xd2\x7e\x68\xa4\x6d\x16\xa8\xd6\xa2\x86\x4a\x86\x50\x33\x3a\x72\xc6\x46\xba\x35\xe4\xbb\xaa\x91\xda\xc8\xad\x17\x14\x4b\xeb\xa8\x6d\x62\x85\x55\xd5\x35\xd6\x89\x5a\xd2\x8a\x9a\xe2\x66\xda\x4a\x44\xdd\x04\xd4\x54\x6b\x37\x1e\x47\x6d\x19\x9b\x09\x9b\x96\x57\xee\xd4\xc5\xbc\x55\xd2\x45\x46\x8b\x05\xe9\x54\x40\x15\xcf\x9f\x12\x5e\x55\x54\xaa\x54\xa9\x06\x93\x93\x57\xbd\xaa\xe7\x95\x97\x65\xe2\x44\xdd\x4a\x9d\x74\xa4\x33\x36\xa0\xdb\xf9\x0e\xaa\xa5\x56\xc6\xa6\x69\x68\xe6\xaf\xc5\xb3\xe5\x65\xa9\x5b\xa9\x6c\x29\x51\x57\x32\x0e\xe8\x0f\x07\xb4\x9a\x26\x49\x24\x75\xb9\x76\xab\xb6\x28\xee\x2b\x9b\x44\x46\x07\xe4\x4f\x78\xe5\x79\xa3\x9d\xd2\x4e\xd4\xd7\xbb\x2a\x20\xa7\x9e\xb8\x6b\xdd\x8e\x8c\xf4\x34\x35\xda\xd2\x26\xca\x85\xf7\xea\x4b\x62\xea\x24\x37\xb8\xe7\x91\xb2\x62\x51\x37\x4c\x33\xd2\xad\x80\xca\x2b\x9d\xd4\xca\x8e\x58\x32\x36\x4e\x02\xd2\xdd\x1c\x93\xb0\x3a\x4d\x43\x1b\xea\x4b\xbe\x17\x86\x3e\x8d\x8f\xd3\xc0\x7a\x63\xa1\xef\xd3\x1c\x79\x14\xe4\x3c\x1b\x56\x7e\x8f\x66\xc2\xeb\x03\x7b\x39\x8f\xcd\xf8\x1e\x6d\x6c\x0c\x2b\xb3\x61\xc5\xbb\x42\x73\xe4\x53\x40\x95\x69\xf0\x07\xde\xe5\x1e\xef\xf3\x51\xf6\x8a\xb2\xe7\xfc\x25\xdb\xe4\x5d\xde\xe3\x23\xde\xe7\x1e\x1f\x64\xaf\xc1\xdb\xd9\xb3\x6c\x2b\xdb\xe4\x3e\x1f\x0e\x1c\xef\xf1\x2e\xf8\x1d\xf7\xf3\xf9\x16\xf7\xb3\x4d\x3e\xe0\x1e\x7f\x02\xbf\xcf\x5e\xe4\xf5\xde\x20\xb1\xcd\xc7\xdc\xcb\x5e\xf2\x21\xf1\x67\xee\xf3\x31\x7e\x05\x00\x00\xff\xff\x45\x49\x1e\x80\xc7\x02\x00\x00")

func localesRuLc_messagesBoggartMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesBoggartMo,
		"locales/ru/LC_MESSAGES/boggart.mo",
	)
}

func localesRuLc_messagesBoggartMo() (*asset, error) {
	bytes, err := localesRuLc_messagesBoggartMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/boggart.mo", size: 711, mode: os.FileMode(420), modTime: time.Unix(1530920726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesDevicesMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\xcf\x4f\x2b\x55\x14\xfe\xe6\x4d\x9f\xfa\xc6\xe7\x8f\xbc\x68\xdc\x68\x72\x5d\x48\x34\x66\x70\xa6\x95\x84\x0c\x0c\xa0\x14\x12\x22\x55\x24\xd5\xfd\xa5\xbd\x94\x09\xed\x4c\x9d\x3b\x45\x4d\x30\x01\x8c\xc1\x48\x82\x09\xc1\x1f\x89\x51\x82\xec\xdc\x58\x09\x0d\xc5\x4a\x59\xba\x31\xf1\x5c\x37\xee\xfc\x1b\xfc\x13\xcc\x9d\x19\x30\xbc\xbb\x98\x73\xbe\x7b\xbe\xf3\x9d\xef\xdc\xcc\x3f\x0f\x0a\x5f\x01\xc0\x53\x00\x9e\x07\x70\x08\xe0\x39\x00\xf7\x0d\xa4\x67\xcd\x00\x1e\x05\x10\x18\xc0\xe3\x00\x3e\xc8\xf1\x27\x06\xf0\x18\x80\xcf\x72\xbc\x6f\x00\x8f\x00\xf8\xda\x00\xee\x02\xf8\x3e\xe7\x9f\x18\xc0\x1d\x00\x3f\x1b\x80\x05\xe0\xd4\x00\xee\x01\xb8\x34\x80\x02\x80\xdf\x73\xfe\x1f\x39\xfe\xcb\xc8\x66\xfe\x6d\x00\x4f\x03\x98\x31\xb3\xf8\xae\x09\x3c\x03\x60\xc5\x04\x1e\x00\xf8\x30\xbf\xff\xc2\x04\x9e\x04\xf0\x9d\x09\xdc\x07\xf0\x93\x99\xf9\x3f\x37\xb3\xb9\x7f\x9a\xc0\x0b\x5a\x37\xef\xfb\xd7\xcc\x7c\x9a\x85\xcc\x8f\x55\xc8\xf0\xb3\x05\x20\x5f\x39\x3d\x7a\x37\x33\xcf\xb5\xbe\xf6\x76\x2f\x7f\x27\x7d\xf4\x2c\xdd\x67\xe5\x58\xbf\x81\xde\xf7\x4e\x8e\xef\xe6\xf1\x89\x6b\xc1\x37\x6a\x49\x10\x85\x12\x65\x21\x6b\x71\xd0\xd6\x00\x65\xb1\x11\xd4\x84\x44\x39\x90\x7c\xa5\x29\xea\x98\x0b\xf3\xb8\x21\xc2\x44\x62\x3e\x88\x45\xfa\x95\x09\x5b\x0d\x62\x51\xc7\x42\x19\x8b\xfc\x06\x2d\x06\x32\x11\xa1\x88\x25\xde\xe6\x2d\x81\x2a\x97\xeb\x12\xd5\x8f\xdb\x02\xcb\xa2\x1d\xc5\x89\x5d\x91\x8d\xa0\x6e\xbf\xd9\x69\x48\xbb\x1a\x79\xac\x2e\x36\x66\xd6\x83\x35\xde\x8a\x46\xe3\x8e\xb5\xf4\x4e\xd5\x9e\x8d\x05\xd7\x56\xec\x32\x4f\x84\xc7\x8a\x8e\x3b\x6e\x3b\x25\xbb\x58\x62\xc5\x92\x37\x36\xf6\xaa\x53\x72\x1c\x4b\x4f\xb4\xab\x31\x0f\x65\x93\x27\x51\xec\xb1\xb7\x52\x0d\x56\xe9\xc4\xbc\x15\xd5\x23\x36\x79\x4b\x78\xca\x5a\xe4\x61\xa3\xc3\x1b\xc2\xae\x0a\xde\xf2\xd8\x0d\xf6\xd8\x72\x47\xca\x80\x87\x56\x65\xa1\x32\x67\xbf\x2f\x62\x19\x44\xa1\xc7\xdc\x51\xc7\x9a\x8d\xc2\x44\x84\x89\xad\xed\x7b\x2c\x11\x1f\x25\xaf\xb5\x9b\x3c\x08\x27\x58\x6d\x8d\xc7\x52\x24\xfe\x7b\xd5\x79\x7b\xfc\x7f\x9e\xf6\xb3\x2a\x62\x7b\x2e\xac\x45\xf5\x20\x6c\x78\xcc\x5a\x6a\x76\x62\xde\xb4\xe7\xa3\xb8\x25\x3d\x16\xb6\x53\x28\xfd\xd2\x04\xcb\x52\x3f\x7c\xc9\x75\x7c\xdf\x65\x23\x23\x4c\xa7\xce\x8b\xbe\xeb\xb2\x69\xe6\x30\x2f\xc5\x53\x7e\xf1\xba\x34\xe9\xbf\xae\xd3\x97\x53\xda\xa4\xeb\xb0\xcd\xcd\xac\x65\xca\x2f\x3a\xaf\xb0\x69\xe6\x32\x8f\x15\x27\x40\x87\xd4\xa3\x0b\xb5\xad\x76\xe8\x94\xfa\xea\x4b\xd0\x0f\x74\x45\x7d\xb5\x4d\x5d\xba\xa4\x3e\xf5\x40\x27\xba\xaa\xb6\x68\x78\xc3\xeb\x82\x0e\xd4\x1e\xfd\x4a\x03\xb5\xaf\x76\xa9\x47\x97\x34\x04\x1d\x3c\x7c\x71\x4c\x43\xfa\x45\xed\xa9\x9d\x4c\x58\xb7\x9c\xd3\x90\x4e\xd5\x1e\xe8\x88\x7a\x6a\x4b\xa7\x74\xc1\xd2\x90\x56\xf4\xff\x41\x47\x34\x54\xdb\x34\xa0\x1e\x9d\xa5\x16\x6e\x11\xe8\x98\x06\xea\x53\xf5\x39\x75\xd5\x0e\xf5\x68\x40\x7d\xd0\xb7\xf4\x9b\xd6\xff\x86\xba\x74\x46\x5d\xb5\x0b\xfa\x91\xfa\x74\x85\xff\x02\x00\x00\xff\xff\xc7\xff\x7a\x4d\x1c\x04\x00\x00")

func localesRuLc_messagesDevicesMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesDevicesMo,
		"locales/ru/LC_MESSAGES/devices.mo",
	)
}

func localesRuLc_messagesDevicesMo() (*asset, error) {
	bytes, err := localesRuLc_messagesDevicesMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/devices.mo", size: 1052, mode: os.FileMode(420), modTime: time.Unix(1530920726, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/devices.html": templatesViewsDevicesHtml,
	"templates/views/index.html": templatesViewsIndexHtml,
	"templates/views/security.html": templatesViewsSecurityHtml,
	"assets/js/devices.js": assetsJsDevicesJs,
	"locales/ru/LC_MESSAGES/boggart.mo": localesRuLc_messagesBoggartMo,
	"locales/ru/LC_MESSAGES/devices.mo": localesRuLc_messagesDevicesMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"js": &bintree{nil, map[string]*bintree{
			"devices.js": &bintree{assetsJsDevicesJs, map[string]*bintree{}},
		}},
	}},
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"boggart.mo": &bintree{localesRuLc_messagesBoggartMo, map[string]*bintree{}},
				"devices.mo": &bintree{localesRuLc_messagesDevicesMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"devices.html": &bintree{templatesViewsDevicesHtml, map[string]*bintree{}},
			"index.html": &bintree{templatesViewsIndexHtml, map[string]*bintree{}},
			"security.html": &bintree{templatesViewsSecurityHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
