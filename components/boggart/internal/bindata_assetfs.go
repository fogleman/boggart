// Code generated by go-bindata.
// sources:
// templates/views/devices.html
// assets/js/devices.js
// locales/ru/LC_MESSAGES/boggart.mo
// locales/ru/LC_MESSAGES/devices.mo
// DO NOT EDIT!

package internal

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsDevicesHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x41\x6f\x1a\x3d\x10\xbd\xe7\x57\x8c\x2c\x7d\x52\x72\x00\x27\x39\x7d\xaa\x08\x52\xd5\x34\x6a\x25\x52\xa9\x2d\x3d\x57\x5e\x7b\x56\x0c\x5d\xec\xad\x67\x20\x89\x56\xfc\xf7\xca\x0b\x84\x0d\x85\x28\x0b\xa4\xea\xa1\x27\x96\xf5\xbc\xf7\xc6\xcf\x3b\x4f\xae\x2a\x70\x98\x93\x47\x50\x36\x78\x41\x2f\x0a\xe6\xf3\x93\x93\x9e\xa3\x19\xd8\xc2\x30\x5f\xa9\x18\xee\x14\x90\xbb\x52\x0e\x67\x64\x91\x55\xff\x04\x00\xa0\x59\x72\xff\xbd\x34\x1e\x8b\xe5\xca\xef\xab\x42\x52\x60\x63\xb5\xae\x18\x5d\xf6\xab\x0a\xe8\xe2\x7f\x0f\xea\x7a\x49\x0d\x5d\x98\xcf\x7b\x7a\x74\xb9\x51\xdb\x60\xb3\x05\x9a\x98\xd3\xbd\xea\xf7\xb4\xa3\x59\x43\x72\xe3\xef\x93\x0e\x56\xbb\xdb\xcd\x2b\x26\x2b\xb0\x13\x91\xcb\xe0\x99\x66\x9b\xed\xd6\xe5\x75\xcd\x13\x00\x2c\x60\x2c\x91\x4a\x74\xe0\xa4\xc1\x00\x3e\xdc\x45\x53\x2a\x60\x79\x28\xf0\x4a\xdd\x91\x93\xd1\x9b\x8b\xf3\xf3\xff\xb6\x70\x2f\xf8\x47\x68\xdc\xae\xb5\xb8\x7d\x61\x09\x5c\x7b\x39\x7c\x28\x71\x65\xa4\x8c\x9e\x05\xad\xb6\x32\x71\x1d\x1b\x8a\xce\xa5\x5a\xb3\x7c\xbc\xde\x8f\xe3\xa2\xc1\xf1\x55\x8c\x4c\xf9\x70\x9e\xa1\xe1\x1f\x0c\x36\x4c\xd3\xe7\x79\x28\xd9\xed\xe7\xe1\x10\x24\x94\x64\x8f\xd0\x59\x4d\xc6\xd3\x8c\x6d\xa4\x0c\xe3\x11\x18\xdf\x5a\xa1\xe0\x5f\x4a\xd4\xf0\x1a\x23\x99\x02\xfc\x74\x92\x61\x6c\x8d\xbe\xc6\xb4\x83\x32\x49\xb7\xc6\xd6\xa7\xd3\x1a\xd5\xfe\x18\xf6\x77\xbd\xa7\x77\x0d\x4f\xc2\x6c\x1d\xb9\x9e\xae\x07\x7b\x23\x2e\x76\x06\xce\xf2\x71\xf9\xb3\x3d\x3e\x0b\x62\x41\x9f\xda\x3d\x5e\x80\xf6\x68\x55\x93\x1b\xc8\x4d\xc7\xa1\xc9\x53\x30\x52\x1f\x1e\xdd\x1a\x3c\xea\xfe\x4b\xd7\xc3\xd3\xf5\x93\x99\xbc\x34\x5d\xf7\x08\xd3\x35\xe4\x86\x22\xb6\x9f\x8c\x1b\x8a\x2c\x90\x53\x44\xd7\x1a\x3b\x30\x7b\x43\xdf\xcf\xd0\xcb\x5f\x37\x86\x55\x05\xe8\x5d\x7d\x9f\x69\xdc\x73\x92\x50\x7d\xc9\x49\x80\xaa\x02\x16\x23\x64\x3f\x0c\x6f\x07\x70\xba\x78\xfe\xf6\x65\x00\x4a\x3b\xc3\xa3\x2c\x98\xe8\xb4\x61\x46\x61\x3d\x43\xef\x42\x64\xed\x8c\x98\xba\x2b\xee\x7a\x94\x4e\xc6\xda\xf2\xe2\xed\x70\xf1\x36\x0b\x41\x58\xa2\x29\xbb\x13\xf2\x5d\xcb\xac\x20\x37\x05\xe3\xd9\x11\x55\xd7\x73\xb0\x6a\x60\xfd\xe6\xf9\x06\xb6\xbb\x32\xe6\x23\x7a\xa2\xc7\xac\xc7\x3f\xa7\x18\x1f\xba\x0d\x5b\x52\x2f\xe3\xd7\xf0\x22\xe3\x24\xb8\xf3\x00\x5e\x45\x73\xed\xf6\x86\x76\xe3\x18\xfe\x80\xf8\x72\xef\x3b\xcf\xbe\x85\xfc\x69\x19\xc9\x0b\x28\xad\xa0\xfb\x2e\x4c\xca\xe0\xd1\x4b\x4a\x3b\x50\xab\x76\xd2\x4e\x17\x17\xf5\x44\x7c\xb6\xed\xa3\xfa\x15\x00\x00\xff\xff\xc4\xc2\x29\xf6\x51\x0c\x00\x00")

func templatesViewsDevicesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsDevicesHtml,
		"templates/views/devices.html",
	)
}

func templatesViewsDevicesHtml() (*asset, error) {
	bytes, err := templatesViewsDevicesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/devices.html", size: 3153, mode: os.FileMode(420), modTime: time.Unix(1545664507, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsJsDevicesJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\xdd\x6e\xdb\x3a\x12\xbe\xef\x53\x4c\xdd\x00\x94\x91\x58\xde\xc5\x62\x81\x85\x13\x65\x2f\x9a\x5e\x14\x28\x4e\x0b\x34\x77\x6d\x11\xd0\xe2\x48\x66\x43\x93\x3e\x24\x15\xd7\xa7\xf0\xbb\x1f\x50\x94\x15\x29\xb6\x25\x39\x96\xfb\x03\x1c\x5d\x04\x92\x32\x1c\x7d\x33\xdf\x70\x7e\xe8\xb3\x80\xa9\x38\x9b\xa3\xb4\xc3\x50\x23\x65\xab\x20\xc9\x64\x6c\xb9\x92\x10\x0c\xe1\xfb\x0b\x00\x80\x07\xaa\xc1\xd2\xa9\xc0\x1b\x7c\xe0\x31\x1a\x88\xe0\x2c\x20\xaf\x58\xf1\x94\xff\x8b\x0c\x73\x51\x77\x85\x37\xd4\xd2\x5b\xf7\x32\xf8\x5e\xbe\x74\xd7\x82\xa6\xf8\x0e\x65\x6a\x67\x13\xf8\xef\xbf\x2e\x6a\xff\x13\x54\xa6\x19\x4d\x71\x02\xf5\x35\xee\xca\xb4\x98\x00\x19\x33\x6a\x66\x53\x45\x35\x1b\x33\x6a\x69\xfe\x55\x33\xe6\xff\xfe\x9f\x0c\xbf\x1a\x25\x49\x6d\xd9\xba\xae\x9d\x7e\xa5\xdf\x1a\x34\x4f\x55\x9a\x52\x6d\xc7\x85\x45\xe3\xff\xa3\xb4\xdc\xae\xa2\xe2\x99\x5c\x6c\x2d\x74\x08\x3e\xea\x78\x02\xc4\xdd\x35\x7e\x3b\x56\x22\x9b\x4b\x33\x81\x4f\x5b\x5a\xb6\x01\x6d\x74\x4f\x80\xd8\xd5\x62\xe7\xa7\xdd\xa5\x51\x32\xd4\x13\x78\xe4\x2a\x97\x1e\xee\xd1\x08\x05\x89\xb1\x92\x16\xa5\x85\x08\x08\xb9\x7c\xb1\x57\x34\x51\x1a\x02\x27\xcf\x81\x4b\x68\xd5\xec\x8d\xf4\x9a\xcf\x23\x20\x57\x66\x41\x25\xc4\x82\x1a\x13\x0d\x04\x9d\xa2\x80\xfc\xef\xc8\x64\x71\x8c\xc6\x0c\xae\x09\x9c\x7b\xb5\x9f\xf8\x17\x38\x07\x72\x35\x76\x4b\xae\x81\x5c\xee\xfd\xc8\x7a\x3f\x5c\x8d\x36\xd3\x72\x03\x61\xb7\x8a\xf5\xd6\xdb\xf5\xb6\x67\x1b\xe9\xe0\x8c\x1c\xad\xc3\x58\x6a\xb3\xee\x9c\x7a\xf1\x26\xd7\x9b\x25\xb7\xf1\xac\x10\x0c\xad\x7a\xa7\x96\xa8\x5f\x53\x83\xc1\xb0\x95\x31\x6a\x10\x88\x92\x82\x4b\x24\x93\x46\x51\x78\x74\x72\x47\x72\x3d\xa0\x0a\xb5\x4d\xe1\x56\x41\x93\x24\x7d\xc1\x61\x54\xa6\xa8\x8f\x42\xa3\x71\xae\x1e\xb8\x4c\xfb\x80\xc3\x65\xa2\x8e\x07\x83\xac\x0f\x2c\x4b\xaa\x25\x97\xe9\x33\xe1\x30\x4c\x68\x26\x6c\x1f\x14\x79\x4d\xfb\x71\xec\xd3\xbc\xbd\x99\x77\xbf\x3d\x74\x7b\x5a\x6a\xee\x0f\xc8\xb8\x4e\xba\x69\x97\x15\x0e\xc8\xe5\x42\x91\xd7\xbd\x53\x25\xa7\xf9\x9f\xd6\xde\x59\xb5\xe0\xf1\x01\xf8\x73\xf1\x2e\x06\xe4\x82\x3f\xc2\x02\x93\x4d\x4d\xac\xf9\x14\xf5\x01\x49\xf2\x71\x4d\x07\x5b\x2a\xd2\x27\x36\x08\xa5\x6b\x50\x58\x67\x3b\xdc\xb2\x8b\xbc\x2a\x5e\x80\x56\xcb\x8e\xa5\xbc\x61\xb3\xf2\x04\x02\xad\x96\x61\x01\xa4\x6b\x05\x77\x05\x7c\x9a\x59\xab\x7c\xe5\x8f\x06\xfe\x61\xb0\xd9\xc1\x53\x2b\x61\x6a\x65\x91\x60\xf3\x5b\x1e\xbb\xff\x3b\x03\x46\x56\xa5\xa9\xc0\x68\x30\x57\x8c\x8a\xcd\x3b\xaa\x53\xb4\xd1\xe0\x55\xf5\x65\x7e\x3f\xb2\xdc\x3a\xe9\xd7\x4a\x26\x5c\xcf\x81\x71\xe3\xb0\x82\xef\xbb\xe0\x95\x4b\x0c\xce\x04\xce\x5c\x62\xa8\xad\x8c\xa9\x10\x53\x1a\xdf\x47\x03\x2f\x7c\x9b\x7f\x38\xf8\x4c\x36\x6b\x34\xa6\xdc\x58\xd4\x77\x7e\xf1\x67\x32\xbc\xcc\x33\x4d\x6b\xde\x22\x57\x7c\x63\x6b\x2a\x56\x8b\x99\xb3\x0e\xca\xbb\x91\x4f\xc4\x03\x28\xa0\xdf\xd4\x20\x0f\xae\xaf\xc6\xfc\x7a\xbb\x51\xd8\x5c\x6b\x40\x61\xb0\x67\x26\x8a\xca\xdb\x2f\x15\x3e\x6a\x7e\x69\x26\xd4\x7d\xc9\xc2\x1b\x79\x08\x09\xad\xad\x24\xb9\x62\xfc\xa1\xe2\xe6\x51\xaa\x55\xb6\x80\xf2\x6e\xf4\xad\xe8\x73\xca\xb6\xd7\x95\x2d\x4f\x4f\xab\x65\xdd\x48\x75\x0d\x43\xc9\x68\x61\xd8\x28\x9e\x61\x7c\x3f\xb8\x6e\x0b\xd0\x44\xa3\x99\x95\xbe\x79\x5d\x2c\x1a\xf3\xeb\x9e\x31\x16\x8d\xc4\x16\xcc\x45\xde\x5d\xb4\xa1\x34\xfc\x2f\x1c\x99\x39\x15\xa2\x84\xfa\xc1\x2f\x3c\x0c\xe9\x98\xf1\x87\x7d\xdd\xc2\xf1\x69\xdc\xa0\xe6\x54\xdc\xc9\x6c\x3e\x45\x7d\xfc\x04\xc0\xd0\x95\x9f\x85\x4b\xf9\xc7\x2b\xeb\xb9\x5f\x79\xfe\x84\xd8\xa6\x19\xba\x4e\x88\xb5\xd6\x34\x57\xfb\x1b\x4d\x88\xa7\x69\xc2\x9e\xcf\x4a\xab\x6a\xe8\x4a\xcb\x42\xf3\x39\xd5\xab\x82\x96\x5c\xef\xef\xc6\xcb\x09\x5b\xcb\x67\x33\xd4\x51\x3f\x74\xa5\xa9\x32\x64\x3e\x6a\xfe\x99\x44\xd5\xde\x7c\x29\x9f\xd6\xc3\xc2\x45\xe5\xc1\xe2\x3b\xd7\x20\x48\xd4\x9b\xa3\x45\x51\x3e\x77\x3e\x5c\xfc\x25\x0f\x10\x4b\x3b\x7e\xce\x11\xa2\xa4\x73\x3c\xbe\xcc\xf4\x71\xf2\x95\x70\x8d\xa6\x1f\x35\x77\x09\xd7\xc6\x1e\x32\x57\x61\xd3\xee\x72\x63\xd2\xcb\x36\x21\xa8\xf4\x86\x47\xed\x20\xf7\xa1\x5b\xf5\xd1\x6a\x2e\x53\x0f\xed\x54\x59\x2f\x77\x95\xa0\xff\x78\x0a\x5a\x27\xf5\x07\x94\xb6\x7b\x55\x70\xab\xfa\x2e\x07\x39\x84\xb7\xcc\x15\x85\x36\xf5\x70\x78\x35\x70\x2a\x3f\x15\x9f\xf8\x75\x8b\xc1\xd6\x4f\x4a\x60\xa7\x8a\xad\xc8\x30\x54\x32\x20\xb1\xe0\xf1\x3d\xb9\x00\xe2\xe7\x82\xb0\x3a\x11\x91\x8b\x0a\x3d\xb5\xe8\xc4\x70\xa1\x73\xc3\x6f\xfc\x59\x63\x50\x09\x22\xe7\x77\xaf\xe5\x2d\x83\xa8\xf6\x03\x57\xa8\xd5\x32\x38\x0b\xec\x8c\x9b\x61\x18\x0b\x65\xd0\xd8\x80\x58\x4d\x86\xc3\xd0\x39\x33\x18\x56\x87\xda\x0a\xc1\x67\xa1\x2b\x14\x4f\x2a\x93\x9b\xa1\x26\x40\x3e\xbc\xff\x78\xfb\x24\xc8\xf6\x54\x8f\x9c\xb3\x0d\xb2\x73\x20\xe3\xc2\xca\xda\xda\x62\xea\x7f\x8c\xcc\x60\x57\xd4\xd4\xac\x72\xd8\x42\x8d\x42\x51\x16\x3c\xd9\x4d\xeb\x1a\x1f\xc7\xf3\xe2\x46\xc0\x63\x69\x39\x98\x94\x13\x12\xf1\xf4\x10\x63\xec\x0d\x6c\x61\x44\xef\xa2\x24\x3f\x97\xcb\x11\xc3\xcb\x28\x02\x92\x49\x86\x09\x97\xc8\xc8\xbe\x6d\x9f\x27\x5e\xbf\xa4\x29\x33\x48\x5c\xc2\x87\x3f\x94\xe5\xc9\x2a\x68\xce\x1f\xf9\xb8\x3d\x01\xf2\xbe\xf8\xbd\x65\x77\xea\x2b\xa5\xf1\x9b\x9d\x00\xf1\x34\x40\xc5\x27\xde\x15\xc0\x0d\xa8\x6e\x8a\xbc\xff\x51\x6b\xa5\x5b\x44\x8d\x5d\x09\x2e\xd3\x09\x90\xa9\x52\xd6\x58\x4d\x17\xff\x69\x38\xd1\xd9\x57\x1b\xda\x8e\xdb\x9e\xe1\x32\xd9\x93\xc7\x3a\xe9\xf1\x0e\x2b\x02\xeb\xc7\xb8\xac\x25\x71\x37\x24\x8a\x25\x97\x4c\x2d\xc3\xea\x29\x20\x44\x8f\x9b\x61\x93\xd1\xaa\x21\x7c\xa2\x7c\xe9\x8f\x3e\x8f\xd9\x9e\x1a\x4d\x26\x2c\x44\x6e\x83\x26\x94\x8b\x86\xdd\xd9\x2d\x86\x36\xf1\xf3\xa6\x25\xf8\x7d\xe8\xe8\x70\x8e\xc6\xd0\x14\x1b\x04\xbb\x6d\xa6\x19\x67\x38\x81\x84\x0a\xd3\xa0\xab\x7b\xe8\xec\x0b\x1b\xdf\x13\xec\x88\x9d\x3e\x2b\xd2\x8b\xf5\xf0\xf2\xef\x00\x00\x00\xff\xff\xc9\x18\x57\xab\xb0\x22\x00\x00")

func assetsJsDevicesJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsJsDevicesJs,
		"assets/js/devices.js",
	)
}

func assetsJsDevicesJs() (*asset, error) {
	bytes, err := assetsJsDevicesJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/js/devices.js", size: 8880, mode: os.FileMode(420), modTime: time.Unix(1545664518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesBoggartMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x41\x6a\x14\x41\x18\x85\xdf\x84\xb8\xe9\x8d\xe8\xda\xc5\xef\xc2\xa0\x68\xc5\xaa\x6e\x03\xa1\x66\x6a\x22\xc6\x04\xc4\x0c\x8e\xb1\x75\xff\x93\x29\x7b\x1a\xa7\xab\x9a\xaa\x6a\x51\xc8\x0d\x5c\x7b\x02\xaf\xe0\x46\x88\x1e\xc0\x55\x7b\x01\xcf\x22\xd3\x43\x0c\x79\xab\xef\xa3\x5e\x3d\xfe\xbf\xb7\xb7\xbf\x02\xc0\x16\x80\x3b\x00\x1e\x01\xb8\x01\x60\x82\x4d\xe6\x00\x6e\x02\x78\x0d\x60\x39\x02\x18\xc0\x2d\x00\xbf\x47\xc0\x08\x57\xd9\xba\x84\xc6\xba\x6e\xfb\x4d\xc3\x21\xd1\xd2\x37\x16\xa7\xb6\xf5\x21\x89\x59\xac\xea\x85\x78\xd6\x55\x51\x94\x5e\xd3\xc2\x7e\x7c\xfa\xa1\x5e\x72\xe3\x77\x43\x97\xcd\x5f\x95\xe2\x30\x58\x4e\xb5\x77\xe2\x39\x27\xab\x29\x97\x6a\x5f\xc8\x42\xe4\x05\xe5\x85\xde\xdb\x7b\x28\x0b\x29\xb3\x13\x8e\x49\x94\x81\x5d\x5c\x71\xf2\x41\xd3\xcb\x61\x83\x66\x5d\xe0\xc6\x2f\x3c\x4d\xae\x0d\x4f\xb3\x13\x76\x55\xc7\x95\x15\xa5\xe5\x46\xd3\x7f\xd7\x74\xda\xc5\x58\xb3\xcb\x66\x2f\x66\x47\xe2\x9d\x0d\xb1\xf6\x4e\x93\xda\x95\xd9\xa1\x77\xc9\xba\x24\xca\xcf\xad\xd5\x94\xec\xa7\xf4\xb8\x5d\x71\xed\xc6\x74\xb6\xe4\x10\x6d\x32\x6f\xcb\x63\xb1\x7f\xd5\x5b\xdf\xf3\xde\x06\x71\xe4\xce\xfc\xa2\x76\x95\xa6\x6c\xbe\xea\x02\xaf\xc4\xb1\x0f\x4d\xd4\xe4\xda\x41\xa3\x29\xc6\xb4\x41\xe3\xee\x29\x69\x8c\xa2\x9d\x1d\x5a\xa3\xbc\x6b\x94\xa2\x03\x92\xa4\x07\x9f\x9a\xfc\xf2\x69\x62\x9e\xac\xf1\xfe\x50\x9b\x28\x49\xe7\xe7\x9b\x2f\x53\x93\xcb\x07\x74\x40\x8a\x34\xe5\x63\xf4\xdf\xfa\x8b\xfe\xe7\x9f\x2f\xfd\x0f\xea\xbf\xf7\xbf\xfa\x0b\xfc\x0b\x00\x00\xff\xff\x6d\x20\x21\x24\xdc\x01\x00\x00")

func localesRuLc_messagesBoggartMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesBoggartMo,
		"locales/ru/LC_MESSAGES/boggart.mo",
	)
}

func localesRuLc_messagesBoggartMo() (*asset, error) {
	bytes, err := localesRuLc_messagesBoggartMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/boggart.mo", size: 476, mode: os.FileMode(420), modTime: time.Unix(1545671553, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesDevicesMo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x52\xcf\x6f\x1b\x45\x14\xfe\xbc\x59\x43\x71\x7f\x50\x0a\xa8\xe2\x97\x34\x1c\x5a\x81\xd0\xb6\x6b\x87\x4a\xd5\x26\x4e\x5b\xea\x44\xaa\x88\x21\x6d\x0d\x27\x10\x9a\xd8\x13\x67\x55\x7b\xd7\xda\xd9\x8d\x82\x54\xa4\xc6\x3d\x14\x29\x12\x48\x15\xbf\x4e\x54\x81\x13\x37\x53\xc5\xc2\x69\x12\xe7\x5f\x78\x73\x83\x0b\x37\xb8\x71\x43\x70\x43\x68\x76\x26\x46\x65\x0e\xfb\xde\xf7\xe6\x7b\xdf\x7e\xef\x69\x7e\x3d\xe5\x7e\x09\x00\xcf\x01\x78\x19\xc0\x1e\x80\x57\x00\x7c\x50\x40\x7e\xa8\x00\x3c\x09\x40\x15\x80\xa3\x00\x7e\xb1\xf8\xb7\x02\x70\x04\xc0\x1f\x16\xff\x55\x00\x9e\x00\xf0\x4f\x01\x28\x02\x28\x3a\x86\x7f\xd4\x01\x1c\x00\xa7\x1d\xa0\x04\xe0\x45\x07\x78\x0a\xc0\x19\x07\x38\x09\xe0\xbc\xe5\x5d\x76\x00\x17\xc0\xa2\x03\x1c\x07\x70\xdd\x31\x7a\x1f\x39\x46\x6f\xc5\xf2\x3a\x96\xb7\xee\x00\xab\x05\xe0\x13\xab\xf3\xfb\x94\x89\x7f\x4f\x99\x59\x8e\xb8\xc0\x29\x3d\x8b\x6b\xea\xbe\x0b\x9c\x00\x70\xc5\x05\x8e\x01\x58\x72\x81\xd3\x00\x3e\x74\x8d\xbf\xcc\x35\x73\xaf\xdb\xbe\xaf\x5c\xe0\x79\x00\x3f\xb8\xc0\x33\x00\x0e\x5c\xe3\x47\xb9\xc0\x4b\x00\x7e\xb6\x3a\x7f\xda\x58\x28\x9a\xf9\x4e\x14\x0d\xef\x85\x22\x60\x57\x98\x9f\x93\x36\x6a\x6f\x5a\xff\xb8\xc5\xcf\xc2\xcc\x73\x78\x8a\x36\x3e\x6d\xe3\x14\xac\x2e\xcc\xfc\x5a\x5b\xfb\xd1\xbb\xd7\x7b\xd7\xde\x8f\x59\xae\xde\x2b\xae\x34\xd3\x30\x8e\x24\x6a\x42\x36\x93\xb0\xa7\x01\x6a\x62\x2d\x6c\x0a\x89\x5a\x28\xf9\x72\x47\xb4\x30\x1f\xd9\xb8\x26\xa2\x54\x62\x21\x4c\x44\xfe\x95\x29\x5b\x09\x13\xd1\xc2\xb5\x1a\x16\xf9\x04\x2d\x86\x32\x15\x91\x48\x24\xea\xd7\x1b\x0d\x26\xb3\x65\xad\xbd\x3c\x29\xa4\x71\x2f\x6c\x4a\xbc\xc3\xbb\x02\x37\x45\x12\xf2\x0e\x8b\xb2\xee\xb2\x48\x70\x33\xe5\x69\x26\xd1\xe0\xf2\x96\xfd\xb2\x66\x9c\x45\x29\x1a\x1f\xf7\x04\x6e\x88\x5e\x9c\xa4\x5e\x5d\xb6\xc3\x96\xf7\x56\xd6\x96\x5e\x23\x0e\x58\x4b\xac\x5d\xbe\x15\xae\xf2\x6e\x7c\x2e\xc9\x4a\x4b\xef\x36\xbc\xab\x89\xe0\x7a\x10\xaf\xc6\x53\x11\xb0\x8a\x5f\xbe\xe8\xf9\xd3\x5e\x65\x9a\x55\xa6\x83\x0b\x17\xde\xf0\xa7\x7d\xbf\xa4\xfd\x7a\x8d\x84\x47\xb2\xc3\xd3\x38\x09\xd8\xdb\xb9\x06\xab\x67\x09\xef\xc6\xad\x98\xcd\x3e\x26\x3c\x57\x5a\xe4\x51\x3b\xe3\x6d\xe1\x35\x04\xef\x06\x6c\x82\x03\x76\x23\x93\x32\xe4\x51\xa9\x7e\xad\x3e\xef\xbd\x2f\x12\x19\xc6\x51\xc0\xca\xe7\xfc\xd2\xd5\x38\x4a\x45\x94\x7a\xda\x7e\xc0\x52\xb1\x9e\x9e\xef\x75\x78\x18\xcd\xb0\xe6\x2a\x4f\xa4\x48\xab\xef\x35\x16\xbc\x8b\xff\xf1\xb4\x9f\x15\x91\x78\xf3\x51\x33\x6e\x85\x51\x3b\x60\xa5\xa5\x4e\x96\xf0\x8e\xb7\x10\x27\x5d\x19\xb0\xa8\x97\x43\x59\x9d\x9e\x61\x26\xad\x46\x67\xca\x7e\xb5\x5a\x66\x67\xcf\x32\x9d\xfa\xaf\x56\xcb\x65\x76\x89\xf9\x2c\xc8\xf1\x5c\xb5\x72\x78\x35\x5b\x7d\x53\xa7\xaf\xe5\xb4\xd9\xb2\xcf\x6e\xdf\x36\x2d\x73\xd5\x8a\xff\x3a\xbb\xc4\xca\x2c\x60\x95\x19\xd0\x17\x34\xa4\x1d\xb5\xa1\xfa\xf4\x90\x46\xea\x73\xd0\xb7\x74\x40\x23\xb5\x41\x03\xda\xa7\x11\x0d\x41\xdf\xeb\x5b\x75\x87\xc6\x13\xde\x00\x74\x5f\x6d\xd2\x23\xda\x55\x9f\xa9\x7b\x34\xa4\x7d\x1a\x83\xee\xff\xbf\xb0\x45\x63\xfa\x51\x6d\xaa\xbe\x11\xd6\x2d\x3f\xd1\x98\x1e\xaa\x4d\xd0\x03\x1a\xaa\x3b\x3a\xa5\x1d\x96\x87\xfc\x46\xbf\x2e\x7a\x40\x63\xb5\x41\xbb\x34\xa4\xed\xdc\xc2\x63\x04\xda\xa2\x5d\x75\x57\x7d\x4a\x03\xd5\xa7\x21\xed\xd2\xc8\x3c\x34\x3a\xa0\x31\x6d\x5b\xeb\x8f\x0e\xab\xaa\x4f\x63\x5d\xcb\x2b\xf4\x0d\xed\x69\x1f\x5b\xf9\xaf\x47\xb4\x43\xfb\xe6\xf7\xfb\x34\xa6\x3d\x5d\x04\x6d\xa9\xbe\x56\x56\x77\xd5\x06\xe8\x6b\x1a\xd0\x36\x0d\xd4\x3d\xdd\x3c\x01\xa0\xef\x68\x44\x07\xf8\x37\x00\x00\xff\xff\xd8\xf1\x6a\xd5\x20\x05\x00\x00")

func localesRuLc_messagesDevicesMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesDevicesMo,
		"locales/ru/LC_MESSAGES/devices.mo",
	)
}

func localesRuLc_messagesDevicesMo() (*asset, error) {
	bytes, err := localesRuLc_messagesDevicesMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/devices.mo", size: 1312, mode: os.FileMode(420), modTime: time.Unix(1545671553, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/devices.html": templatesViewsDevicesHtml,
	"assets/js/devices.js": assetsJsDevicesJs,
	"locales/ru/LC_MESSAGES/boggart.mo": localesRuLc_messagesBoggartMo,
	"locales/ru/LC_MESSAGES/devices.mo": localesRuLc_messagesDevicesMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"js": &bintree{nil, map[string]*bintree{
			"devices.js": &bintree{assetsJsDevicesJs, map[string]*bintree{}},
		}},
	}},
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"boggart.mo": &bintree{localesRuLc_messagesBoggartMo, map[string]*bintree{}},
				"devices.mo": &bintree{localesRuLc_messagesDevicesMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"devices.html": &bintree{templatesViewsDevicesHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
