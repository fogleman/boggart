// Code generated by go-bindata.
// sources:
// templates/views/widget.html
// locales/ru/LC_MESSAGES/widget.mo
// DO NOT EDIT!

package homie

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsWidgetHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x7b\x8f\xdb\x36\x12\xff\x3f\x9f\x62\x8e\xd9\x40\x72\xbb\x92\xf6\x51\x04\x77\x1b\xc9\x41\xaf\x3d\x20\x38\xa4\x49\xd1\xe4\xda\x3f\x72\xb9\x05\x2d\xd2\x16\x77\x69\x52\x21\x29\x7b\x1d\xc3\xdf\xfd\x40\xbd\x2c\xcb\x92\xed\xcd\x7a\xd3\x16\xa8\x80\x6e\x25\x72\x38\xc3\x99\xdf\x70\x1e\x74\x96\x4b\x20\x74\xcc\x04\x05\x14\x4b\x61\xa8\x30\x08\x56\xab\x27\x21\x61\x33\x88\x39\xd6\x3a\x42\x29\x9e\x50\xcf\x30\xc3\x29\x1a\x3e\x01\x00\x68\x4e\xe6\xe3\xd7\x9c\x8e\x4d\x39\x99\x13\x24\x97\xc3\xe5\x12\xd8\xf9\xdf\x05\xa0\x1f\xe9\x8c\xc5\x14\x9e\x69\x04\x27\x20\x18\xaf\xff\xf3\x05\x9e\x52\x58\xad\xc2\x20\xb9\x2c\x19\x07\x84\xcd\x86\x4f\x7a\x84\x28\x36\x49\x36\xa4\x34\x28\xc6\x52\x4d\xbd\x89\x92\x59\x0a\x69\xc6\xb9\xd7\xa6\x6d\xd3\x33\x91\x66\xa6\x58\xd0\xa2\xca\x29\x39\x1e\x51\xbe\x3d\x9e\xcf\x8d\x32\x63\xa4\x00\xb3\x48\x69\x84\x8a\x0f\x54\xb1\x1d\x19\x01\x23\x23\xbc\x39\x56\x82\x89\x49\xfe\xae\xa7\xa8\x93\x51\xf5\x10\x6c\xb0\x67\xe4\x64\xc2\x69\x84\xa6\x92\x60\x8e\xca\x31\xac\x26\xd4\x44\xe8\x69\x31\xb8\x9f\x49\x4e\x57\x20\x15\xa1\xda\xfe\x3f\x48\x31\x66\x6a\x0a\x8a\x6a\x83\x95\x01\x92\xe3\x81\xc0\x87\xd5\xea\x60\xa6\x23\x49\x16\x0d\x9e\xbf\x31\xce\x61\x44\x5b\x3c\x7d\xf8\x5e\x51\x58\xc8\x0c\x74\xa6\xe8\xcb\x7b\x8a\x88\x31\xe7\x23\x1c\xdf\x46\x08\xc7\x86\x49\xe1\x3a\x25\x77\x67\xf0\xa2\x9b\xc9\xda\xc7\x7e\x29\x28\x0b\x89\x61\x50\xa0\xf2\x00\xfc\x08\x16\x13\xaa\xfe\x68\xf0\xd1\xe3\x82\x37\x67\x29\x85\xd8\xb2\x9f\x3c\x1e\x80\xf4\x10\xf8\x7e\x63\x29\xdd\x87\x5d\x18\x74\x1c\xca\x32\x60\x74\x7c\x96\xaf\x55\x44\x69\x9e\xfd\x98\x53\xac\xc6\xec\x0e\x0d\xbb\x66\x95\x9c\x77\x84\xb9\x58\x72\x6f\x4a\xbc\xf3\x0b\xb0\x6f\x7a\x5a\xbd\xdd\x69\xef\xfc\xa2\x27\x26\xdd\x5d\xa7\x58\x50\xbe\x23\x0a\xdd\x5d\x37\xc3\xea\x06\x55\x72\xb1\x15\x41\xb1\x31\x8a\x8d\x32\x43\x75\x65\xab\xe4\xa2\x63\x65\xc6\x2b\xf6\x02\xcf\x40\xe0\xd9\x08\xab\x22\x1e\x42\xbe\x9f\x6b\x23\x25\x1f\xc9\xbb\x0e\xa9\xf9\x7a\xce\x86\x21\x6e\xe8\xcd\x71\xaa\xa9\xc7\x99\xb8\x45\xc3\x90\xd5\x01\x17\xc3\x18\x7b\x71\x42\x67\x4a\x0a\xcf\x46\xd1\x30\x60\xc3\x30\xc0\xc3\x30\xe0\xac\x0b\xbe\xac\x23\xa0\xee\x84\x65\x07\xd0\xdb\x86\xac\x92\x57\x87\x0c\x83\x47\x9c\xd6\xa9\x24\xff\xc8\xff\x7a\xda\x28\x96\x52\x92\xfb\x70\x31\x4e\x8c\xa7\xa8\x4e\xa5\xd0\x6c\x46\x41\xc8\xb9\xc2\x29\x02\x6d\x16\xf6\x48\xce\x19\x31\xc9\xd5\xf9\xd9\xd9\xb3\x3e\xd3\x99\x84\x62\xd2\x37\xa7\xba\x27\xca\x85\xd5\xfe\xa6\xc4\xb3\x7e\x75\x81\xd6\xf0\x7f\x5f\xe1\x5e\xc1\x6e\x92\x9d\xac\xd6\x2b\x7f\xc5\x3c\xdb\xbb\x2a\x0c\xfa\xb6\x66\xd7\xec\x50\xc8\x86\x95\xfe\x8d\x2c\x97\xa0\x6c\x14\x85\x13\x9b\xe6\x4f\xe1\x64\x66\x37\x03\x57\x11\xf8\x45\xb0\xd1\xd7\x6b\x87\xb6\x25\x47\xbf\x46\x3b\x2c\x57\x10\x10\xab\xf2\x49\x5d\x4e\x98\x9e\x2d\x37\x17\xec\x24\x28\xf7\xcf\xc6\x40\x3f\x95\x7c\x11\x9b\xa6\x9c\x4e\xa9\x30\xd8\xc6\x36\xbf\x88\x9b\x68\xd7\xc6\x37\x44\xa6\x8a\x56\x7e\x94\x62\x42\x98\x98\x5c\x9d\xa1\x61\x18\x4b\x52\xbb\xe6\x8d\x96\x02\x0d\x43\x1d\x2b\x96\x9a\x32\x3f\xe1\x34\xe5\x2c\xce\x45\x06\x37\x78\x86\x8b\x49\x34\x24\x32\xce\xec\x66\xfc\xb9\x62\x86\xba\xff\x7e\xf7\xf6\x8d\x6f\xdd\x59\x4c\xd8\x78\x51\x7c\xa6\x58\x69\xea\xe6\x30\xcc\x2b\xeb\xaf\x56\x83\x53\x10\x19\xe7\xa7\x70\x31\x18\x84\x41\xc1\x6e\x18\x06\x76\x1f\xc3\x30\x48\x15\x3d\xc8\x32\x94\x6b\x7a\xa8\xea\x16\x9a\x4a\xfa\x41\xbc\x05\xd9\x47\xb9\x1b\xe2\x7e\x87\xde\x2f\x21\x0c\x7a\xdc\x3a\x0c\xf2\x08\x71\x84\xf4\x73\xf4\x04\x03\x55\x90\x26\x0f\x4f\x35\xff\x54\x12\x93\x18\x6b\x03\x53\xaa\x35\x9e\xd0\xbf\x52\xcd\x7d\x52\x8d\x6d\x43\x36\x5a\x92\x44\x2a\xf6\x59\x0a\x83\x39\xe4\xdf\x79\x0d\xe3\xe5\xed\x12\x28\x69\xa3\x81\x1d\x46\x30\xa5\x26\x91\x24\x42\xa9\xd4\x06\x01\x23\x11\x1a\x55\x48\x20\x28\xca\xa9\x08\xbd\x2c\x5f\x1a\x53\x42\xce\x30\x67\x04\x9b\x9e\x73\xbb\xd1\xf3\x18\x3a\x85\x75\xa3\xd4\x03\x0a\xd4\xfd\x8f\xa5\x8d\x10\xa7\x33\xca\xd1\x1a\x24\x61\x94\xe4\x85\x1e\x50\x3a\xed\x65\xe5\xb3\x97\x9d\x2e\xdb\x7e\x6a\x67\x7b\x5d\xb0\xb6\x0e\x06\xa1\x4e\xb1\xa8\x8f\x08\xfd\x94\x31\x65\xfd\xf9\x9b\x30\xb0\x13\xbb\x0e\xfb\x8e\x5e\xad\x6d\x81\x72\xbf\xcf\xab\xfd\x3e\x3f\x68\xbf\x39\x97\xbc\x61\x2c\x83\xb2\xa1\x77\x06\x6d\xc0\x5c\x9a\xa5\x40\xae\xb4\x98\x4d\x1b\xf5\x47\xca\x71\x4c\x13\xc9\x09\x55\x11\xc2\x9c\xda\x5e\x25\x0f\x8a\x11\x42\x50\xa9\xdb\x54\x7c\x87\xc2\x5b\xee\x79\xc8\xd4\x83\xfd\xa0\x8e\x07\x8f\xe1\x09\x3f\x35\x83\xcd\xef\x8e\xb5\xc5\x17\x2b\x8a\xbb\x20\xb6\x7d\x18\xfb\x6c\x53\xc1\x75\x45\x66\x4f\xf2\x5c\x47\xe8\xbb\x0a\xf3\xda\x54\xd6\x1b\xaa\x8f\x61\x18\x54\x0b\x1e\x13\x5c\x2e\xae\xb5\xe4\x8c\x74\x86\xb6\xae\x05\x87\x39\x42\x9f\x61\xa7\xc4\x93\xe3\xb1\xa6\xc6\xbb\xdc\x67\xd5\x8d\xbe\x5b\x67\xa3\x29\x33\x5b\x7d\xb7\xce\xe2\x98\x6a\xdd\x28\x7e\xdf\x51\x41\x0e\x69\xeb\xbf\xcc\x7a\x61\x60\xd5\xff\xc2\xa4\x5e\x54\x88\x65\x25\xd8\xbe\x34\xfb\x43\x67\xf9\x1f\xca\xe2\xf5\xaf\xd4\x7e\xcf\xd4\xde\x4c\xd9\xed\xac\x5c\x75\x04\xdb\xa9\xbc\x98\xd1\x68\xf3\xae\xa8\x4c\xdc\x52\xf5\x76\x93\x5f\xab\x6f\x85\x3d\xbd\x2b\x1c\xd6\x85\xb5\x7b\xd8\xf3\xc6\x31\x7e\x9b\x5a\x1b\x1d\xd2\xc0\xc2\x17\x35\xb1\xb0\xb7\xee\xdf\xd9\xcc\xc2\xbd\x1a\x5a\x76\x0a\x27\x32\x57\x28\x6f\x67\xd7\x01\xa0\x9f\xf5\x81\x2d\x6c\xc1\xd5\x7f\x73\xb4\x4e\x76\xdd\xc5\x96\xac\xdf\x2f\x52\x0a\x68\x24\x6d\xb1\x72\x40\x3f\xb6\x51\xf7\xc4\x09\x8d\x6f\xed\x99\x5f\x77\xac\x9e\x9e\x33\x13\x27\x55\xe6\xdb\xd6\xa1\x38\x01\x5d\xe3\xf5\xd6\xdc\x54\x31\x61\x6a\x82\x1c\xef\x01\x20\xa3\x2c\xec\xab\x15\xe4\x62\x29\xa9\x1b\x37\x08\xf6\xea\x9c\xf7\xa7\x6c\x0c\x52\x81\xbb\xa5\x3c\x13\x06\x0d\xba\xc7\x9f\x7f\x87\x06\xf7\x36\x8b\xc8\xa6\x23\xaa\x7a\x0a\xc2\x7e\xbb\x94\xe5\x5f\x63\xea\xd7\xb2\x4b\xee\xb7\x59\x8a\x8d\xa1\x4a\x44\xe8\x7f\x1f\xbc\x6f\x3f\xbe\xfc\x70\xe6\xfd\xe3\xe3\x37\x27\xe8\x81\x06\xc9\xfa\x2c\x92\xfd\xb9\x4c\xf2\x45\x16\xd9\x52\x7a\xcc\x25\xb6\x5a\xff\x49\x94\x5e\xfb\x81\xfb\x5f\xbf\x78\x19\xbc\xbc\x8f\x01\xb0\x20\x1d\xd0\x17\x97\x49\xd6\x2b\x26\x14\x5c\x4e\x45\xfb\x7c\x9e\x9f\x9d\x1d\xe6\x17\x0f\xad\xa6\xef\x11\x53\x86\x1d\x46\x3c\xa4\xec\x86\xfb\xdd\x6a\x1d\xda\x0c\x1e\x15\xf3\x03\x00\xfd\x3d\x2f\xce\x60\xd7\xe5\x19\xf4\x5d\xa0\xc1\x03\x6b\xf0\xf5\x9e\x5a\xaf\xd5\x6f\xda\x36\xe5\xd7\x27\x79\xb9\x04\x6d\xb0\x61\xf1\xab\xf7\x3f\xbd\x06\xb7\x78\xff\xcf\x2f\xaf\x01\x05\x04\xeb\x64\x24\xb1\x22\x01\xd6\x9a\x1a\x1d\xcc\xa8\x20\x52\xe9\xa0\xae\xb1\xb4\x2f\xa8\xf1\x46\x3a\x88\x75\x31\xfa\xbe\x18\x1d\x49\x69\xb4\x51\x38\xf5\xa7\x4c\xf8\xb1\xd6\x08\xc6\x98\x6b\x3a\x38\xa2\xd4\x75\x6d\x57\x6d\x60\x3d\xf2\x38\x1b\x48\xd8\x24\xe1\xb6\xda\xbf\x29\xe4\x19\x39\x95\x4a\xc9\x79\x97\x8c\x02\x97\xbc\xd8\x6c\x9c\x09\xbb\xac\x51\x6f\x3e\x2d\x8b\x60\xc8\x5d\x04\xf2\x13\x74\xda\x1e\xad\x43\xc5\x72\xc3\x1b\x8a\x02\xd6\x46\x9c\x67\x2f\xea\x89\x55\xe9\x0e\xb9\xdc\xb6\x27\x54\xf0\xdf\xe8\x23\x82\x1f\xdc\xe8\xe0\xe6\x53\x46\xd5\xc2\x6f\xe0\x6f\x0d\x72\xf3\x18\xa0\x8f\xb4\x15\xd8\xeb\x69\x8f\x22\x73\xed\x56\x2d\xd9\x0d\x7f\xfb\x0a\xc2\x4b\xdd\x7b\x9d\xfc\x38\xe2\x9b\x3e\x7e\xd3\xf8\xf4\x53\x1c\xdf\x1e\x51\x4e\xdd\xe8\x59\x29\xf5\x47\x8f\x80\xc3\x7e\xfe\xa9\x4f\xc1\x89\x5b\xfd\x12\x34\xf0\x15\xc5\x64\xe1\x8e\x33\x91\xf7\xa3\xe0\x0e\x5a\xc7\x28\xe1\x37\xda\x67\x82\x99\x57\x95\xa6\x4c\x4c\xde\x8a\xd7\x12\x13\x77\xf0\xe2\xc9\x06\x6d\xcd\xa5\xbc\x91\x79\x85\x05\xe1\x54\xb9\xaa\xcd\xd4\x3e\x6c\x0c\xae\xb2\x2e\x92\x71\x03\x51\x14\x81\x33\xc6\x8c\x53\xe2\x74\x11\xdb\x47\xd0\x39\xfc\xfc\x46\x1a\x36\x5e\xb8\xdd\x14\xf6\xc9\xaf\x32\xae\xc0\xf9\x97\x52\x52\x39\xa7\xfd\x74\xf4\xce\x5c\x81\xf2\xcb\x9b\xb6\x1d\x84\x8b\xd4\xf2\xa3\x7b\xf8\x25\x8c\xd0\xab\x02\x96\x7e\x22\x1b\x76\x98\x98\x5c\x81\x53\xbb\xe6\xa5\xd3\x49\xbd\x1a\xbc\xd8\x1a\x5f\xd5\xd5\x97\x5b\xef\x1b\xfe\x66\x2d\x97\x89\x22\x76\x1d\xcb\x78\xef\x0a\xfc\x8e\x68\x3e\xbd\x97\xe3\xd7\x30\xe0\x93\xcd\xaf\x56\xbe\x10\x44\xce\xfd\xe2\x5e\x06\xa2\xda\x99\xdd\x78\x4a\xba\xac\x7a\xe2\xe3\x1b\x7c\xd7\x63\xcc\x52\xeb\x9f\xdf\xbe\x7b\xdf\xa3\x72\xa6\xf8\x15\x38\xd5\x35\x90\x03\xdf\x42\x3c\x25\xdd\xa4\xa5\xed\xae\x5a\xc7\x6a\x5b\xbd\x96\xca\xab\xd6\xf1\x3c\x71\x9d\xa7\xf5\xaf\x40\xce\xc0\x2f\xae\x53\xeb\xb3\xef\xd2\x99\x8d\x08\xdb\x0a\xe5\xe3\x7e\xaa\xf2\xff\xff\x48\xc7\x38\xe3\xc6\xed\x30\xef\x0c\x2b\xa0\x10\xc1\x89\x6b\x12\xa6\xdb\xc1\xe1\x58\x36\xa3\x7e\xaa\x64\xea\x3a\x85\xe5\x9c\x41\x37\xa9\xcd\x12\x96\x56\x53\xc5\x30\x67\x9f\xa9\xdb\x43\xf8\xc5\xc6\x6d\xeb\xb7\x75\xb1\xbb\xa1\xb8\xeb\xd4\x55\x4b\x5e\xc5\x7c\x60\xe4\x63\xb3\x92\x29\x6b\x18\x3b\xec\x0c\xfc\x38\xc1\x62\x42\xd7\xc8\x74\xf9\xdf\x0c\x6f\x6f\xd2\x3e\x0d\x04\xfa\x4d\x03\x11\x2c\x57\xdd\xd3\xb7\x10\xd5\x36\x66\xc4\x19\x6c\x11\x75\xe0\x6a\x43\x52\xb5\xc6\xc2\xe8\x0c\x8a\x88\x5e\xdd\xfd\xf4\x86\x25\xbb\x97\x0f\xb7\x1f\x1b\x22\xcb\x7b\x1b\x67\x50\x44\x36\xa7\x37\x0c\xee\x67\x38\xc3\xdc\xdd\xde\xfe\xea\x71\xdc\xb2\x81\xb0\x33\xb8\x87\x8b\xda\xbf\xc7\xf7\xcc\xe6\x77\xa3\xc8\x6d\x0d\x5b\x7f\xcd\xf3\x5a\x57\x7f\xb6\x3f\x63\x1c\x92\x6a\x8b\x3c\xe1\x2c\x97\x6b\x49\x7d\x94\xfb\xf3\xec\xde\x14\x71\x58\x7a\xe8\x37\x50\x9b\xa2\xfe\xb7\x2e\xeb\x4e\xe1\xff\x01\x00\x00\xff\xff\x2c\x45\x56\x00\xfb\x2c\x00\x00"

func templatesViewsWidgetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsWidgetHtml,
		"templates/views/widget.html",
	)
}

func templatesViewsWidgetHtml() (*asset, error) {
	bytes, err := templatesViewsWidgetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/widget.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesWidgetMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xcf\x6f\x1b\x45\x18\x7d\x76\xec\x42\x0d\xb4\x50\xa1\x82\x10\x48\x53\xa4\x14\x2a\xd8\xb0\x76\x08\x82\x4d\x9c\xd0\xa4\xad\x8a\x88\xd5\x28\x98\x72\xe0\x80\xa6\xf6\xd4\x59\xb1\xde\x35\xb3\xbb\x2d\x95\x7a\x70\x1c\x04\x8d\x5a\x89\x5f\x42\x48\x1c\x8a\x2a\x40\xe2\xc0\xc1\x49\xeb\xd6\x14\x79\x03\xff\xc1\x37\x37\xc4\x81\x03\x57\xae\x9c\x38\xa1\xd9\x5d\x3b\xd0\x24\xcc\x65\xbf\xf9\xe6\x7b\x6f\xde\x7b\xb3\xbf\x1f\xca\x7d\x01\x00\x8f\x00\x78\x12\xc0\xb7\x00\x1e\x03\xf0\x7c\x06\xf1\xba\x92\x01\xf6\x03\x58\xcf\x24\x33\x9f\x67\x80\x7d\x00\xbe\xcb\x00\x8f\x02\xf8\x21\x03\x1c\x06\xf0\x4b\x3a\xf7\x6b\x3a\xf7\x47\x06\xc8\x03\xf8\x2b\x03\xdc\x07\xe0\xef\x14\x97\xcd\x26\xfb\xfd\x59\x20\xa7\xef\xcd\x26\x73\x87\xb3\xc0\xb8\xd6\x90\x05\x8e\x01\x98\x4f\xcf\x9d\x2c\xb0\x92\x01\xde\xcb\x02\x0f\x03\xf8\x6d\x0c\x98\x02\xf0\xe7\x18\xf0\x38\x80\x23\x39\x60\x06\x80\x95\x03\x4e\x03\xb8\x98\x4b\xf4\xff\x9c\x03\x9e\xd1\x7a\x72\xc0\x01\x6d\x24\x0f\x1c\x02\x70\x30\x0f\x14\x00\x3c\x9d\x07\x9e\x00\x60\xa4\xfd\xd3\xf9\x84\xff\xed\x3c\xb0\xa4\xef\xcd\x03\xef\x00\x18\xa4\xfd\xa7\xf6\x01\x3a\x92\x42\x9a\x95\x5e\x63\x00\x1e\x40\xe2\x4b\x6b\xbd\x3f\xed\x67\x01\x3c\x98\xd6\x1a\x7b\x00\xdb\xeb\xa1\x44\x4a\xbc\x74\x5e\x07\x91\xe4\x81\xe3\x41\x20\xed\x73\x61\x20\x30\x2f\x3d\x5e\xaf\x71\x3f\x60\x4d\xe1\xfb\xbc\x21\xb0\xe0\xb9\xe7\xed\x46\xf2\x91\x4d\x26\x85\x2f\x02\x56\x17\x17\xec\x9a\xf8\x77\x33\xe0\x72\xd4\x3e\x11\x7f\xd8\xb8\x3f\xac\xf8\x90\xdf\xc7\xa2\xb8\x20\x1c\x54\x52\xf2\x33\xad\xc0\xf6\x5c\x2c\x27\x78\xbc\x21\xdc\x3a\xce\x72\x27\x14\x78\xcb\x76\x1c\x76\x4e\xdc\x43\x3d\xc1\x8e\x4b\xc1\x2e\x79\x21\xf3\x43\x29\xe6\x46\x53\x17\xed\x96\x60\xb5\x58\xe9\x9e\x93\x2d\x81\x65\xd1\xf2\x64\x60\x54\xfc\x86\x5d\x37\xe6\xc3\x86\x6f\x54\x3d\x4b\x03\x5e\x7d\xd7\x5e\xe1\x4d\x6f\x42\x86\x85\xa5\x33\x55\x63\x41\x0a\xae\x85\x19\x27\x78\x20\x2c\x56\x32\x8b\xaf\x18\xe6\xa4\x51\x7c\x89\x95\x26\xad\xa9\xa9\xe7\xcc\x49\xd3\x2c\x2c\x72\x3f\x30\xaa\x92\xbb\xbe\xc3\x03\x4f\x5a\xec\xf5\x98\x83\x55\x42\xc9\x9b\x5e\xdd\x63\x33\xff\x21\x9e\x2d\x2c\x72\xb7\x11\xf2\x86\x30\xaa\x82\x37\x2d\x36\xda\x5b\x6c\x39\xf4\x7d\x9b\xbb\x85\xca\x6b\x95\x93\xc6\x59\x21\x7d\xdb\x73\x2d\x56\x9c\x30\x0b\x0b\x9e\x1b\x08\x37\x30\xaa\x97\x5a\xc2\x62\x81\x78\x3f\x78\xa1\xe5\x70\xdb\x9d\x66\xb5\x15\x2e\x7d\x11\x94\xdf\xac\x9e\x32\x5e\xde\x9e\xd3\x7a\xce\x0b\x69\x9c\x74\x6b\x5e\xdd\x76\x1b\x16\x2b\x2c\x39\xa1\xe4\x8e\x71\xca\x93\x4d\xdf\x62\x6e\x2b\xde\xfa\xe5\xc9\x69\x96\x94\x65\x77\xbc\x68\x96\xcb\x45\x76\xf4\x28\xd3\xa5\x79\xa4\x5c\x2c\xb2\x39\x66\x32\x2b\xde\xcf\x96\x4b\xc3\xa3\x99\xf2\x8b\xba\x7c\x36\x1e\x9b\x29\x9a\xec\xf2\xe5\x04\x32\x5b\x2e\x99\xc7\xd8\x1c\x2b\x32\x8b\x95\xa6\x41\x9f\xa8\x8e\xea\xa8\x36\xf5\x69\x43\xad\xa9\x0e\xe8\x7b\xea\xab\x36\x45\x74\x97\x22\xda\xa4\x9e\x5a\xa7\xae\xea\x50\x8f\x7e\x52\xd7\x68\x40\x11\xf5\x98\x5a\xa5\x88\x22\xda\x50\xeb\xd4\xa3\x01\xf5\xa9\x07\xfa\x8a\x22\x1a\xa8\x0f\xa8\x4f\x37\xd5\x9a\x6a\x53\x57\x7d\x48\x7d\xf5\x31\xe8\x6b\x8a\xe8\x96\xea\xc4\x54\x6d\xba\x4d\xb7\x86\x18\x4d\xb3\xa1\x6f\x52\xab\xd4\x65\x6a\x4d\xad\xc6\x3a\x22\xfa\x51\x57\xb4\x49\xdd\xff\x03\xd3\x56\xdc\xea\xd1\x1d\xea\xd2\x4d\xd5\x56\x6b\x74\x87\xee\x52\x7f\x0f\xa2\x6f\x76\x34\x23\xfd\xd7\xdf\xeb\x5e\x5d\xdd\x13\xdf\x4e\xe2\xa0\x81\xba\x06\xba\xb1\x33\x80\xeb\xb4\xb5\x6d\x79\xa7\xb4\xbe\xea\x68\xe0\x75\xd5\xa1\x2d\x1d\x0f\x6d\x0e\x5b\x5f\xd2\x80\xba\xea\xa3\x6d\xa6\xdd\xb4\x6a\x79\xda\xbd\xea\xec\xe6\xfc\x76\x0c\x8e\x26\x18\x7d\x16\x3b\x48\xf3\xd2\x62\xaf\xce\x81\x3e\x1d\x61\x47\x91\x5f\x89\x11\x5d\x16\xbf\xf2\x2e\xef\xb6\x6b\x0c\x7b\xf1\xdf\x18\xbd\x63\x62\xe9\x9f\x00\x00\x00\xff\xff\x75\x38\x05\x0f\x2e\x06\x00\x00"

func localesRuLc_messagesWidgetMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesWidgetMo,
		"locales/ru/LC_MESSAGES/widget.mo",
	)
}

func localesRuLc_messagesWidgetMo() (*asset, error) {
	bytes, err := localesRuLc_messagesWidgetMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/widget.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/widget.html":      templatesViewsWidgetHtml,
	"locales/ru/LC_MESSAGES/widget.mo": localesRuLc_messagesWidgetMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"widget.mo": &bintree{localesRuLc_messagesWidgetMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"widget.html": &bintree{templatesViewsWidgetHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
