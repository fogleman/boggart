// Code generated by go-bindata.
// sources:
// templates/views/widget.html
// locales/ru/LC_MESSAGES/widget.mo
// DO NOT EDIT!

package homie

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsWidgetHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6b\x6f\xe3\x36\xd6\xfe\x3e\xbf\xe2\x94\x4d\x61\xb9\x8d\x24\x27\xd3\xce\xfb\xae\xc7\xf6\xa0\xdb\x6e\xd1\x5d\x4c\x3b\x45\x27\x6d\x81\x9d\x9d\x0d\x28\x89\xb6\x99\x50\xa4\x4a\x52\x76\x3c\x81\xff\xfb\x82\xd4\xc5\x92\x2c\xf9\x92\x38\xbd\x00\x35\xd0\x54\xa2\x0e\x2f\xe7\x39\x0f\xcf\x85\xd2\xdc\xdf\x43\x44\xa6\x94\x13\x40\xa1\xe0\x9a\x70\x8d\x60\xbd\x7e\x36\x8a\xe8\x02\x42\x86\x95\x1a\xa3\x04\xcf\x88\xab\xa9\x66\x04\x4d\x9e\x01\x00\x54\x1f\xda\xf6\x6b\x46\xa6\x3a\x7f\x68\x05\xe6\xcf\x37\x37\xe6\x77\x7f\x0f\xf4\xe2\xff\x39\xa0\xaf\xc9\x82\x86\x04\x3e\x51\x08\xce\x80\x53\x56\xfe\xe7\x71\x1c\x13\x58\xaf\x47\x81\x04\x7f\xf2\x6c\xab\xf7\x14\x3c\x86\x95\xbe\x4e\x93\x08\x6b\x23\x58\x93\xb0\x93\xaa\x18\x33\x36\x19\xa9\x50\xd2\x44\x83\x5e\x25\x64\x8c\x70\x92\x30\x1a\x62\x4d\x05\xf7\x6f\xf0\x02\x67\x0f\xd1\x24\x12\x61\x1a\x13\xae\xbd\xa5\xa4\x9a\x38\x66\xcc\x2b\xf1\x56\x4b\xca\x67\x4e\xef\xfe\xbe\x36\x99\xf7\x8d\x90\x31\xd6\x80\x2e\x07\x83\x17\xee\xe0\xc2\x1d\x5c\x5e\x5d\x7c\x31\x1c\x7c\x3e\x1c\x7c\xf1\xef\xc1\xff\x0d\x07\x03\x03\x59\xaf\xdf\x1f\xf9\xd9\xf0\x93\x91\x9f\xad\xa5\xa9\x05\xe1\x51\x75\xe5\x23\xbf\xc0\x69\xe4\x47\x74\x91\x6b\xbd\x8d\xae\xa4\xb3\x79\x0d\xde\x8a\xc4\x54\xc8\xd8\x9d\x49\x91\x26\x90\xa4\x8c\xb9\x4d\xd9\xa6\x3c\xe5\x49\xaa\xb3\x0e\x0d\x29\x2b\xc9\x70\x40\x58\x21\x1b\x68\xde\x29\x69\xa5\x83\x54\x6b\xc1\x73\xa8\xb3\x1b\x54\xe9\x0c\x66\x00\x1a\x8a\xec\x62\x89\x25\xa7\x7c\x66\xaf\x55\x8c\x5a\x47\x2c\x7e\x11\xd6\xd8\xd5\x62\x36\x63\x64\x8c\x62\x11\x61\x86\xf2\x36\x2c\x67\x44\x8f\xd1\xc7\x59\xe3\xfe\x41\xac\x5c\xc6\xde\x31\x2a\x69\xf8\x95\xe0\x53\x2a\x63\x90\x44\x69\x2c\x35\x44\x96\x96\x08\x3c\x58\xaf\x0f\x1e\x34\x10\xd1\xaa\x32\xe6\x2f\x94\x31\x08\x48\x63\x4c\x0f\xbe\x94\x04\x56\x22\x05\x95\x4a\xf2\xea\xc8\x29\x42\xcc\x58\x80\xc3\xdb\x31\xc2\xa1\xe1\xb0\xd3\xcb\x47\xef\xf5\x5f\x76\x18\xc5\x1a\x86\x96\xf4\xc0\x0a\xa6\xd8\x4d\xc4\x92\x48\x57\x4c\xa7\x08\x9a\x50\xfc\x98\x0d\x98\x2f\x6c\x32\xf2\x69\x87\xb1\xfd\xcc\xc0\xa7\xa0\x42\x84\xf9\x8c\xc8\x3f\x1a\x13\xc8\x69\x79\xb0\xa4\x09\x81\xd0\x0c\x3f\x7b\x3a\x2e\x90\x63\x99\x40\x24\x56\x44\x6e\xd3\xe0\x17\x9a\x90\x47\x70\x60\xe4\x5b\xcf\xd1\xf0\x3b\x99\x57\x6b\xb9\xcd\x2f\x0b\xb7\x57\x75\x50\x21\x23\x58\x4e\xe9\x9d\x59\xc6\xf6\x53\x29\x96\x2d\x41\x28\x14\xcc\x8d\x23\xf7\xe2\x12\xcc\x95\x8a\x8b\xab\x3b\xe5\x5e\x5c\x76\x38\xce\xbb\xeb\x04\x73\xc2\x76\xb8\xca\xbb\xeb\x6a\xd0\xab\x49\xcd\x2f\x27\xcd\x90\x86\xb5\x96\x34\x48\x35\x51\x19\x8c\x23\x7f\x7e\xd9\xd2\x33\x2d\xbd\x2b\xc7\x0b\xe0\x78\x11\x60\x99\x39\x6d\xb0\xeb\xb9\xd6\x42\xb0\x40\xdc\x75\xb9\x5c\x46\x27\x23\x5c\xd1\x9b\xe1\x44\x11\x97\x51\x7e\x8b\x26\x55\x63\x1b\x5b\x87\x73\xb2\x90\x82\xbb\xc6\x81\x1b\x9b\x8e\x7c\x3c\x19\xf9\xac\xc5\xb8\x23\x3f\x65\x2d\xad\xbb\xcc\xb2\xc3\xd0\xdb\x40\x16\xa9\x45\xcb\x1c\x1a\x07\x8c\x94\xf1\xce\xde\xd8\xbf\xae\xd2\x92\x26\x24\xb2\x5b\x20\x6b\x8f\xb4\x2b\x89\x4a\x04\x57\x74\x41\x80\x8b\xa5\xc4\x09\x02\xa5\x57\x86\xc9\x4b\x1a\xe9\xf9\xf0\x62\x30\xf8\xa4\x0b\x3a\x3d\x27\x38\xea\x7a\x26\x77\xec\x21\x3d\x2f\xd6\x17\x47\xae\xe1\xd5\x25\xda\x98\xff\xcb\xc2\xee\x85\xd9\xf5\x7c\xe7\x50\x9b\x9e\x3f\x63\x96\xee\xed\x35\xf2\xbb\x96\x66\xfa\xec\x50\xc8\x78\xa5\xee\x85\xdc\xdf\x83\x34\x4e\x18\xce\x4c\xde\x75\x0e\x67\x0b\xb3\x18\x18\x8e\xc1\xcb\x7c\x95\xba\xde\x10\xba\x2d\xdb\xda\x4c\xb4\x03\xb9\x4c\x20\x32\x2a\x9f\x15\xf9\x9d\xaf\x3b\x96\x5c\xed\xb0\x53\x00\xca\x94\x90\xfc\x9a\x8f\x8b\x68\x9c\x30\x62\x12\x3a\x9b\xea\x79\x99\xdb\x45\xbb\x16\x5e\x9b\x32\x91\xa4\xe0\x51\x82\xa3\x88\xf2\xd9\x70\x80\x26\xa3\x50\x44\x25\x35\x6f\x94\xe0\xe8\x61\xd9\xe5\xbf\xde\xbe\xf9\xde\x53\x36\xb9\xa4\xd3\x55\x76\x9b\x60\xa9\x88\x63\xcd\xb0\x2c\xd0\x5f\xaf\xfb\xe7\xc0\x53\xc6\xce\xe1\xb2\x96\x4d\x9a\x75\x4c\x46\x7e\x22\xc9\x41\xc8\x10\xa6\x5a\x33\xe4\x0e\xf1\x72\xf6\x83\xc6\xae\xa7\xb0\xad\x68\xee\x34\x71\x37\xa1\xf7\xcf\x30\xf2\x3b\x68\x3d\xf2\xad\x87\x38\x41\xf8\x39\x79\x80\x81\xc2\x49\x47\x8f\x0f\x35\x7f\x97\x02\x47\x21\x56\x1a\x62\xa2\x14\x9e\x91\xbf\x42\xcd\x31\xa1\xc6\xd4\x4a\xb5\xba\x69\x2e\x24\xfd\x20\xb8\xc6\x0c\xec\xbd\xcd\x61\x5c\x5b\xcc\x82\x14\xc6\x1b\x98\x66\x04\x31\xd1\x73\x11\x8d\x51\x22\x94\x46\x40\xa3\x31\x0a\x0a\x4b\x20\xc8\xb2\xb1\x31\x7a\x95\x5f\x54\x1e\x71\xb1\xc0\x8c\x9a\x1a\xb2\x03\xe2\x6a\x61\xa6\x49\x0c\x9b\x6a\x6e\x57\x4e\x97\x15\x69\x53\x21\xc7\x88\x91\x05\x61\x68\x63\x24\xae\xa5\x60\x6e\x5e\xc5\x65\xa4\x7d\x5e\x70\xf6\x79\x2b\x65\x9b\xbf\x92\x6c\xaf\xb3\xa1\x0d\xc1\x60\xa4\x12\xcc\xcb\x2d\x42\x7e\x4d\xa9\x34\x7c\xfe\x74\xe4\x9b\x07\xbb\x36\x7b\x4b\x5a\xd8\x85\x40\xbe\xde\x17\xc5\x7a\x5f\x1c\xb4\x5e\x3b\x8a\xad\x6a\x73\xa7\xac\xc9\x9d\x46\x35\x33\xe7\xb0\x64\x96\xcb\x11\x33\x61\xa3\xbc\x49\x18\x0e\xc9\x5c\xb0\x88\xc8\x31\xc2\x8c\x98\x72\xc8\x3a\xc5\x31\x42\x50\xa8\x5b\x55\x7c\x87\xc2\x5b\xf4\x3c\xe4\xd1\xa3\x79\x50\xfa\x83\xa7\x60\xc2\x77\x55\x67\xf3\xbb\xdb\xda\xd8\x17\x4b\x82\xdb\x4c\x6c\xca\x38\xfa\xc1\x84\x82\xeb\x42\xcc\xec\xe4\xa5\x1a\xa3\xcf\x0b\x9b\x97\x50\x19\x36\x14\x37\x93\x91\x5f\x74\x78\x4a\xe3\x32\x7e\xad\x04\xa3\x51\xab\x6b\x6b\xeb\x70\x18\x11\xba\x80\x8d\x23\x53\xf3\x2b\xa2\xdd\xe7\xfb\x50\xad\xd5\xef\x2a\x0d\x62\xaa\xb7\xea\x77\x95\x86\x21\x51\xaa\x92\xfc\xbe\x25\x3c\x2a\x62\xd0\xae\xe3\x81\x87\xa1\x37\xf2\x8d\xfa\x0f\x0c\xea\xf9\xa1\xa1\x22\x5a\x53\x3e\x53\xcd\x43\xcd\x3f\x74\x9c\xff\x2a\x4f\x5f\xff\x0a\xee\x47\x06\xf7\x6a\xd0\x6e\xc6\xe5\x82\x09\x6d\xe1\x7c\xf3\xac\x76\xde\x94\x47\x6f\x21\x3b\x4b\xca\xdf\xaa\x78\x85\x3d\x05\x2c\x1c\x56\x8a\x35\x0b\xd9\x8b\xca\x5e\x7e\x93\x18\x98\x0e\xa9\x62\xe1\x41\x95\x2c\xec\x4d\xfe\x77\x56\xb4\x70\x54\x55\x4b\xcf\xe1\x4c\x58\x85\x6c\x4d\x5b\xf5\x02\xdd\x83\x1f\x58\xc9\x66\xe3\x7a\xdf\x9f\xac\xa0\xdd\x14\xb3\xf9\xd0\x57\xab\x84\x00\x0a\x84\xc9\x59\x0e\x28\xcb\x6a\xe9\x4f\x38\x27\xe1\xad\xd9\xf8\x9b\xc2\xd5\x55\x4b\xaa\xc3\x79\x11\x00\xb7\x75\xc8\x36\x41\x5b\x7b\xb9\x34\x27\x91\x94\xeb\x52\xc0\x5a\xbc\x0f\x48\x4b\x63\xf8\xf5\x1a\xec\xb4\x24\x2a\xeb\x37\xf0\xf7\xea\x6c\xcb\x54\x3a\x05\x21\xc1\xd9\x52\x9e\x72\x8d\xfa\xed\xed\x2f\x3e\x47\xfd\xa3\x61\xe1\x69\x1c\x10\xd9\x91\x17\x76\xe3\x92\x67\x81\x95\x47\x3f\xe7\xc5\x72\x37\x66\x09\xd6\x9a\x48\x3e\x46\xff\x7d\xe7\x7e\xf6\xfe\xd5\xbb\x81\xfb\xb7\xf7\x9f\x9e\xa1\x47\x02\x92\x76\x21\x92\xfe\xb9\x20\x79\x10\x22\x5b\x4a\x4f\x99\xc0\x46\xeb\x3f\x89\xd2\x1b\x1e\x38\xff\xf1\xb2\x8b\xfe\xab\x63\x00\xc0\x3c\x6a\x31\x7d\x76\xa6\x64\x58\x31\x23\xe0\x30\xc2\x9b\xfb\xf3\x62\x30\x38\x8c\x17\x8f\x4d\xaa\x8f\xf0\x29\x93\x16\x10\x0f\xc9\xbe\xe1\xb8\xc3\xad\x43\x6b\xc2\x93\xda\xfc\x00\x83\xfe\x9e\xe7\x67\xb0\xeb\x0c\x0d\xba\xce\xd1\xe0\x91\xa9\xf8\x66\x4d\x7f\x9e\x0c\xfc\xcd\xd5\x97\x7f\xa5\xdf\x27\x7d\x8d\x73\xfc\xeb\x9a\xdd\xb9\xde\x21\xd9\xee\xe4\xad\xc6\x3a\x55\x87\x64\xb3\x36\xb5\x33\x05\xa3\xd0\xf8\x5a\xa6\xdc\x7e\xaa\xb0\x5e\xe7\x57\x1b\xbf\x23\x09\x8e\x56\x25\xa3\x1f\xb3\x55\x0f\x52\xe0\x07\x29\x66\x92\xa8\x03\x55\xd8\xef\x14\xab\x9f\xf5\xe4\x43\xef\x39\x19\xd8\xd5\xd5\x0d\xb0\x84\xea\x4d\x69\xed\x56\x30\x6b\x92\x94\x4f\x85\xad\xd1\x16\x64\x83\x6e\x4d\x22\xfb\x4a\x20\xc3\xda\xf8\xdc\xac\xb8\x2b\x44\x02\x2c\x11\x60\x49\xb1\x6b\xfd\x34\x17\x4b\xeb\x91\xed\x94\x4b\x49\xb5\x26\xdc\x7a\xea\x8d\x48\x4c\xf9\x18\x0d\x6a\x2d\xf8\x6e\xd3\x49\x0b\x8d\x99\xed\x52\xa3\x68\xf1\xb8\x98\x17\xd6\xeb\x5d\x45\xda\x16\x6c\xd5\x93\x53\x25\x5d\xc1\xd9\xca\x86\xc0\xc6\x42\x21\x58\x69\xa2\x40\x4c\xa1\xb9\x9e\x7d\x67\xac\xb5\xd9\xba\xcf\x58\x8e\x14\x7b\x72\x66\x7f\x65\x0a\x06\x95\xc6\x07\x6f\x4e\x0b\x4a\x98\xf7\x7a\xc4\xde\x3b\xee\x25\x12\x1c\x74\xb6\x20\x34\x6e\x3b\x56\xb0\xcd\xb9\xed\x23\x29\x92\x0f\x82\xdb\xa3\xc6\x93\xc4\xd2\xca\x97\x7b\xa6\x6a\x2e\x53\xe1\xfb\x7b\x50\x1a\x6b\x1a\x7e\x7b\xf5\xdd\x6b\x70\xb2\xeb\x9f\x7e\x7c\x0d\xc8\x8f\xb0\x9a\x07\x02\xcb\xc8\xc7\x4a\x11\xad\xfc\x05\xe1\x91\x90\xca\x2f\x8f\x29\x94\xc7\x89\x76\x03\xe5\x87\x2a\x6b\xbd\xca\x5a\x03\x21\xb4\xd2\x12\x27\x5e\x4c\xb9\x17\x2a\x85\x60\x8a\x99\x22\xfd\x13\xce\xba\x39\x1e\x29\x16\xb0\x69\x79\x9a\x05\xcc\xe9\x6c\xce\x4c\xd0\xbe\xc9\xe6\xd3\x22\x16\x52\x8a\xe5\x49\x95\xcc\xed\x9e\x4f\x51\xdc\xb6\x4d\x91\xd9\xdb\x7a\x9f\x4a\xde\x6a\xba\x55\x1c\xce\xc7\xe5\x59\x86\xa5\x31\xd8\x34\xf7\x7c\xab\xb9\x4c\xe8\xef\x6b\x3c\xcb\x7c\x9a\xa9\x0b\x3e\x79\x59\x3e\x58\xe7\x44\xb3\x33\x77\x71\xec\x46\x9d\x90\x61\xfe\x8d\xf2\x6f\x7e\x4d\x89\x5c\x79\x15\x92\x19\x48\x6e\x9e\x82\x59\x81\x32\x13\x76\xd2\xf9\x49\xe6\xdc\x70\xb7\x31\x77\x85\xd4\xbf\xc1\xe4\xb9\xee\x9d\x3b\xe9\x34\xd3\x57\x37\xd2\x4d\xe5\xd6\x4b\x70\x78\x7b\xc2\x79\xca\x03\x59\x33\x4b\x79\x73\x4a\x1c\x37\xbb\xf5\xa6\xb1\x59\xb7\x27\x38\xec\x63\x90\x72\x9b\x9d\x39\xc5\x77\x21\x7d\xcf\xa6\x91\xce\x34\xe5\x36\x7e\x80\xd3\x6f\xec\xd3\xaf\x8b\x99\xb3\x02\x53\x99\xe0\x07\xe3\x86\x90\xf9\x25\x58\x62\xc6\x08\xfb\x29\x61\x02\x47\x6a\x08\x17\xe7\xad\x32\xb1\x29\x51\x87\x80\xa6\x54\xc6\x4b\x2c\x09\xda\x16\x0b\x25\xc1\x9a\xfc\x33\xc6\x33\x72\x35\x4f\xe3\x80\x63\xca\xd4\x30\xd3\x79\x5b\x1a\x87\x21\x49\x34\x89\xbe\xa1\x8c\xa8\x21\xd4\xd4\x8f\x71\x18\x50\x8e\xe5\xea\xdc\x0b\x28\xaf\x7f\xe1\xb8\x7e\x59\xff\xb8\x7b\xce\x6e\x94\x47\x39\xd5\xdf\x16\xa4\xa1\x7c\xf6\x86\xbf\x16\x38\x72\xfa\x0d\xd9\x12\xaf\xfc\x4d\xd4\xb7\x98\x47\x8c\x48\x47\x36\xe1\x33\x3f\x3a\x05\x47\x9a\xdd\x96\x32\x0d\xe3\xf1\x18\x7a\x53\x4c\x19\x89\x7a\x6d\xc2\xe6\xc7\xc9\x12\x7e\xf8\x5e\x68\x3a\x5d\x39\xed\x12\xe6\x67\xcb\xc7\x21\xf4\xfe\x21\xa5\x90\xbd\x6d\x5c\x4a\x39\x72\xa7\x87\x20\xbd\xfc\x0d\xe3\x0e\xc1\x55\x62\xc6\x23\x7b\xc6\x9b\xd3\x88\x74\x1a\xa3\xf8\x19\x0f\x4e\xf9\x6c\x08\xbd\x72\x97\x3f\xef\xb5\x4a\xaf\xfb\x2f\xb7\xda\xd7\xe5\x71\x93\x53\xae\x1b\x3e\x32\xc8\xa5\x3c\x0b\x03\xa7\x02\xef\x6d\x66\xbf\x13\xc2\xa7\xf6\x8e\xf8\x5b\x00\x58\x67\xfa\xb3\x46\xe8\xe5\x91\x58\x7a\x59\xc6\x08\xe3\x92\xcc\x4e\x18\x47\x6d\xa8\x9e\x79\xf8\x06\xdf\x75\x80\x99\x6b\xfd\xc3\x9b\xb7\x57\x1d\x2a\xa7\x92\x0d\xa1\x57\x24\xa8\x3d\xf8\x0c\xc2\x38\x6a\x17\xcd\xb1\x1b\x36\xb6\xd5\xb6\x7a\x0d\x95\x9b\x5b\xf9\xcc\xe9\x7d\x5c\x7e\xfd\xd2\xeb\x7b\xd9\x6b\xe4\xd2\xcb\x39\x64\x61\x7c\xdf\xb6\x42\xb6\xdd\x4b\xa4\xfd\xff\xd7\x64\x8a\x53\xa6\x9d\x16\x78\x17\x58\x02\x81\x31\x9c\x39\x7a\x4e\x55\xd3\x39\x9c\x0a\x33\xe2\x25\x52\x24\x4e\x2f\x43\xae\xd7\x6f\x17\x35\x01\xd7\xc8\x2a\x22\x29\x66\xf4\x03\x71\x3a\x04\x1f\x0c\x6e\x53\xbf\x96\x17\xda\x35\xd5\x9d\xde\x26\x07\xb4\x49\xe1\x3b\x1a\xbd\xaf\x25\x86\x79\x4a\x68\xda\x7b\x7d\x2f\x9c\x9b\xfa\x7a\x63\x9d\x36\x0e\x2e\xf0\xf6\x42\xcd\xaf\x62\x85\x6e\x78\x4c\xbc\x5a\xb7\x3f\xbe\x85\x71\x89\x33\x8d\x7a\xfd\x2d\xa1\x16\xdb\x1a\xb7\x54\xf4\x31\xa6\xec\xf5\x33\xaf\x5e\xbc\xf0\xea\x74\x4d\x66\x2d\xef\x6e\xdf\x57\xa6\xcc\x5f\x56\xf5\xfa\xf0\xd1\x18\x7a\xbd\x4e\x4f\xb8\x7f\xbc\x05\x66\xce\xf6\xea\xd7\x4f\xc3\xcc\xaa\x89\x7b\xfd\x23\x68\x6a\xfe\x9e\x9e\x9d\xd5\xfb\x4a\xcd\xd0\x68\x36\x9c\xb5\xb1\xad\xed\x50\x7a\x7f\xd4\x38\x24\xdc\x66\xb1\xc2\xfe\xb3\xad\x62\xa6\x2e\xc9\xfd\xb1\x76\x6f\x98\x38\x2c\x44\x74\x03\xd4\x94\x28\xbf\xf3\xdd\x14\x5e\xff\x0b\x00\x00\xff\xff\x9b\x43\x86\x02\x95\x37\x00\x00"

func templatesViewsWidgetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsWidgetHtml,
		"templates/views/widget.html",
	)
}

func templatesViewsWidgetHtml() (*asset, error) {
	bytes, err := templatesViewsWidgetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/widget.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesWidgetMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xcf\x6f\x1b\x45\x18\x7d\x76\xec\x42\x0d\xb4\x50\xa1\x82\x10\x48\x53\xa4\x14\x2a\xd8\xb0\x76\x08\x82\x4d\x9c\xd0\xa4\xad\x8a\x88\xd5\x28\x98\x72\xe0\x80\xa6\xf6\xd4\x59\xb1\xde\x35\xb3\xbb\x2d\x95\x7a\x70\x1c\x04\x8d\x5a\x89\x5f\x42\x48\x1c\x8a\x2a\x40\xe2\xc0\xc1\x49\xeb\xd6\x14\x79\x03\xff\xc1\x37\x37\xc4\x81\x03\x57\xae\x9c\x38\xa1\xd9\x5d\x3b\xd0\x24\xcc\x65\xbf\xf9\xe6\x7b\x6f\xde\x7b\xb3\xbf\x1f\xca\x7d\x01\x00\x8f\x00\x78\x12\xc0\xb7\x00\x1e\x03\xf0\x7c\x06\xf1\xba\x92\x01\xf6\x03\x58\xcf\x24\x33\x9f\x67\x80\x7d\x00\xbe\xcb\x00\x8f\x02\xf8\x21\x03\x1c\x06\xf0\x4b\x3a\xf7\x6b\x3a\xf7\x47\x06\xc8\x03\xf8\x2b\x03\xdc\x07\xe0\xef\x14\x97\xcd\x26\xfb\xfd\x59\x20\xa7\xef\xcd\x26\x73\x87\xb3\xc0\xb8\xd6\x90\x05\x8e\x01\x98\x4f\xcf\x9d\x2c\xb0\x92\x01\xde\xcb\x02\x0f\x03\xf8\x6d\x0c\x98\x02\xf0\xe7\x18\xf0\x38\x80\x23\x39\x60\x06\x80\x95\x03\x4e\x03\xb8\x98\x4b\xf4\xff\x9c\x03\x9e\xd1\x7a\x72\xc0\x01\x6d\x24\x0f\x1c\x02\x70\x30\x0f\x14\x00\x3c\x9d\x07\x9e\x00\x60\xa4\xfd\xd3\xf9\x84\xff\xed\x3c\xb0\xa4\xef\xcd\x03\xef\x00\x18\xa4\xfd\xa7\xf6\x01\x3a\x92\x42\x9a\x95\x5e\x63\x00\x1e\x40\xe2\x4b\x6b\xbd\x3f\xed\x67\x01\x3c\x98\xd6\x1a\x7b\x00\xdb\xeb\xa1\x44\x4a\xbc\x74\x5e\x07\x91\xe4\x81\xe3\x41\x20\xed\x73\x61\x20\x30\x2f\x3d\x5e\xaf\x71\x3f\x60\x4d\xe1\xfb\xbc\x21\xb0\xe0\xb9\xe7\xed\x46\xf2\x91\x4d\x26\x85\x2f\x02\x56\x17\x17\xec\x9a\xf8\x77\x33\xe0\x72\xd4\x3e\x11\x7f\xd8\xb8\x3f\xac\xf8\x90\xdf\xc7\xa2\xb8\x20\x1c\x54\x52\xf2\x33\xad\xc0\xf6\x5c\x2c\x27\x78\xbc\x21\xdc\x3a\xce\x72\x27\x14\x78\xcb\x76\x1c\x76\x4e\xdc\x43\x3d\xc1\x8e\x4b\xc1\x2e\x79\x21\xf3\x43\x29\xe6\x46\x53\x17\xed\x96\x60\xb5\x58\xe9\x9e\x93\x2d\x81\x65\xd1\xf2\x64\x60\x54\xfc\x86\x5d\x37\xe6\xc3\x86\x6f\x54\x3d\x4b\x03\x5e\x7d\xd7\x5e\xe1\x4d\x6f\x42\x86\x85\xa5\x33\x55\x63\x41\x0a\xae\x85\x19\x27\x78\x20\x2c\x56\x32\x8b\xaf\x18\xe6\xa4\x51\x7c\x89\x95\x26\xad\xa9\xa9\xe7\xcc\x49\xd3\x2c\x2c\x72\x3f\x30\xaa\x92\xbb\xbe\xc3\x03\x4f\x5a\xec\xf5\x98\x83\x55\x42\xc9\x9b\x5e\xdd\x63\x33\xff\x21\x9e\x2d\x2c\x72\xb7\x11\xf2\x86\x30\xaa\x82\x37\x2d\x36\xda\x5b\x6c\x39\xf4\x7d\x9b\xbb\x85\xca\x6b\x95\x93\xc6\x59\x21\x7d\xdb\x73\x2d\x56\x9c\x30\x0b\x0b\x9e\x1b\x08\x37\x30\xaa\x97\x5a\xc2\x62\x81\x78\x3f\x78\xa1\xe5\x70\xdb\x9d\x66\xb5\x15\x2e\x7d\x11\x94\xdf\xac\x9e\x32\x5e\xde\x9e\xd3\x7a\xce\x0b\x69\x9c\x74\x6b\x5e\xdd\x76\x1b\x16\x2b\x2c\x39\xa1\xe4\x8e\x71\xca\x93\x4d\xdf\x62\x6e\x2b\xde\xfa\xe5\xc9\x69\x96\x94\x65\x77\xbc\x68\x96\xcb\x45\x76\xf4\x28\xd3\xa5\x79\xa4\x5c\x2c\xb2\x39\x66\x32\x2b\xde\xcf\x96\x4b\xc3\xa3\x99\xf2\x8b\xba\x7c\x36\x1e\x9b\x29\x9a\xec\xf2\xe5\x04\x32\x5b\x2e\x99\xc7\xd8\x1c\x2b\x32\x8b\x95\xa6\x41\x9f\xa8\x8e\xea\xa8\x36\xf5\x69\x43\xad\xa9\x0e\xe8\x7b\xea\xab\x36\x45\x74\x97\x22\xda\xa4\x9e\x5a\xa7\xae\xea\x50\x8f\x7e\x52\xd7\x68\x40\x11\xf5\x98\x5a\xa5\x88\x22\xda\x50\xeb\xd4\xa3\x01\xf5\xa9\x07\xfa\x8a\x22\x1a\xa8\x0f\xa8\x4f\x37\xd5\x9a\x6a\x53\x57\x7d\x48\x7d\xf5\x31\xe8\x6b\x8a\xe8\x96\xea\xc4\x54\x6d\xba\x4d\xb7\x86\x18\x4d\xb3\xa1\x6f\x52\xab\xd4\x65\x6a\x4d\xad\xc6\x3a\x22\xfa\x51\x57\xb4\x49\xdd\xff\x03\xd3\x56\xdc\xea\xd1\x1d\xea\xd2\x4d\xd5\x56\x6b\x74\x87\xee\x52\x7f\x0f\xa2\x6f\x76\x34\x23\xfd\xd7\xdf\xeb\x5e\x5d\xdd\x13\xdf\x4e\xe2\xa0\x81\xba\x06\xba\xb1\x33\x80\xeb\xb4\xb5\x6d\x79\xa7\xb4\xbe\xea\x68\xe0\x75\xd5\xa1\x2d\x1d\x0f\x6d\x0e\x5b\x5f\xd2\x80\xba\xea\xa3\x6d\xa6\xdd\xb4\x6a\x79\xda\xbd\xea\xec\xe6\xfc\x76\x0c\x8e\x26\x18\x7d\x16\x3b\x48\xf3\xd2\x62\xaf\xce\x81\x3e\x1d\x61\x47\x91\x5f\x89\x11\x5d\x16\xbf\xf2\x2e\xef\xb6\x6b\x0c\x7b\xf1\xdf\x18\xbd\x63\x62\xe9\x9f\x00\x00\x00\xff\xff\x75\x38\x05\x0f\x2e\x06\x00\x00"

func localesRuLc_messagesWidgetMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesWidgetMo,
		"locales/ru/LC_MESSAGES/widget.mo",
	)
}

func localesRuLc_messagesWidgetMo() (*asset, error) {
	bytes, err := localesRuLc_messagesWidgetMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/widget.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/widget.html":      templatesViewsWidgetHtml,
	"locales/ru/LC_MESSAGES/widget.mo": localesRuLc_messagesWidgetMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"widget.mo": &bintree{localesRuLc_messagesWidgetMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"widget.html": &bintree{templatesViewsWidgetHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
