// Code generated by go-bindata.
// sources:
// templates/views/widget.html
// locales/ru/LC_MESSAGES/widget.mo
// DO NOT EDIT!

package homie

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsWidgetHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xfb\x6f\xe3\x36\xf2\xff\x7d\xff\x8a\x29\x9b\xc2\x72\x1b\x49\x4e\xb6\xdd\xef\xf7\xbc\x96\x17\xbd\xf6\x8a\xde\x61\xdb\x2d\xba\x69\x0b\xdc\xde\x5e\x40\x49\xb4\xcd\x84\x22\x55\x92\xb2\xe3\x0d\xfc\xbf\x1f\x48\x3d\x2c\xcb\x92\x1f\x89\xd3\x07\x50\x01\xeb\x95\xc8\x21\x87\xf3\x99\xe1\x3c\x28\xe5\xfe\x1e\x62\x32\xa1\x9c\x00\x8a\x04\xd7\x84\x6b\x04\xab\xd5\xb3\x51\x4c\xe7\x10\x31\xac\x54\x80\x52\x3c\x25\xae\xa6\x9a\x11\x34\x7e\x06\x00\x50\xef\xb4\xed\xd7\x8c\x4c\x74\xd1\x69\x09\x66\xcf\xd7\x0f\xe6\xba\xbf\x07\x7a\xf1\xff\x1c\xd0\xd7\x64\x4e\x23\x02\x9f\x28\x04\x67\xc0\x29\xab\xfe\x79\x1c\x27\x04\x56\xab\x51\x28\xc1\x1f\x3f\xdb\x1a\x3d\x01\x8f\x61\xa5\xaf\xb3\x34\xc6\xda\x10\x6e\x50\x58\xa6\x2a\xc1\x8c\x8d\x47\x2a\x92\x34\xd5\xa0\x97\x29\x09\x10\x4e\x53\x46\x23\xac\xa9\xe0\xfe\x0d\x9e\xe3\xbc\x13\x8d\x63\x11\x65\x09\xe1\xda\x5b\x48\xaa\x89\x63\xe6\xbc\x12\x6f\xb5\xa4\x7c\xea\xf4\xee\xef\x37\x98\x79\xdf\x08\x99\x60\x0d\xe8\x72\x30\x78\xe1\x0e\x2e\xdc\xc1\xe5\xd5\xc5\x17\xc3\xc1\xe7\xc3\xc1\x17\xff\x1e\xfc\xdf\x70\x30\x30\x90\xf5\xfa\xfd\x91\x9f\x4f\x3f\x1e\xf9\xf9\x5a\x9a\x52\x10\x1e\xd7\x57\x3e\xf2\x4b\x9c\x46\x7e\x4c\xe7\x85\xd4\xdb\xe8\x4a\x3a\x9d\x6d\xc0\x5b\xa3\x98\x08\x99\xb8\x53\x29\xb2\x14\xd2\x8c\x31\xb7\x49\xdb\xa4\xa7\x3c\xcd\x74\x3e\xa0\x41\x65\x29\x19\x0e\x09\x2b\x69\x43\xcd\x3b\x29\x2d\x75\x98\x69\x2d\x78\x01\x75\xfe\x80\x6a\x83\xc1\x4c\x40\x23\x91\xdf\x2c\xb0\xe4\x94\x4f\xed\xbd\x4a\x50\xeb\x8c\xe5\x15\x63\x8d\x5d\x2d\xa6\x53\x46\x02\x94\x88\x18\x33\x54\xb4\x61\x39\x25\x3a\x40\x1f\xe7\x8d\xfb\x27\xb1\x74\xb9\xf5\x06\xa8\x32\xc3\xaf\x04\x9f\x50\x99\x80\x24\x4a\x63\xa9\x21\xb6\x66\x89\xc0\x83\xd5\xea\xe0\x49\x43\x11\x2f\x6b\x73\xfe\x42\x19\x83\x90\x34\xe6\xf4\xe0\x4b\x49\x60\x29\x32\x50\x99\x24\xaf\x8e\x64\x11\x61\xc6\x42\x1c\xdd\x06\x08\x47\xc6\x86\x9d\x5e\x31\x7b\xaf\xff\xb2\x43\x29\x56\x31\xb4\x32\x0f\xac\x60\x82\xdd\x54\x2c\x88\x74\xc5\x64\x82\xa0\x09\xc5\x8f\xf9\x84\xc5\xc2\xc6\x23\x9f\x76\x28\xdb\xcf\x15\x7c\x0a\x53\x88\x31\x9f\x12\xf9\x47\xb3\x04\x72\x5a\x3b\x58\xd0\x94\x40\x64\xa6\x9f\x3e\x9d\x2d\x90\x63\x2d\x81\x48\xac\x88\xdc\x36\x83\x5f\x68\x4a\x1e\x61\x03\x23\xdf\x7a\x8e\x86\xdf\xc9\xbd\x5a\xcb\x63\x71\x5b\xba\xbd\xba\x83\x8a\x18\xc1\x72\x42\xef\xcc\x32\xb6\x7b\xa5\x58\xb4\x04\xa1\x48\x30\x37\x89\xdd\x8b\x4b\x30\x77\x2a\x29\xef\xee\x94\x7b\x71\xd9\xe1\x38\xef\xae\x53\xcc\x09\xdb\xe1\x2a\xef\xae\xeb\x41\x6f\x83\x6a\x76\x39\x6e\x86\x34\xac\xb5\xa4\x61\xa6\x89\xca\x61\x1c\xf9\xb3\xcb\x96\x91\x59\xe5\x5d\x39\x9e\x03\xc7\xf3\x10\xcb\xdc\x69\x83\x5d\xcf\xb5\x16\x82\x85\xe2\xae\xcb\xe5\x32\x3a\x1e\xe1\x9a\xdc\x0c\xa7\x8a\xb8\x8c\xf2\x5b\x34\xae\x2b\xdb\xe8\x3a\x9a\x91\xb9\x14\xdc\x35\x0e\xdc\xe8\x74\xe4\xe3\xf1\xc8\x67\x2d\xca\x1d\xf9\x19\x6b\x69\xdd\xa5\x96\x1d\x8a\xde\x06\xb2\x4c\x2d\x5a\x78\x68\x1c\x32\x52\xc5\x3b\xfb\x60\x7f\x5d\xa5\x25\x4d\x49\x6c\xb7\x40\xde\x1e\x6b\x57\x12\x95\x0a\xae\xe8\x9c\x00\x17\x0b\x89\x53\x04\x4a\x2f\x8d\x25\x2f\x68\xac\x67\xc3\x8b\xc1\xe0\x93\x2e\xe8\xf4\x8c\xe0\xb8\xab\x4f\xee\xd8\x43\x7a\x56\xae\x2f\x89\x5d\x63\x57\x97\x68\xad\xfe\x2f\x4b\xbd\x97\x6a\xd7\xb3\x9d\x53\xad\x47\xfe\x8c\x59\xb6\x77\xd4\xc8\xef\x5a\x9a\x19\xb3\x43\x20\xe3\x95\xba\x17\x72\x7f\x0f\xd2\x38\x61\x38\x33\x79\xd7\x39\x9c\xcd\xcd\x62\x60\x18\x80\x97\xfb\x2a\x75\xbd\x36\xe8\xb6\x6c\x6b\xcd\x68\x07\x72\x39\x41\x6c\x44\x3e\x2b\xf3\x3b\x5f\x77\x2c\xb9\x3e\x60\x27\x01\x54\x29\x21\xf9\xb5\x98\x17\xd1\x24\x65\xc4\x24\x74\x36\xd5\xf3\x72\xb7\x8b\x76\x2d\x7c\x83\x65\x2a\x49\x69\x47\x29\x8e\x63\xca\xa7\xc3\x01\x1a\x8f\x22\x11\x57\xa6\x79\xa3\x04\x47\x0f\xcb\x2e\xff\xf5\xf6\xcd\xf7\x9e\xb2\xc9\x25\x9d\x2c\xf3\xc7\x14\x4b\x45\x1c\xab\x86\x45\x89\xfe\x6a\xd5\x3f\x07\x9e\x31\x76\x0e\x97\x1b\xd9\xa4\x59\xc7\x78\xe4\xa7\x92\x1c\x84\x0c\x61\xaa\x35\x43\xee\x20\xaf\xb8\x1f\x34\xf7\x66\x0a\xdb\x8a\xe6\x4e\x15\x77\x1b\xf4\x7e\x0e\x23\xbf\xc3\xac\x47\xbe\xf5\x10\x27\x08\x3f\x27\x0f\x30\x50\x3a\xe9\xf8\xf1\xa1\xe6\xef\x52\xe0\x38\xc2\x4a\x43\x42\x94\xc2\x53\xf2\x57\xa8\x39\x26\xd4\x98\x5a\x69\xa3\x6e\x9a\x09\x49\x3f\x08\xae\x31\x03\xfb\x6c\x73\x18\xd7\x16\xb3\x20\x85\xf1\x06\xa6\x19\x41\x42\xf4\x4c\xc4\x01\x4a\x85\xd2\x08\x68\x1c\xa0\xb0\xd4\x04\x82\x3c\x1b\x0b\xd0\xab\xe2\xa6\xd6\xc5\xc5\x1c\x33\x6a\x6a\xc8\x0e\x88\xeb\x85\x99\x26\x09\xac\xab\xb9\x5d\x39\x5d\x5e\xa4\x4d\x84\x0c\x10\x23\x73\xc2\xd0\x5a\x49\x5c\x4b\xc1\xdc\xa2\x8a\xcb\x8d\xf6\x79\x69\xb3\xcf\x5b\x4d\xb6\x79\x55\xc6\xf6\x3a\x9f\xda\x18\x18\x8c\x54\x8a\x79\xb5\x45\xc8\xaf\x19\x95\xc6\x9e\x3f\x1d\xf9\xa6\x63\xd7\x66\x6f\x49\x0b\xbb\x10\x28\xd6\xfb\xa2\x5c\xef\x8b\x83\xd6\x6b\x67\xb1\x55\x6d\xe1\x94\x35\xb9\xd3\x68\x43\xcd\x05\x2c\xb9\xe6\x0a\xc4\x4c\xd8\xa8\x1e\x52\x86\x23\x32\x13\x2c\x26\x32\x40\x98\x11\x53\x0e\x59\xa7\x18\x20\x04\xa5\xb8\x75\xc1\x77\x08\xbc\x65\x9e\x87\x74\x3d\xda\x0e\x2a\x7f\xf0\x14\x96\xf0\x5d\xdd\xd9\xfc\xee\xba\x36\xfa\xc5\x92\xe0\x36\x15\x9b\x32\x8e\x7e\x30\xa1\xe0\xba\x24\x33\x3b\x79\xa1\x02\xf4\x79\xa9\xf3\x0a\x2a\x63\x0d\xe5\xc3\x78\xe4\x97\x03\x9e\x52\xb9\x8c\x5f\x2b\xc1\x68\xdc\xea\xda\xda\x06\x1c\x66\x08\x5d\xc0\x26\xb1\xa9\xf9\x15\xd1\xee\xf3\x7d\xa8\x6e\xd4\xef\x2a\x0b\x13\xaa\xb7\xea\x77\x95\x45\x11\x51\xaa\x96\xfc\xbe\x25\x3c\x2e\x63\xd0\xae\xe3\x81\x87\xa1\x37\xf2\x8d\xf8\x0f\x0c\xea\xc5\xa1\x61\x51\x80\x37\x8e\x34\xff\xd0\x51\xfe\xab\x22\x79\xfd\x2b\xb4\x1f\x19\xda\xeb\x21\xbb\x19\x95\xcb\x8a\x60\x3b\x94\xe7\x3d\x0a\x6d\x1e\x35\x15\x81\x5b\xc8\xce\x6a\xf2\xb7\xaa\x5b\x61\x4f\xed\x0a\x87\x55\x61\xcd\x1a\xf6\xa2\xb6\x8d\xdf\xa4\x06\xa3\x43\x0a\x58\x78\x50\x11\x0b\x7b\xf3\xfe\x9d\xc5\x2c\x1c\x55\xd0\xd2\x73\x38\x13\x56\x20\x5b\xce\xae\x1d\x40\xf7\xd4\x07\x96\xb0\xf9\xac\xde\xf7\x27\xab\x64\xd7\x55\x6c\x31\xf5\xd5\x32\x25\x80\x42\x61\x92\x95\x03\xea\xb1\x8d\xbc\x27\x9a\x91\xe8\xd6\xec\xf9\x75\xc5\xea\xaa\x05\xd5\xd1\xac\x8c\x7c\xdb\x32\xe4\x3b\xa0\xad\xbd\x5a\x9a\x93\x4a\xca\x75\x45\x60\xf5\xdd\x07\xa4\xa5\x51\xfb\x6a\x05\x96\x2d\x89\xab\xc2\x0d\xfc\xbd\x32\xdb\xfa\x94\x4e\x40\x48\x70\xb6\x84\xa7\x5c\xa3\x7e\x7b\xfb\x8b\xcf\x51\xff\x68\x58\x78\x96\x84\x44\x76\x24\x84\xdd\xb8\x14\xe9\x5f\xad\xeb\xe7\xa2\x4a\xee\xc6\x2c\xc5\x5a\x13\xc9\x03\xf4\xdf\x77\xee\x67\xef\x5f\xbd\x1b\xb8\x7f\x7b\xff\xe9\x19\x7a\x24\x20\x59\x17\x22\xd9\x9f\x0b\x92\x07\x21\xb2\x25\xf4\x84\x09\x6c\xa4\xfe\x93\x08\xbd\xb6\x03\xe7\x3f\x5e\x7e\xd3\x7f\x75\x0c\x00\x98\xc7\x2d\xaa\xcf\x0f\x93\x8c\x55\x4c\x09\x38\x8c\xf0\xe6\xfe\xbc\x18\x0c\x0e\xb3\x8b\xc7\x66\xd3\x47\xf8\x94\x71\x0b\x88\x87\xa4\xdd\x70\xdc\xa9\xd6\xa1\xc5\xe0\x49\x75\x7e\x80\x42\x7f\xcf\x83\x33\xd8\x75\x78\x06\x5d\x07\x68\xf0\xc8\x1c\x7c\xbd\xa6\x3f\x4f\xf2\xfd\xe6\xea\xcb\xbf\x32\xef\x93\xbe\xbf\x39\xfe\x3d\xcd\xee\x4c\xef\x90\x5c\x77\xfc\x56\x63\x9d\xa9\x43\x72\x59\x9b\xda\x99\x4a\x51\x68\x7c\x2d\x33\x6e\xbf\x51\x58\xad\x8a\xbb\xb5\xdf\x91\x04\xc7\xcb\xca\xa2\x1f\xb3\x55\x0f\x12\xe0\x07\x29\xa6\x92\xa8\x03\x45\xd8\xef\x14\xeb\xdf\xf3\x14\x53\xef\x39\x12\xd8\x35\xd4\x0d\xb1\x84\xfa\x43\xa5\xed\x56\x30\x37\x28\x29\x9f\x08\x5b\x9e\xcd\xc9\x1a\xdd\x0d\x8a\xfc\xf3\x80\x1c\x6b\xe3\x73\xf3\xba\xae\x24\x09\xb1\x44\x80\x25\xc5\xae\xf5\xd3\x5c\x2c\xac\x47\xb6\x2c\x17\x92\x6a\x4d\xb8\xf5\xd4\x6b\x92\x84\xf2\x00\x0d\x36\x5a\xf0\xdd\x7a\x90\x16\x1a\x33\x3b\x64\xc3\x44\xcb\xee\x92\x2f\xac\x56\xbb\x4a\xb4\x2d\xd8\xea\x47\xa6\x4a\xba\x82\xb3\xa5\x0d\x81\x8d\x85\x42\xb8\xd4\x44\x81\x98\x40\x73\x3d\xfb\x0e\x57\x37\xb8\x75\x1f\xae\x1c\x49\xf6\xe4\x96\xfd\x95\x29\x18\x54\x96\x1c\xbc\x39\x2d\x28\x51\x31\xea\x11\x7b\xef\xb8\xb7\x47\x70\xd0\xb1\x82\xd0\xb8\xed\x4c\xc1\x36\x17\xba\x8f\xa5\x48\x3f\x08\x6e\xcf\x18\x4f\x12\x4b\x6b\x9f\xec\x99\x9a\xb9\x4a\x85\xef\xef\x41\x69\xac\x69\xf4\xed\xd5\x77\xaf\xc1\xc9\xef\x7f\xfa\xf1\x35\x20\x3f\xc6\x6a\x16\x0a\x2c\x63\x1f\x2b\x45\xb4\xf2\xe7\x84\xc7\x42\x2a\xbf\x3a\xa4\x50\x1e\x27\xda\x0d\x95\x1f\xa9\xbc\xf5\x2a\x6f\x0d\x85\xd0\x4a\x4b\x9c\x7a\x09\xe5\x5e\xa4\x14\x82\x09\x66\x8a\xf4\x4f\xc8\x75\x7d\x38\x52\x2e\x60\xdd\xf2\x34\x0b\x98\xd1\xe9\x8c\x99\xa0\x7d\x93\xf3\xd3\x22\x11\x52\x8a\xc5\x49\x85\x2c\xf4\x5e\xb0\x28\x1f\xdb\x58\xe4\xfa\xb6\xde\xa7\x96\xb7\x9a\x61\x35\x87\xf3\x71\x71\x50\x05\xd6\x8a\xc1\x66\xb9\xe7\xcd\xd6\x2a\x9d\xbf\xdf\xb0\xb2\xdc\xa3\x99\xaa\xe0\x93\x97\x55\xc7\xaa\x30\x33\xcb\xb7\xcb\xc2\x6e\xd4\x09\xed\xcb\xbf\x51\xfe\xcd\xaf\x19\x91\x4b\xaf\x66\x62\x06\x90\x9b\xa7\xb0\xab\x50\x19\x86\x9d\xc6\xfc\x24\x3c\xd7\x96\xdb\xe0\x5d\x33\xe9\xdf\x80\x79\x21\x7b\xe7\x3e\x3a\x0d\xfb\xfa\x36\xba\xa9\x3d\x7a\x29\x8e\x6e\x4f\xc8\xa7\x3a\x8c\x35\x5c\xaa\x87\x53\xe2\xb8\xde\xab\x37\x8d\xad\xba\xcd\xe0\xb0\x6f\x40\xaa\x6d\x76\xe6\x94\x9f\x83\xf4\x3d\x9b\x44\x3a\x93\x8c\xdb\xe8\x01\x4e\xbf\xb1\x4f\xbf\x2e\x39\xe7\xe5\xa5\x32\xa1\x0f\x82\x06\x91\xb9\x52\x2c\x31\x63\x84\xfd\x94\x32\x81\x63\x35\x84\x8b\xf3\x56\x9a\xc4\x14\xa8\x43\x40\x13\x2a\x93\x05\x96\x04\x6d\x93\x45\x92\x60\x4d\xfe\x99\xe0\x29\xb9\x9a\x65\x49\xc8\x31\x65\x6a\x98\xcb\xbc\x4d\x8d\xa3\x88\xa4\x9a\xc4\xdf\x50\x46\xd4\x10\x36\xc4\x4f\x70\x14\x52\x8e\xe5\xf2\xdc\x0b\x29\xdf\xfc\xb0\x71\xf5\x72\xf3\x9b\xee\x19\xbb\x51\x1e\xe5\x54\x7f\x5b\x1a\x0d\xe5\xd3\x37\xfc\xb5\xc0\xb1\xd3\x6f\xd0\x56\x78\x15\x2f\xa0\xbe\xc5\x3c\x66\x44\x3a\xb2\x09\x9f\xb9\xe8\x04\x1c\x69\x76\x5b\xc6\x34\x04\x41\x00\xbd\x09\xa6\x8c\xc4\xbd\x36\x62\x73\x71\xb2\x80\x1f\xbe\x17\x9a\x4e\x96\x4e\x3b\x85\xb9\x6c\xf1\x38\x84\xde\x3f\xa4\x14\xb2\xb7\x8d\x4b\x45\x47\xee\xf4\x10\xa4\x57\xbc\x58\xdc\x41\xb8\x4c\xcd\x7c\x64\xcf\x7c\x33\x1a\x93\x4e\x65\x94\x97\xf1\xe0\x94\x4f\x87\xd0\xab\x76\xf9\xf3\x5e\x2b\xf5\xaa\xff\x72\xab\x7d\x55\x1d\x36\x39\xd5\xba\xe1\x23\x83\x5c\xc6\xf3\x30\x70\x2a\xf0\xde\xe6\xfa\x3b\x21\x7c\x6a\xef\x8c\xbf\x05\x80\x9b\x96\xfe\xac\x11\x7a\x79\x2c\x16\x5e\x9e\x2f\x42\x50\x19\xb3\x13\x25\x71\x1b\xaa\x67\x1e\xbe\xc1\x77\x1d\x60\x16\x52\xff\xf0\xe6\xed\x55\x87\xc8\x99\x64\x43\xe8\x95\xe9\x69\x0f\x3e\x83\x28\x89\xdb\x49\x0b\xec\x86\x8d\x6d\xb5\x2d\x5e\x43\xe4\xe6\x56\x3e\x73\x7a\x1f\x57\x1f\xbd\xf4\xfa\x5e\xfe\xf6\xb8\xf2\x72\x0e\x99\x1b\xdf\xb7\x2d\x90\x6d\xf7\x52\x69\xff\xff\x9a\x4c\x70\xc6\xb4\xd3\x02\xef\x1c\x4b\x20\x10\xc0\x99\xa3\x67\x54\x35\x9d\xc3\xa9\x30\x23\x5e\x2a\x45\xea\xf4\x72\xe4\x7a\xfd\x76\x52\x13\x70\x0d\xad\x22\x92\x62\x46\x3f\x10\xa7\x83\xf0\xc1\xe0\x36\xe5\xdb\x7a\x8f\xbd\x21\xb8\xd3\xab\x12\x40\x9b\x10\xbe\xa3\xf1\xfb\x7a\x52\x58\xa4\x83\xa6\xb9\xd7\xf7\xa2\x99\xa9\xac\xd7\x9a\x69\xb3\xbf\x39\xde\x5e\xa4\xb9\x6a\x1a\xe8\x86\xc6\xc4\xaa\x55\x7b\xf7\x2d\x04\x15\xc6\x34\xee\xf5\xb7\x88\x5a\xf4\x6a\x5c\x52\x39\xc6\xa8\xb1\xd7\xcf\x3d\x7a\xf9\xaa\xab\xd3\x2d\x99\xb5\xbc\xbb\x7d\x5f\x63\x59\xbc\xa6\xea\xf5\xe1\xa3\x00\x7a\xbd\x4e\x2f\xb8\x7f\xbe\x39\x66\xce\xf6\xea\x57\x4f\x63\x95\x35\x05\xf7\xfa\x47\x58\xa8\xf9\x3d\xbd\x61\xd6\x9f\x6b\xe5\x42\xa3\xd9\x98\xab\x0d\x6b\x6d\xa7\xd1\xfb\x03\xc6\x21\x91\x36\x0f\x13\xf6\x0f\xb5\x4a\x4e\x5d\x94\xfb\xc3\xec\xde\x08\x71\x58\x74\xe8\x06\xa8\x49\x51\x7d\xd9\xbb\xae\xb9\xfe\x17\x00\x00\xff\xff\x01\xc1\x4d\x5e\x87\x37\x00\x00"

func templatesViewsWidgetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsWidgetHtml,
		"templates/views/widget.html",
	)
}

func templatesViewsWidgetHtml() (*asset, error) {
	bytes, err := templatesViewsWidgetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/widget.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesWidgetMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xcf\x6f\x1b\x45\x18\x7d\x76\xec\x42\x0d\xb4\x50\xa1\x82\x10\x48\x53\xa4\x14\x2a\xd8\xb0\x76\x08\x82\x4d\x9c\xd0\xa4\xad\x8a\x88\xd5\x28\x98\x72\xe0\x80\xa6\xf6\xd4\x59\xb1\xde\x35\xb3\xbb\x2d\x95\x7a\x70\x1c\x04\x8d\x5a\x89\x5f\x42\x48\x1c\x8a\x2a\x40\xe2\xc0\xc1\x49\xeb\xd6\x14\x79\x03\xff\xc1\x37\x37\xc4\x81\x03\x57\xae\x9c\x38\xa1\xd9\x5d\x3b\xd0\x24\xcc\x65\xbf\xf9\xe6\x7b\x6f\xde\x7b\xb3\xbf\x1f\xca\x7d\x01\x00\x8f\x00\x78\x12\xc0\xb7\x00\x1e\x03\xf0\x7c\x06\xf1\xba\x92\x01\xf6\x03\x58\xcf\x24\x33\x9f\x67\x80\x7d\x00\xbe\xcb\x00\x8f\x02\xf8\x21\x03\x1c\x06\xf0\x4b\x3a\xf7\x6b\x3a\xf7\x47\x06\xc8\x03\xf8\x2b\x03\xdc\x07\xe0\xef\x14\x97\xcd\x26\xfb\xfd\x59\x20\xa7\xef\xcd\x26\x73\x87\xb3\xc0\xb8\xd6\x90\x05\x8e\x01\x98\x4f\xcf\x9d\x2c\xb0\x92\x01\xde\xcb\x02\x0f\x03\xf8\x6d\x0c\x98\x02\xf0\xe7\x18\xf0\x38\x80\x23\x39\x60\x06\x80\x95\x03\x4e\x03\xb8\x98\x4b\xf4\xff\x9c\x03\x9e\xd1\x7a\x72\xc0\x01\x6d\x24\x0f\x1c\x02\x70\x30\x0f\x14\x00\x3c\x9d\x07\x9e\x00\x60\xa4\xfd\xd3\xf9\x84\xff\xed\x3c\xb0\xa4\xef\xcd\x03\xef\x00\x18\xa4\xfd\xa7\xf6\x01\x3a\x92\x42\x9a\x95\x5e\x63\x00\x1e\x40\xe2\x4b\x6b\xbd\x3f\xed\x67\x01\x3c\x98\xd6\x1a\x7b\x00\xdb\xeb\xa1\x44\x4a\xbc\x74\x5e\x07\x91\xe4\x81\xe3\x41\x20\xed\x73\x61\x20\x30\x2f\x3d\x5e\xaf\x71\x3f\x60\x4d\xe1\xfb\xbc\x21\xb0\xe0\xb9\xe7\xed\x46\xf2\x91\x4d\x26\x85\x2f\x02\x56\x17\x17\xec\x9a\xf8\x77\x33\xe0\x72\xd4\x3e\x11\x7f\xd8\xb8\x3f\xac\xf8\x90\xdf\xc7\xa2\xb8\x20\x1c\x54\x52\xf2\x33\xad\xc0\xf6\x5c\x2c\x27\x78\xbc\x21\xdc\x3a\xce\x72\x27\x14\x78\xcb\x76\x1c\x76\x4e\xdc\x43\x3d\xc1\x8e\x4b\xc1\x2e\x79\x21\xf3\x43\x29\xe6\x46\x53\x17\xed\x96\x60\xb5\x58\xe9\x9e\x93\x2d\x81\x65\xd1\xf2\x64\x60\x54\xfc\x86\x5d\x37\xe6\xc3\x86\x6f\x54\x3d\x4b\x03\x5e\x7d\xd7\x5e\xe1\x4d\x6f\x42\x86\x85\xa5\x33\x55\x63\x41\x0a\xae\x85\x19\x27\x78\x20\x2c\x56\x32\x8b\xaf\x18\xe6\xa4\x51\x7c\x89\x95\x26\xad\xa9\xa9\xe7\xcc\x49\xd3\x2c\x2c\x72\x3f\x30\xaa\x92\xbb\xbe\xc3\x03\x4f\x5a\xec\xf5\x98\x83\x55\x42\xc9\x9b\x5e\xdd\x63\x33\xff\x21\x9e\x2d\x2c\x72\xb7\x11\xf2\x86\x30\xaa\x82\x37\x2d\x36\xda\x5b\x6c\x39\xf4\x7d\x9b\xbb\x85\xca\x6b\x95\x93\xc6\x59\x21\x7d\xdb\x73\x2d\x56\x9c\x30\x0b\x0b\x9e\x1b\x08\x37\x30\xaa\x97\x5a\xc2\x62\x81\x78\x3f\x78\xa1\xe5\x70\xdb\x9d\x66\xb5\x15\x2e\x7d\x11\x94\xdf\xac\x9e\x32\x5e\xde\x9e\xd3\x7a\xce\x0b\x69\x9c\x74\x6b\x5e\xdd\x76\x1b\x16\x2b\x2c\x39\xa1\xe4\x8e\x71\xca\x93\x4d\xdf\x62\x6e\x2b\xde\xfa\xe5\xc9\x69\x96\x94\x65\x77\xbc\x68\x96\xcb\x45\x76\xf4\x28\xd3\xa5\x79\xa4\x5c\x2c\xb2\x39\x66\x32\x2b\xde\xcf\x96\x4b\xc3\xa3\x99\xf2\x8b\xba\x7c\x36\x1e\x9b\x29\x9a\xec\xf2\xe5\x04\x32\x5b\x2e\x99\xc7\xd8\x1c\x2b\x32\x8b\x95\xa6\x41\x9f\xa8\x8e\xea\xa8\x36\xf5\x69\x43\xad\xa9\x0e\xe8\x7b\xea\xab\x36\x45\x74\x97\x22\xda\xa4\x9e\x5a\xa7\xae\xea\x50\x8f\x7e\x52\xd7\x68\x40\x11\xf5\x98\x5a\xa5\x88\x22\xda\x50\xeb\xd4\xa3\x01\xf5\xa9\x07\xfa\x8a\x22\x1a\xa8\x0f\xa8\x4f\x37\xd5\x9a\x6a\x53\x57\x7d\x48\x7d\xf5\x31\xe8\x6b\x8a\xe8\x96\xea\xc4\x54\x6d\xba\x4d\xb7\x86\x18\x4d\xb3\xa1\x6f\x52\xab\xd4\x65\x6a\x4d\xad\xc6\x3a\x22\xfa\x51\x57\xb4\x49\xdd\xff\x03\xd3\x56\xdc\xea\xd1\x1d\xea\xd2\x4d\xd5\x56\x6b\x74\x87\xee\x52\x7f\x0f\xa2\x6f\x76\x34\x23\xfd\xd7\xdf\xeb\x5e\x5d\xdd\x13\xdf\x4e\xe2\xa0\x81\xba\x06\xba\xb1\x33\x80\xeb\xb4\xb5\x6d\x79\xa7\xb4\xbe\xea\x68\xe0\x75\xd5\xa1\x2d\x1d\x0f\x6d\x0e\x5b\x5f\xd2\x80\xba\xea\xa3\x6d\xa6\xdd\xb4\x6a\x79\xda\xbd\xea\xec\xe6\xfc\x76\x0c\x8e\x26\x18\x7d\x16\x3b\x48\xf3\xd2\x62\xaf\xce\x81\x3e\x1d\x61\x47\x91\x5f\x89\x11\x5d\x16\xbf\xf2\x2e\xef\xb6\x6b\x0c\x7b\xf1\xdf\x18\xbd\x63\x62\xe9\x9f\x00\x00\x00\xff\xff\x75\x38\x05\x0f\x2e\x06\x00\x00"

func localesRuLc_messagesWidgetMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesWidgetMo,
		"locales/ru/LC_MESSAGES/widget.mo",
	)
}

func localesRuLc_messagesWidgetMo() (*asset, error) {
	bytes, err := localesRuLc_messagesWidgetMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/widget.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/widget.html":      templatesViewsWidgetHtml,
	"locales/ru/LC_MESSAGES/widget.mo": localesRuLc_messagesWidgetMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"widget.mo": &bintree{localesRuLc_messagesWidgetMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"widget.html": &bintree{templatesViewsWidgetHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
