// Code generated by go-bindata.
// sources:
// templates/views/widget.html
// locales/ru/LC_MESSAGES/widget.mo
// DO NOT EDIT!

package esp

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"

	"github.com/elazarl/go-bindata-assetfs"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsWidgetHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6b\x73\xdb\xb6\xd2\xfe\x9e\x5f\xb1\x45\x9d\x91\xd4\x9a\x92\x6c\xb7\x79\xdf\xa3\x48\xce\xa4\xcd\xe9\x34\x67\xd2\x24\xd3\xb8\xed\x87\x34\xc7\x03\x11\x90\x04\x07\x04\x58\x00\x94\xac\x78\xf4\xdf\xcf\x80\xe0\x55\x22\x25\xca\x96\x73\x99\x89\x66\xe2\x90\xe0\x62\x17\xd8\xcb\xb3\x8b\x15\x75\x73\x03\x84\x4e\x98\xa0\x80\x7c\x29\x0c\x15\x06\xc1\x6a\xf5\x60\x48\xd8\x1c\x7c\x8e\xb5\x1e\xa1\x10\x4f\xa9\x67\x98\xe1\x14\x9d\x3f\x00\x00\x28\x3e\x8c\xc7\x2f\x39\x9d\x98\xe4\x61\x4c\x30\x3b\x3b\xbf\xb9\x01\x76\xf2\xff\x02\xd0\x33\x3a\x67\x3e\x85\x87\x1a\xc1\x11\x08\xc6\xb3\x7f\x5d\x81\x03\x0a\xab\xd5\xb0\x37\x3b\x4b\x18\xf7\x08\x9b\x9f\x3f\xa8\x11\xa2\xd8\x74\x56\x92\x52\xa0\x98\x48\x15\x78\x53\x25\xa3\x10\xc2\x88\x73\x6f\x9d\x76\x9d\x9e\x89\x30\x32\x6e\xc2\x1a\x55\x4c\xc9\xf1\x98\xf2\x94\x76\x6c\x44\x2d\xa5\xfd\xd8\x9d\x4e\xa0\xfb\x13\x13\xa4\xfb\xc6\x60\x13\xe9\xee\x73\xed\x2e\x5e\x09\x6e\x55\xbb\x5a\x55\x4e\x1c\x8e\x23\x63\xa4\x00\xb3\x0c\xe9\x08\xb9\x1b\x54\x90\x0a\x56\x32\xf3\xa5\xbb\x58\x60\x25\x98\x98\xc6\xd7\x3a\x40\x95\x1c\xd3\x0f\xc1\x06\x7b\x46\x4e\xa7\x9c\x8e\x50\x20\x09\xe6\x28\x19\xc3\x6a\x4a\xcd\x08\x7d\xeb\x06\x77\x33\x89\xe9\x9c\xf5\x47\x28\xb3\xe9\xcf\x52\x4c\x98\x0a\x40\x51\x6d\xb0\x32\x40\x62\x1b\x23\xe8\xc2\x6a\xd5\x98\xe9\x58\x92\x65\x81\xe7\x5f\x8c\x73\x18\xd3\x35\x9e\x5d\x78\xaa\x28\x2c\x65\x04\x3a\x52\xf4\xc9\x9e\x22\x7c\xcc\xf9\x18\xfb\xef\x47\x08\xfb\x86\x49\xd1\x6e\x25\xdc\x5b\x9d\xc7\x35\xd6\x8c\x0d\xc3\x32\xbf\xc2\x1a\x26\xd8\x0b\xe5\x82\x2a\x4f\x4e\x26\x08\xd6\x55\xf1\xbb\x63\x98\x2c\xec\x7c\xd8\x63\xd5\x7c\x87\x3d\x67\xe0\x5a\x1f\xa2\x82\x1c\xc6\x51\x08\x16\x53\xaa\x3e\x37\x3f\xa1\x87\xf5\x92\x05\x0b\x29\xf8\x96\xfd\xf4\xfe\x3c\x85\xee\xeb\x27\x54\x61\x4d\xd5\xa6\x93\xfc\xc5\x42\x7a\x07\x0f\x19\xf6\x62\x40\x5a\x83\x33\x07\x96\x15\xb7\xc9\x65\x8a\xa6\x45\xdc\xf3\x39\xc5\x6a\xc2\xae\xed\x32\x36\x9f\x2a\xb9\xa8\x80\x78\x5f\x72\x2f\x20\xde\xc9\x29\xd8\x2b\x1d\xa4\x57\xd7\xda\x3b\x39\xad\xc1\xe3\xeb\xcb\x10\x0b\xca\xb7\x20\xf0\xf5\x65\x31\xa5\x94\xa8\x66\xa7\x1b\xd9\x03\x1b\xa3\xd8\x38\x32\x54\x3b\x35\x0e\x7b\xb3\xd3\x8a\x99\x51\x06\xda\x02\xcf\x41\xe0\xf9\x18\x2b\x97\x0b\x20\x5e\xcf\xa5\x91\x92\x8f\xe5\x75\x8d\x4d\x87\x9c\x9d\x0f\x71\x61\xdf\x1c\x87\x9a\x7a\x9c\x89\xf7\xe8\xbc\x68\x6c\x6b\x6b\x7f\x46\xe7\x4a\x0a\xcf\xe6\x05\x6b\xd3\x61\x0f\x9f\x0f\x7b\xbc\xc2\xb8\xc3\x5e\xc4\x2b\x46\xb7\x99\x65\x8b\xa1\x37\x15\x99\x26\xee\x0a\x19\x61\x96\x42\xe9\xb5\xf1\x82\xc8\x50\x02\x13\x29\x8c\x77\x72\x06\x81\x37\xf6\xce\xfa\xdb\x93\x1a\xc7\xda\x5c\x46\x21\xc1\x86\x5e\x12\xca\x0d\xae\x83\xa8\x64\x8e\xc2\x0b\x68\x3b\xcb\xbd\xc0\xda\x80\x74\x09\xd0\xb0\xc0\x56\x00\xd0\x7e\xa8\x3b\xd6\x80\xc5\x32\xa0\x1d\x2a\x26\x0c\xa0\xa1\xf6\x15\x0b\x8d\x03\xb9\xbf\x11\x0e\x43\xce\x7c\x6c\x63\xb1\x77\x85\xe7\xd8\x3d\xfd\x1b\x9d\x13\xe9\x47\x01\x15\xa6\xbb\x50\xcc\xd0\xb6\x5d\xda\x85\x7c\x63\x14\x13\xd3\x76\x0b\x41\xbb\xb8\xe6\xee\x2f\x52\x05\xd8\x00\x3a\xed\xf7\x1f\x79\xfd\x13\xaf\x7f\x7a\x71\xf2\xe3\xa0\xff\xc3\xa0\xff\xa3\xd7\xff\xbf\x41\xbf\x8f\x3a\x80\x5a\x9d\xce\xb0\xe7\xf8\x9f\xa3\x4e\xd5\xa6\x3b\x75\xdb\xb6\xb8\xcd\x75\x6d\x86\x2f\x6a\x05\x6a\xd5\xf2\xd9\x6b\x64\xeb\xf6\xab\xd3\xd6\xb0\x17\x26\x85\x5c\x69\xd4\xe0\x31\xa7\x99\x4f\xc6\x37\xf1\x5f\x4f\x1b\xc5\x42\x4a\x62\x48\x76\xe3\xc4\x78\x8a\xea\x50\x0a\xcd\xe6\x14\x84\x5c\x28\x1c\x22\xd0\x66\x69\x91\x75\xc1\x88\x99\x0d\x4e\xfa\xfd\x87\x75\xa1\x6c\x66\x14\x93\xba\x67\x6a\x0b\xa6\x9b\x59\xba\xbe\x80\x78\x16\xe7\x4e\x51\x0e\x47\x4f\x53\x1c\x4a\x61\xc8\xcc\xb6\xb2\xca\x67\xfe\x89\x79\xb4\x73\xd6\xb0\x57\xb7\x34\x3b\x67\xcb\x86\x6c\x96\xac\x5f\x48\xec\x82\x62\x4a\xe1\xc8\x96\xdc\xc7\x70\x34\xb7\x8b\x81\xc1\x08\xba\x2e\x77\xea\xcb\x1c\x60\xb7\xf9\xf2\x56\xcd\x39\x02\x62\xb7\x7c\x94\x95\xf6\xa6\x66\xc9\xc5\x09\x5b\x09\x20\x03\x23\xfa\x4f\xc2\x17\xb1\x20\xe4\xd4\x7a\x7c\x1c\x0c\x5d\x57\x06\xa0\x6d\x0b\x2f\x89\x0c\x15\x4d\xfd\x28\xc4\x84\x30\x31\x1d\xf4\xd1\xf9\xd0\x97\x24\x73\xcd\x2b\x2d\x05\x3a\x2f\x05\x60\x4d\xfc\x6d\x84\xdf\x7f\xde\xbc\x7a\xd9\xd5\x71\xf4\xb1\xc9\xd2\xdd\x86\x58\x69\xda\x4e\x90\x20\xd1\xfe\x6a\xd5\x39\x06\x11\x71\x7e\x0c\xa7\x85\x70\x1b\xf6\xec\x3a\xce\x87\xbd\x50\xd1\x46\x9a\xd9\x85\x3f\x6b\xe4\x99\xf4\x46\xbc\xeb\x6b\xd2\x4c\x9b\x5b\x4d\x5c\xef\xd0\xbb\x25\x0c\x7b\x35\x6e\x3d\xec\xc5\x08\x71\xcb\x72\x28\xc9\x6c\x42\x12\xe7\xeb\x9f\x79\x01\xf4\xd2\xae\xf3\x6b\xd1\xb3\x4f\xd1\xf3\x59\x24\x19\x68\x06\x97\x85\x0c\xf1\xfc\x59\x93\xa4\x02\x25\x3c\xec\x86\x4a\x1a\xe9\x4b\x7e\x19\xe0\x2b\xa9\x00\x9d\x59\x18\x2c\xb1\x7d\x89\x83\x62\xde\x69\x18\xd5\x45\x0e\x17\xcb\xb0\x51\xbe\xdb\x98\xf8\x54\x29\xbc\xdc\x63\x66\xaa\x78\xc2\x74\xc8\xf1\x72\x00\x42\x0a\x6a\xdd\x63\x6b\x96\x3d\x7c\xce\x2c\xe4\xcb\x63\x38\xb2\x48\x11\xe7\xca\x0c\x32\xea\xb7\xd0\x34\x3d\x4a\x42\xbb\xcf\x9f\x75\x5d\x91\xd6\x28\x51\xee\xb6\x79\x81\xb5\xb5\xf9\x1a\xf3\xa6\x76\x2f\x70\xb1\x76\xdf\x67\x89\xa5\xc9\xb1\xed\xf7\x9d\xdd\x24\x27\x1d\x85\x4a\x86\x54\x19\x46\xb5\xb5\x8a\x93\xf6\x3a\x1f\x6b\x96\xd9\xd8\xa4\xc4\xa8\xc1\xa4\xdd\xb0\x92\xc0\xc7\xee\x5d\x40\x03\xec\xd8\xa4\xdf\xe1\x5b\x15\x02\xf2\x48\x4c\xf4\xb3\x44\x70\xd4\x28\x18\xb7\x32\x4b\x4a\xd9\xfd\x39\x6d\xaf\x06\xd6\x28\x9b\xab\x67\x57\xf9\xbb\xfe\xc9\xc3\x3b\x3c\xce\xbc\x60\x19\x3b\xd3\x7e\x2e\x91\x2f\x60\x6f\xdb\xb8\x48\x49\x65\x57\x05\xec\xdd\x18\xc6\x36\xca\x39\x42\xe9\xe1\x1f\x82\x99\xdb\x4a\x6b\x6e\x43\x68\x5c\x43\x16\x78\x37\xb3\x64\x65\x05\x78\x7b\xf9\xb7\xad\x61\x3f\x45\xfd\x9a\xcb\x4c\x2b\x59\x4d\x8d\x61\x62\x7a\xff\xc5\x2c\xa4\xc5\x21\xb9\x7b\x59\xfb\x73\x72\x66\xfb\x5a\xd7\x36\xaf\x6b\x27\x52\x05\xa0\xa4\xad\x90\xec\x25\x02\xd7\xaa\x1e\xa1\x27\xc9\x45\xea\x09\x08\x02\x6a\x66\x92\x8c\x50\x28\xb5\x41\xc0\xc8\x08\xe5\xcf\x4a\x4d\xff\x39\xe6\x8c\x60\x23\x55\x6d\x89\xfb\xb1\x8a\x69\x38\x50\x41\xbd\xd6\xbd\x39\x29\x74\x6f\x5e\x85\x56\x4d\xb7\x2a\x65\x1b\xb5\x6f\x60\x27\x3e\xee\xcc\x6b\xcd\x5b\x39\xec\x18\x8e\x64\xbc\xa1\xb8\x38\x2d\xa2\x40\x3d\xf3\x86\xf5\xa9\xe3\x1b\x67\xa5\xc3\xd4\x6e\x79\xf5\x9a\xb0\xb6\xb5\x25\xa0\xb1\x94\xbc\x51\xdf\x66\x18\x7f\x61\x9b\x34\x62\xfc\x19\xf5\xdf\xdb\xc0\xcf\xbb\x35\x9e\x5e\x30\xe3\xcf\x10\x08\x1c\xb8\x2f\x5e\xd6\xf6\xe0\x82\xa0\x6a\x3c\x5b\x5a\xd2\x76\x4d\x09\x62\x8b\x77\x00\x19\x65\x0d\xbf\x5a\x41\x2c\x96\x92\x0c\x80\xa1\xb7\x73\xcf\x71\x6f\x86\x4d\x40\x2a\x68\x6f\x6c\x9e\x09\x83\x3a\xd5\xe3\x8f\x7e\x40\xb5\x3d\xd7\x5a\xb5\x88\x28\x18\x53\x85\x4a\x5f\x89\x5b\x34\x51\x56\xc7\xf5\x7a\x89\xfb\x41\xa5\x47\x7f\x26\x1d\xa2\x7a\x9d\x85\xd8\x18\xaa\xc4\x08\xfd\xf7\xad\xf7\xfd\xbb\x27\x6f\xfb\xde\xbf\xde\x7d\x77\x84\xee\xa8\x90\xa8\x4e\x23\xd1\x97\xa5\x92\x5b\x69\x64\x63\xd3\x13\x2e\xb1\xdd\xf5\x17\xb2\xe9\xdc\x0f\xda\x7f\x77\xdd\x45\xe7\xc9\x3e\x0a\xc0\x82\x54\x98\xde\x35\x52\xad\x57\x4c\x29\xb4\x39\x15\xeb\xf1\x79\xd2\xef\x37\xf3\x0b\x43\xaf\x0d\x56\x14\x57\xe9\x05\x14\xd5\xec\x83\x4d\x62\x97\x29\x19\x02\x25\x17\x7a\x84\x7e\xb8\x05\xa6\x9c\x57\x28\x71\xd8\x4b\x39\x37\xd3\xc8\xbe\x56\xb7\xdc\x3f\x86\xcd\x1b\x18\xf4\x53\x36\x8d\x61\xd7\x31\xa2\xf6\xe8\x30\xec\x59\xad\x1d\xaa\x28\x97\x06\x5f\x52\x61\x25\x91\x2f\xaa\x2e\x7f\x75\xf1\xf4\x6b\x51\x7e\xd0\x66\xf3\xfe\x4d\xe5\xed\x15\xe0\x7e\x4d\x65\xf7\x1e\x5a\xf3\x92\x37\xae\xff\x52\x07\x56\x91\x10\xae\x47\x90\xf1\x4b\x86\x1c\xc3\x1c\xab\xf2\xe7\x14\x93\x65\xfe\x34\x0e\x8a\xbb\x44\xfb\x7e\xbb\x7d\xad\xe4\x54\x51\xbd\xd7\x7e\x77\xc3\x6c\xf1\x5d\xc8\x4c\x40\x62\xce\x00\xab\x29\x13\xde\x58\x1a\x23\x83\x41\xdd\xdb\x14\x4d\x58\x7a\x63\xac\xa0\x78\x93\x79\x50\xa5\x45\x4a\x94\x4c\x4c\x64\x7c\x1a\x9c\xd3\xdc\x26\x25\x0a\xf7\x52\x98\x33\x89\x45\x77\x77\x8c\x4c\x49\xc6\x58\x21\xc0\x8a\x61\x2f\xce\x08\x42\x2e\x62\xec\x8f\x45\x2e\x14\x33\x86\x8a\x38\x27\xe4\x24\x01\x13\x23\xd4\x2f\x8d\xe0\xeb\x7c\x92\x91\x06\xf3\x78\x4a\xc9\xed\xd3\xc7\xa9\x5c\x58\xad\xb6\x1d\x07\x37\xd4\xa6\x43\x2c\x52\x8e\x9c\x09\xea\xcd\xa8\x85\x9e\xc1\x69\x3f\xac\x43\x9c\xba\x4f\xe6\x33\x0f\x09\x8c\x97\x86\x6a\x90\x13\x78\x48\xd6\xdf\xc5\x28\xa9\xa0\xb4\xb5\x3d\x3a\x66\x76\xd9\x4d\xfb\x9e\x1b\x48\x74\x4b\xb2\x8f\x17\x74\x3f\xdb\x73\x91\x8e\x82\x3d\x41\x26\x56\xa6\x9f\xcc\xbd\x03\x4a\xec\x6e\xb3\x6d\x3c\xc9\x8e\x7c\xa5\x98\x9a\xe0\x9a\xba\xcb\x35\x5e\x8a\xa5\xd5\x4c\x2a\xf6\x41\x0a\xeb\x08\xf1\x7d\xfc\x7a\x9e\xc7\xe9\xc4\x00\x51\x32\xfc\x20\x05\x45\xa5\x4e\xcd\x66\x3f\x46\x1a\xbc\xd9\xc0\x89\x07\x85\x4c\x9a\x32\x35\xfd\xcd\xd2\x7b\xcc\x86\x06\x90\xbf\xfc\xbc\xad\xb5\xe2\xde\x69\x9e\x48\x35\x42\x9c\xce\x29\x47\x79\x16\x8e\xeb\x44\x2f\x79\xe9\xd9\xd5\x21\x67\x69\x19\x72\x56\x59\x85\x54\x69\xd4\x7d\x57\xc8\x02\x2a\xa3\xe4\x75\xd8\x2d\xd6\xac\x78\xa1\xb1\x6e\x8f\xc9\x8a\x1e\xa5\x2b\x7a\xd4\x68\x45\xb0\x47\x81\x6c\xed\x61\xd2\x85\xbb\x6a\x39\xbb\xcd\x4b\x64\x17\xfd\x6e\x3c\x86\x36\x45\xff\x89\x98\xa2\x64\x84\xd2\xab\x6d\xfa\xaf\x0f\xd9\x9a\x47\x55\x05\x29\xd4\x16\xc0\xb7\x28\x55\xbf\x98\xa2\xf4\x27\x25\x31\xf1\xb1\x36\x10\x50\xad\xf1\x94\x7e\x2d\x51\xf7\xee\x1b\x37\x83\xaf\x5d\xa8\x35\x4e\x2d\xb1\x89\x5d\x85\x47\x5f\x22\x82\x41\x11\xc5\x5e\x38\xf6\xd6\xc9\x92\xa2\x23\x0d\x93\x2c\xd0\xbf\xdb\x95\xd6\x3f\x43\x8c\x4b\xb4\xe6\x10\x2e\xb9\x09\x39\xf6\xe9\x4c\x72\x42\xd5\x08\x61\x4e\x55\x8e\x79\xf7\x8e\x70\xeb\x5a\xb8\x9d\x2f\x64\x98\x70\x5f\xde\xf0\x5b\x11\x74\x3e\xb9\xbd\xef\xda\xc7\xca\xd4\x65\x3d\x22\xbd\x39\x6f\xd2\x9e\xba\xbb\x81\xb9\xb8\xd4\x92\x33\x52\x09\x71\x55\x13\x9a\x39\x43\x9d\x62\x03\xe2\xc9\xc9\x44\x53\xe3\x9d\xed\xd2\x6a\xe9\x17\x36\x3a\x1a\x07\xcc\x6c\xfc\xc2\x46\x47\xbe\x6f\xcf\x7e\x85\xd3\x35\x15\x24\xcd\x45\xdb\x7e\xde\x73\x3b\xed\x1d\xae\x23\x95\xfe\xc4\x6f\x46\x31\xc9\x1a\xca\x37\x37\xa0\x0d\x36\xcc\xff\xf5\xe2\xb7\x17\xd0\x76\xd7\x7f\xfc\xfe\x02\x50\x8f\x60\x3d\x1b\x4b\xac\x48\x0f\x6b\x4d\x8d\xee\xcd\xa9\x20\x52\xe9\x5e\xf6\x65\x9f\xee\x0a\x6a\xbc\xb1\xee\xf9\xda\x8d\x5e\xb8\xd1\xb1\x94\x46\x1b\x85\xc3\x6e\xc0\x44\xd7\xb7\x27\xe5\xb8\xae\xee\x1c\x50\x6a\xfe\x25\x63\xba\x80\x7c\xe4\x7e\x16\x30\x63\xd3\x19\xb7\x15\xc4\x95\x93\x67\x64\x20\x95\x92\x8b\x83\x6e\x32\x39\x38\x24\x22\xd2\xdb\x2a\x11\xce\xde\xf1\x39\xb8\x00\xfc\x76\x5a\xc1\xcd\xbf\xcd\xbe\x11\x8c\xcf\x47\x10\xe7\x89\xe3\x8d\xe1\x0c\x4e\x6e\x4a\x7e\xe6\xce\xeb\x70\xd2\xef\x3f\x7c\x9c\x3d\x58\x25\x8e\x16\x4b\xae\xf3\xb1\x2b\x7d\x40\x0f\xeb\x5d\xe9\xde\xd5\x3f\x11\x55\xcb\x6e\xc1\xc9\xac\x4a\xae\xee\xc3\xb3\xc6\xda\x0a\xac\x75\xe7\x7b\x91\x99\xfb\xee\x9a\xec\x82\x53\x7f\x04\xe1\xc9\xde\x6b\x23\xe9\x30\xe2\x8b\x81\x74\x55\xb8\xed\x86\xd8\x7f\x7f\x40\x39\xd9\x6b\x0d\x56\x4a\x76\x73\x48\x3d\xe6\xd1\x7a\xb5\x16\xac\x9b\x02\x9a\xfd\x8e\x20\x0b\xb3\xa3\x76\xfa\x93\x82\x4e\x37\xee\xa7\xb6\x27\x91\x88\x8b\x6c\x68\x77\xd6\xe2\xf4\x59\x2a\xd9\x7d\x4d\xa3\xed\x21\x15\x46\x6b\x44\xf6\x13\x62\x85\x39\xa7\xfc\x8f\x90\x4b\x4c\xf4\x00\x4e\x8e\x2b\x69\x82\x97\x38\xa0\x03\x40\x13\xa6\x82\x05\x56\x14\x6d\x92\xf9\x8a\x62\x43\x9f\x07\x78\x4a\x2f\x66\x51\x30\x16\x98\x71\x3d\x70\x7b\xde\xa4\xc6\xbe\x4f\x43\x43\xc9\x2f\x8c\x53\x3d\x80\xd2\xf6\x03\xec\x8f\x99\xc0\x6a\x79\xdc\x1d\x33\x51\xfe\xb1\xe6\xea\x71\xb9\x71\x33\xe3\x57\xba\xcb\x04\x33\xbf\xa6\x4e\xc3\xc4\xf4\x95\x78\x21\x31\x69\x77\xd6\x68\x33\x7d\x25\x29\xfb\x57\x2c\x08\xa7\xaa\xad\xd6\xd5\x67\x3f\x6c\x02\x6d\x65\xa3\x2d\xe2\x06\x46\xa3\x11\xb4\x26\x98\x71\x4a\x5a\x55\xc4\xf6\x23\xe8\x02\x5e\xbf\x94\x86\x4d\x96\xed\x6a\x0a\xfb\x89\x4f\xb6\x03\x68\xfd\x5b\x29\xa9\x5a\x9b\x7a\xc9\xe8\xe8\xb5\x19\x80\xea\x26\xa5\xd8\x16\xc2\x65\x68\xf9\xd1\x1d\xfc\x66\x8c\xd0\x5a\x63\xa4\x1f\x8b\xe0\x4c\x4c\x07\xd0\xca\xa2\xfc\xac\x55\x49\xbd\xea\x3c\xde\x18\x5f\x65\x5f\xda\xb6\xb3\x75\xc3\x37\x56\x73\x91\x70\x69\xe0\x50\xca\x7b\xe3\xec\x77\x40\xf5\xe9\x9d\x1c\x3f\x86\x02\xcb\x9e\xfe\x60\x2d\xf5\x0a\x22\x17\x5d\x77\xac\x86\x51\xe6\xcc\x6d\x3f\x20\x55\x5a\x3d\xea\xe2\x2b\x7c\x5d\xa3\xcc\x64\xd7\xaf\x5f\xbd\xb9\xa8\xd9\x72\xa4\xf8\x00\x5a\xe9\x29\xbe\x05\xdf\x83\x1f\x90\x6a\xd2\x44\x77\x83\xb5\xb0\xda\xdc\xde\xda\x96\xd7\x43\xf9\xa8\xdd\xfa\x36\x6b\x17\xb4\x3a\x5d\x57\x6f\x67\x28\xd7\xa6\x73\x8b\x7d\x9b\x1b\x8a\xc7\xbb\xa1\x8a\xff\x7f\x46\x27\x38\xe2\xa6\x5d\xa1\xde\x39\x56\x40\x61\x04\x47\x6d\x33\x63\x7a\x1d\x1c\x0e\xa5\x33\xda\x0d\x95\x0c\xdb\x2d\xa7\xb9\x56\xa7\x9a\xd4\x26\x5c\x4b\xab\xa9\x62\x98\xb3\x0f\xb4\x5d\x43\x78\x6b\xe5\xae\xef\xaf\xe2\xb5\xd0\xd2\xd6\xdb\xad\xbc\x06\x8c\x8b\xc2\xb7\x8c\xbc\x2b\x15\x86\x49\x49\x68\xc7\x5b\x9d\xae\x3f\xc3\x62\x4a\x73\xeb\x54\xf9\xe0\x1c\x6f\x2e\xd4\x7e\x0a\x56\xa8\x57\x8f\xcd\x57\xab\xea\xc7\xef\x61\x94\xe9\x99\x91\x56\x67\x83\xa8\xc2\xb6\x16\x96\xd2\x39\xd6\x94\xad\x8e\x43\xf5\xf4\xb5\xb1\x5a\x68\xb2\x6b\x79\xfb\xfe\x5d\x41\x64\xf2\xca\x57\xab\x03\xdf\x8c\xa0\xd5\xaa\x45\xc2\xdd\xfc\xe6\x98\xb7\x37\x57\xbf\xba\x1f\xcf\x2c\x9a\xb8\xd5\xd9\xc3\x4d\xed\xdf\xc3\x7b\x67\xf1\xbe\x70\x66\x58\x1b\xb6\x3e\x1b\xe7\xb6\xaa\x26\xcb\xee\xac\xd1\x24\xdd\xba\x5c\xd1\xba\xb9\xc9\x25\xd5\x51\xee\xce\xb5\x3b\xd3\x44\xb3\x14\x51\xaf\xa0\x75\x8a\xec\x27\xa2\xf9\xc1\xeb\x7f\x01\x00\x00\xff\xff\xa7\x6b\x23\xf0\xbe\x47\x00\x00"

func templatesViewsWidgetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsWidgetHtml,
		"templates/views/widget.html",
	)
}

func templatesViewsWidgetHtml() (*asset, error) {
	bytes, err := templatesViewsWidgetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/widget.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesWidgetMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x5b\x6c\x54\x55\x17\xfe\x3a\x67\x3a\xd3\x7f\x7e\x2f\x88\x88\x78\x65\xfb\x50\x84\x90\xa9\x33\x55\x89\x19\x3a\x2d\x85\x42\x24\x52\x24\x65\xc0\x07\x1f\xcc\xa1\xb3\x19\x4e\x98\x39\x67\x72\x2e\x68\x13\x62\xda\xa9\x51\x08\x24\x5c\x12\xd4\x78\x81\x00\x26\x9a\x68\xcc\xf4\x32\x30\x40\x7b\x1a\x7d\xc2\xc4\x87\xb5\x1f\x34\x1a\x12\x1e\x7c\x30\xbe\xfb\x60\xe2\x93\xd9\x67\xef\x99\x22\x6d\x13\x27\x99\xac\xbd\xd7\x5e\x97\x6f\x7d\xeb\x3b\x77\x57\xc7\x2f\x00\x00\x03\xf0\xb4\xfc\x77\x00\x9b\xa5\x8d\x21\xfa\xdd\x8e\x01\x0f\x01\xf8\x21\x06\x74\x02\xf8\x25\x06\xfc\x0f\xc0\xdd\x18\xf0\x08\x80\x3f\x62\x40\x17\x80\xbf\x63\x40\x02\x80\x61\x00\x6b\x00\xa4\x0c\x60\x2d\x80\xf5\x86\x8a\xdf\x62\xa8\xf8\x6d\x06\x20\x4b\x8f\x18\xc0\xa3\x00\x0e\x18\xc0\x3a\x00\x96\xa1\xea\xd7\x0c\x20\x09\xe0\x84\x01\xc4\x01\x9c\xd5\xfe\x0b\x86\xaa\xff\xa9\xa1\xfa\x5d\xd1\xf6\x6b\x1d\x3f\xab\xe3\xe7\x74\xdc\x77\xda\x7f\x5b\xfb\x49\xd7\xf9\xc9\x00\xba\x01\xdc\x31\x80\x4d\x00\x3a\xe2\xea\x7d\x73\x5c\xbd\x67\xe2\x2a\x6f\x4b\x1c\x18\xe8\x00\xfa\xe3\x0a\xe7\xbb\x9d\xc0\x03\x00\xce\x77\x02\xab\x00\x5c\xea\x04\x5e\x06\x50\xd7\xf7\xdf\x3b\xd5\x1c\x7f\x75\x02\x7d\x00\x56\x25\x80\x57\x01\x0c\x27\x80\xc7\x01\x7c\x98\x00\x9e\x07\xf0\x6d\x42\xcd\xff\x73\x42\xf5\xff\x35\x01\xf4\x48\xde\x92\x8a\xe7\xde\x24\xb0\x1a\xc0\x60\x52\xcd\x51\x48\xaa\x39\xdf\x4c\x02\x29\x00\xc5\xa4\xea\xe7\x68\x3b\x9e\x04\x9e\x04\x70\x4e\xe7\x7d\x93\x54\x38\x17\x74\xbd\x1f\x75\x9d\x3b\x3a\xfe\xb7\x24\xb0\x0f\xc0\x9f\x49\xe0\x2d\x00\x43\x5d\xca\xff\x45\x97\xca\x6b\xe8\xfb\xf7\x5d\x40\x87\x92\x40\x34\x3f\xb4\x3e\x9e\xd5\xe7\xb5\xda\xae\xd3\xb6\x4b\xdb\x55\xda\xca\x5d\x4b\x5c\x12\xf3\x53\x50\xd8\xb4\xa4\xf0\x30\x80\x67\xb0\xf8\x93\xf8\xfe\x0f\x85\x57\x72\xb5\x46\xeb\x51\xe2\x59\x0f\xa5\x1f\x43\xc7\x3e\x06\xb5\x2f\xb9\x2b\xb9\xa7\x07\x01\x3c\x21\x1f\xba\x8b\xec\xd0\x98\xcf\x3d\xe6\x1c\x66\xdd\x45\x0c\xba\xae\x39\x86\x41\xdf\x77\xad\x43\x81\xcf\xb1\xdd\x75\xcc\xe2\xa8\xe9\xf9\xac\xc2\x3d\xcf\x2c\x71\xec\x38\xc2\x47\x8f\x7a\x41\x05\x3b\x1c\xfb\xb0\x55\x52\xc6\xad\x30\x97\x7b\xdc\x67\x45\x7e\xcc\x1a\xe5\xf7\x3a\x7d\xd3\x6d\xbb\x87\x22\xc3\xba\xbd\xd6\xc9\x6c\x35\xf2\xb0\x7b\x08\x7b\x64\x1f\xc7\x2e\x5b\x36\x67\xbe\x55\x89\x02\x97\xf1\xb1\x8d\xdd\xde\x26\xec\xe1\xc7\x78\x19\xc3\x1a\xd5\x5e\xb3\xc2\xb1\xd7\x29\x72\x0f\xaf\x57\x7d\xcb\xb1\xb1\xcf\x75\x4a\x2e\xf7\x3c\x79\xa8\x72\xd7\x1f\xc3\x88\x02\x83\xfd\xdc\x2e\x62\xbf\x6f\xfa\x81\x87\x82\x55\xe1\x4e\xe0\xa3\x30\x56\xe5\x38\x68\x96\x03\x8e\x37\xac\x72\x99\x1d\xe2\xf7\x61\xef\x61\x83\x2e\x67\x63\x4e\xc0\xbc\xc0\xe5\x03\xed\xa8\xb7\xad\x2a\x67\xa3\x11\x15\x2b\x46\x56\x39\x5c\x6e\x16\xc7\xe0\x06\xb6\x6d\xd9\x25\x8c\xf0\xaa\xe3\xfa\xe9\x61\xaf\x64\x15\xd3\xdb\x83\x92\x97\x2e\x38\x39\x99\xbe\xed\xa8\x75\xc4\xac\x38\x3d\x6e\x90\x92\x83\xa7\x0b\xae\x69\x7b\x65\xd3\x77\xdc\x1c\x7b\x2d\x7a\x62\xc3\x81\x6b\x56\x9c\xa2\xc3\xfa\xfe\x15\xdf\x9f\xda\x63\xda\xa5\xc0\x2c\xf1\x74\x81\x9b\x95\x1c\x6b\xdf\x73\x6c\x24\xf0\x3c\xcb\xb4\x53\xc3\xbb\x87\x77\xa6\x0f\x72\xd7\xb3\x1c\x3b\xc7\xb2\x3d\x99\xd4\x0e\xc7\xf6\xb9\xed\xa7\xe5\xf8\x39\xe6\xf3\x77\xfc\x17\xaa\x65\xd3\xb2\xb7\xb2\xd1\x23\xa6\xeb\x71\x3f\x7f\xa0\xb0\x2b\xfd\xca\x62\x9c\xc4\x73\x98\xbb\xe9\x9d\xf6\xa8\x53\xb4\xec\x52\x8e\xa5\xf6\x95\x03\xd7\x2c\xa7\x77\x39\x6e\xc5\xcb\x31\xbb\x1a\x5d\xbd\xfc\x8b\x5b\x99\x3a\xe6\xed\xee\x6c\x26\x9f\xcf\xb2\x0d\x1b\x98\x3c\x66\x9e\xcb\x67\xb3\x6c\x80\x65\x58\x2e\xba\xf7\xe7\x7b\x5b\x4f\x7d\xf9\x97\xe4\x71\x63\x14\xd6\x97\xcd\xb0\xe3\xc7\x55\x4a\x7f\xbe\x37\xb3\x89\x0d\xb0\x2c\xcb\xb1\xde\xad\x52\xb4\x34\x45\x75\xba\x21\x6a\x8c\x9a\x74\x5d\x2a\x97\x3e\xa3\xba\x98\x10\x13\xd4\xa4\x69\xd0\x59\x51\x13\x35\x31\x4e\x4d\x9a\x12\x93\xa2\x06\xfa\x8a\x9a\x62\x9c\x42\xba\x49\x21\x4d\x53\x43\x9c\xa4\xba\xa8\x51\x83\x6e\x89\xd3\x34\x4f\x21\x35\x98\x98\xa0\x90\x42\x9a\x12\x27\xa9\x41\xf3\xd4\xa4\x06\xe8\x4b\x6a\xd0\x4d\x31\x21\x26\x69\x8e\xe6\xa8\x0e\xfa\x84\x42\x9a\x17\xef\x51\x93\x66\xc4\xa4\x18\xa7\xba\x78\x9f\x9a\xe2\x0c\xe8\x12\x85\x34\x2b\x6a\x51\xed\x71\xba\x46\xb3\xad\x22\xb2\xee\x94\x6c\x2d\x26\xa8\xce\xc4\xa4\x98\x88\x80\x85\x74\x43\x9e\x68\x5a\x56\x5d\x39\x99\x16\x22\x57\x83\xae\x53\x9d\x66\xc4\xb8\x98\xa4\xeb\x74\x93\x9a\x2b\x14\xba\xba\xc4\x19\xca\x8f\xe8\x7e\x3a\xc4\xa9\xe5\xf3\x77\x0f\x81\xce\x47\xed\xe6\xc4\x19\xd9\x5b\x82\xbe\x45\x0d\x9a\xa5\x79\x6a\xd0\x0c\x85\xad\x4f\x51\x16\xfd\xaf\x91\xea\x7b\xa5\xab\x51\xb3\x69\x39\x9a\x38\x0d\xba\xbc\x94\xed\x8f\x65\x31\xd0\xe7\x11\x1b\xa7\x40\x17\x69\xa1\x4d\x6f\x94\x3c\x23\x3b\xca\x25\xcb\xf4\xe9\x7b\xa7\x94\x1c\x2e\x25\xaa\x29\x6a\xb2\xd5\x45\x51\xa3\x05\xb9\x2c\x9a\x6e\xb9\x2e\x8b\x9a\x14\x80\x64\x01\x74\x45\x4a\x49\xee\x57\x49\xe5\x0a\x35\x69\x01\xf4\x11\xcd\x53\x5d\x7c\xb0\x08\x6f\x39\x72\x25\x9f\x72\x5d\x52\x88\x4b\x57\x75\x2d\x4a\x0e\x7b\x18\x9d\x8f\x28\xd7\x0b\x96\x0c\x9c\x1a\x00\x9d\x6b\xe7\xb6\x35\x72\x22\xca\xa8\xb3\x48\xa7\xcb\x08\x6d\xd9\xbd\xad\x54\xff\x72\x5b\x78\x7a\xea\x19\x0a\x45\x2d\x5a\x42\x88\x08\xe6\x82\x98\xd4\x0b\x08\xf1\x4f\x00\x00\x00\xff\xff\xed\x76\xe8\xc1\xd3\x08\x00\x00"

func localesRuLc_messagesWidgetMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesWidgetMo,
		"locales/ru/LC_MESSAGES/widget.mo",
	)
}

func localesRuLc_messagesWidgetMo() (*asset, error) {
	bytes, err := localesRuLc_messagesWidgetMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/widget.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/widget.html":      templatesViewsWidgetHtml,
	"locales/ru/LC_MESSAGES/widget.mo": localesRuLc_messagesWidgetMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"widget.mo": &bintree{localesRuLc_messagesWidgetMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"widget.html": &bintree{templatesViewsWidgetHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
