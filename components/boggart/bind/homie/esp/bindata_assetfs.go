// Code generated by go-bindata.
// sources:
// templates/views/widget.html
// locales/ru/LC_MESSAGES/widget.mo
// DO NOT EDIT!

package esp

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"

	"github.com/elazarl/go-bindata-assetfs"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsWidgetHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xff\x6f\xdb\x36\x16\xff\xbd\x7f\xc5\x1b\x97\xc2\xf6\x16\xd9\x4e\xb2\xf5\xee\x5c\x3b\x45\xb7\xde\xb0\x1e\xba\xb6\x58\xb3\x0d\xb8\xae\x17\xd0\x22\x6d\x33\xa5\x48\x8d\xa4\xec\xb8\x81\xff\xf7\x03\x45\x7d\xb5\x25\x5b\x4e\x9c\xae\x05\x6a\xa0\xa9\x44\x3d\xbe\x47\xbe\x2f\x9f\xf7\xf8\x2c\xdf\xdc\x00\xa1\x13\x26\x28\x20\x5f\x0a\x43\x85\x41\xb0\x5a\x3d\x18\x12\x36\x07\x9f\x63\xad\x47\x28\xc4\x53\xea\x19\x66\x38\x45\xe7\x0f\x00\x00\x8a\x0f\xe3\xf1\x4b\x4e\x27\x26\x79\x18\x13\xcc\xce\xce\x6f\x6e\x80\x9d\xfc\x53\x00\x7a\x46\xe7\xcc\xa7\xf0\x50\x23\x38\x02\xc1\x78\xf6\xaf\x2b\x70\x40\x61\xb5\x1a\xf6\x66\x67\x09\xe3\x1e\x61\xf3\xf3\x07\x35\x42\x14\x9b\xce\x4a\x52\x0a\x14\x13\xa9\x02\x6f\xaa\x64\x14\x42\x18\x71\xee\xad\xd3\xae\xd3\x33\x11\x46\xc6\x4d\x58\xa3\x8a\x29\x39\x1e\x53\x9e\xd2\x8e\x8d\xa8\xa5\xb4\x1f\xbb\xd3\x09\x74\x7f\x60\x82\x74\xdf\x18\x6c\x22\xdd\x7d\xae\xdd\xc5\x2b\xc1\xad\x6a\x57\xab\xca\x89\xc3\x71\x64\x8c\x14\x60\x96\x21\x1d\x21\x77\x83\x0a\x52\xc1\x4a\x66\xbe\x74\x17\x0b\xac\x04\x13\xd3\xf8\x5a\x07\xa8\x92\x63\xfa\x21\xd8\x60\xcf\xc8\xe9\x94\xd3\x11\x0a\x24\xc1\x1c\x25\x63\x58\x4d\xa9\x19\xa1\xaf\xdd\xe0\x6e\x26\x31\x9d\xb3\xfe\x08\x65\x36\xfd\x51\x8a\x09\x53\x01\x28\xaa\x0d\x56\x06\x48\x6c\x63\x04\x5d\x58\xad\x1a\x33\x1d\x4b\xb2\x2c\xf0\xfc\x83\x71\x0e\x63\xba\xc6\xb3\x0b\x4f\x15\x85\xa5\x8c\x40\x47\x8a\x3e\xd9\x53\x84\x8f\x39\x1f\x63\xff\xfd\x08\x61\xdf\x30\x29\xda\xad\x84\x7b\xab\xf3\xb8\xc6\x9a\xb1\x61\x58\xe6\x57\x58\xc3\x04\x7b\xa1\x5c\x50\xe5\xc9\xc9\x04\xc1\xba\x2a\x7e\x75\x0c\x93\x85\x9d\x0f\x7b\xac\x9a\xef\xb0\xe7\x0c\x5c\xeb\x43\x54\x90\xc3\x38\x0a\xc1\x62\x4a\xd5\xa7\xe6\x27\xf4\xb0\x5e\xb2\x60\x21\x05\xdf\xb2\x9f\xde\x9f\xa7\xd0\x7d\xfd\x84\x2a\xac\xa9\xda\x74\x92\x3f\x58\x48\xef\xe0\x21\xc3\x5e\x0c\x48\x6b\x70\xe6\xc0\xb2\xe2\x36\xb9\x4c\xd1\xb4\x88\x7b\x3e\xa7\x58\x4d\xd8\xb5\x5d\xc6\xe6\x53\x25\x17\x15\x10\xef\x4b\xee\x05\xc4\x3b\x39\x05\x7b\xa5\x83\xf4\xea\x5a\x7b\x27\xa7\x35\x78\x7c\x7d\x19\x62\x41\xf9\x16\x04\xbe\xbe\x2c\xa6\x94\x12\xd5\xec\x74\x23\x7b\x60\x63\x14\x1b\x47\x86\x6a\xa7\xc6\x61\x6f\x76\x5a\x31\x33\xca\x40\x5b\xe0\x39\x08\x3c\x1f\x63\xe5\x72\x01\xc4\xeb\xb9\x34\x52\xf2\xb1\xbc\xae\xb1\xe9\x90\xb3\xf3\x21\x2e\xec\x9b\xe3\x50\x53\x8f\x33\xf1\x1e\x9d\x17\x8d\x6d\x6d\xed\xcf\xe8\x5c\x49\xe1\xd9\xbc\x60\x6d\x3a\xec\xe1\xf3\x61\x8f\x57\x18\x77\xd8\x8b\x78\xc5\xe8\x36\xb3\x6c\x31\xf4\xa6\x22\xd3\xc4\x5d\x21\x23\xcc\x52\x28\xbd\x36\x5e\x10\x19\x4a\x60\x22\x85\xf1\x4e\xce\x20\xf0\xc6\xde\x59\x7f\x7b\x52\xe3\x58\x9b\xcb\x28\x24\xd8\xd0\x4b\x42\xb9\xc1\x75\x10\x95\xcc\x51\x78\x01\x6d\x67\xb9\x17\x58\x1b\x90\x2e\x01\x1a\x16\xd8\x0a\x00\xda\x0f\x75\xc7\x1a\xb0\x58\x06\xb4\x43\xc5\x84\x01\x34\xd4\xbe\x62\xa1\x71\x20\xf7\x27\xc2\x61\xc8\x99\x8f\x6d\x2c\xf6\xae\xf0\x1c\xbb\xa7\x7f\xa2\x73\x22\xfd\x28\xa0\xc2\x74\x17\x8a\x19\xda\xb6\x4b\xbb\x90\x6f\x8c\x62\x62\xda\x6e\x21\x68\x17\xd7\xdc\xfd\x49\xaa\x00\x1b\x40\xa7\xfd\xfe\x23\xaf\x7f\xe2\xf5\x4f\x2f\x4e\xbe\x1f\xf4\xbf\x1b\xf4\xbf\xff\x6f\xff\x1f\x83\x7e\x1f\x75\x00\xb5\x3a\x9d\x61\xcf\xf1\x3f\x47\x9d\xaa\x4d\x77\xea\xb6\x6d\x71\x9b\xeb\xda\x0c\x5f\xd4\x0a\xd4\xaa\xe5\x93\xd7\xc8\xd6\xed\x57\xa7\xad\x61\x2f\x4c\x0a\xb9\xd2\xa8\xc1\x63\x4e\x33\x9f\x8c\x6f\xe2\xbf\x9e\x36\x8a\x85\x94\xc4\x90\xec\xc6\x89\xf1\x14\xd5\xa1\x14\x9a\xcd\x29\x08\xb9\x50\x38\x44\xa0\xcd\xd2\x22\xeb\x82\x11\x33\x1b\x9c\xf4\xfb\x0f\xeb\x42\xd9\xcc\x28\x26\x75\xcf\xd4\x16\x4c\x37\xb3\x74\x7d\x01\xf1\x2c\xce\x9d\xa2\x1c\x8e\x9e\xa6\x38\x94\xc2\x90\x99\x6d\x65\x95\xcf\xfc\x1d\xf3\x68\xe7\xac\x61\xaf\x6e\x69\x76\xce\x96\x0d\xd9\x2c\x59\xbf\x90\xd8\x05\xc5\x94\xc2\x91\x2d\xb9\x8f\xe1\x68\x6e\x17\x03\x83\x11\x74\x5d\xee\xd4\x97\x39\xc0\x6e\xf3\xe5\xad\x9a\x73\x04\xc4\x6e\xf9\x28\x2b\xed\x4d\xcd\x92\x8b\x13\xb6\x12\x40\x06\x46\xf4\xaf\x84\x2f\x62\x41\xc8\xa9\xf5\xf8\x38\x18\xba\xae\x0c\x40\xdb\x16\x5e\x12\x19\x2a\x9a\xfa\x51\x88\x09\x61\x62\x3a\xe8\xa3\xf3\xa1\x2f\x49\xe6\x9a\x57\x5a\x0a\x74\x5e\x0a\xc0\x9a\xf8\xdb\x08\xbf\xff\xbc\x79\xf5\xb2\xab\xe3\xe8\x63\x93\xa5\xbb\x0d\xb1\xd2\xb4\x9d\x20\x41\xa2\xfd\xd5\xaa\x73\x0c\x22\xe2\xfc\x18\x4e\x0b\xe1\x36\xec\xd9\x75\x9c\x0f\x7b\xa1\xa2\x8d\x34\xb3\x0b\x7f\xd6\xc8\x33\xe9\x8d\x78\xd7\xd7\xa4\x99\x36\xb7\x9a\xb8\xde\xa1\x77\x4b\x18\xf6\x6a\xdc\x7a\xd8\x8b\x11\xe2\x96\xe5\x50\x92\xd9\x84\x24\xce\xd7\x3f\xf1\x02\xe8\xa5\x5d\xe7\x97\xa2\x67\x9f\xa2\xe7\x93\x48\x32\xd0\x0c\x2e\x0b\x19\xe2\xf9\xb3\x26\x49\x05\x4a\x78\xd8\x0d\x95\x34\xd2\x97\xfc\x32\xc0\x57\x52\x01\x3a\xb3\x30\x58\x62\xfb\x12\x07\xc5\xbc\xd3\x30\xaa\x8b\x1c\x2e\x96\x61\xa3\x7c\xb7\x31\xf1\xa9\x52\x78\xb9\xc7\xcc\x54\xf1\x84\xe9\x90\xe3\xe5\x00\x84\x14\xd4\xba\xc7\xd6\x2c\x7b\xf8\x9c\x59\xc8\x97\xc7\x70\x64\x91\x22\xce\x95\x19\x64\xd4\x6f\xa1\x69\x7a\x94\x84\x76\x9f\x3f\xeb\xba\x22\xad\x51\xa2\xdc\x6d\xf3\x02\x6b\x6b\xf3\x35\xe6\x4d\xed\x5e\xe0\x62\xed\xbe\xcf\x12\x4b\x93\x63\xdb\xef\x3b\xbb\x49\x4e\x3a\x0a\x95\x0c\xa9\x32\x8c\x6a\x6b\x15\x27\xed\x75\x3e\xd6\x2c\xb3\xb1\x49\x89\x51\x83\x49\xbb\x61\x25\x81\x8f\xdd\xbb\x80\x06\xd8\xb1\x49\xbf\xc3\xb7\x2a\x04\xe4\x91\x98\xe8\x67\x89\xe0\xa8\x51\x30\x6e\x65\x96\x94\xb2\xfb\x73\xda\x5e\x0d\xac\x51\x36\x57\xcf\xae\xf2\x77\xfd\x93\x87\x77\x78\x9c\x79\xc1\x32\x76\xa6\xfd\x5c\x22\x5f\xc0\xde\xb6\x71\x91\x92\xca\xae\x0a\xd8\xbb\x31\x8c\x6d\x94\x73\x84\xd2\xc3\xdf\x04\x33\xb7\x95\xd6\xdc\x86\xd0\xb8\x86\x2c\xf0\x6e\x66\xc9\xca\x0a\xf0\xf6\xf2\x6f\x5b\xc3\xfe\x1d\xf5\x6b\x2e\x33\xad\x64\x35\x35\x86\x89\xe9\xfd\x17\xb3\x90\x16\x87\xe4\xee\x65\xed\x8f\xc9\x99\xed\x4b\x5d\xdb\xbc\xae\x9d\x48\x15\x80\x92\xb6\x42\xb2\x97\x08\x5c\xab\x7a\x84\x9e\x24\x17\xa9\x27\x20\x08\xa8\x99\x49\x32\x42\xa1\xd4\x06\x01\x23\x23\x94\x3f\x2b\x35\xfd\xe7\x98\x33\x82\x8d\x54\xb5\x25\xee\xc7\x2a\xa6\xe1\x40\x05\xf5\x5a\xf7\xe6\xa4\xd0\xbd\x79\x15\x5a\x35\xdd\xaa\x94\x6d\xd4\xbe\x81\x9d\xf8\xb8\x33\xaf\x35\x6f\xe5\xb0\x63\x38\x92\xf1\x86\xe2\xe2\xb4\x88\x02\xf5\xcc\x1b\xd6\xa7\x8e\x6f\x9c\x95\x0e\x53\xbb\xe5\xd5\x6b\xc2\xda\xd6\x96\x80\xc6\x52\xf2\x46\x7d\x9b\x61\xfc\x85\x6d\xd2\x88\xf1\x67\xd4\x7f\x6f\x03\x3f\xef\xd6\x78\x7a\xc1\x8c\x3f\x43\x20\x70\xe0\xbe\x78\x59\xdb\x83\x0b\x82\xaa\xf1\x6c\x69\x49\xdb\x35\x25\x88\x2d\xde\x01\x64\x94\x35\xfc\x6a\x05\xb1\x58\x4a\x32\x00\x86\xde\xce\x3d\xc7\xbd\x19\x36\x01\xa9\xa0\xbd\xb1\x79\x26\x0c\xea\x54\x8f\x3f\xfa\x0e\xd5\xf6\x5c\x6b\xd5\x22\xa2\x60\x4c\x15\x2a\x7d\x25\x6e\xd1\x44\x59\x1d\xd7\xeb\x25\xee\x07\x95\x1e\xfd\x9e\x74\x88\xea\x75\x16\x62\x63\xa8\x12\x23\xf4\xbf\xb7\xde\xb7\xef\x9e\xbc\xed\x7b\xff\x7a\xf7\xcd\x11\xba\xa3\x42\xa2\x3a\x8d\x44\x9f\x97\x4a\x6e\xa5\x91\x8d\x4d\x4f\xb8\xc4\x76\xd7\x9f\xc9\xa6\x73\x3f\x68\xff\xd9\x75\x17\x9d\x27\xfb\x28\x00\x0b\x52\x61\x7a\xd7\x48\xb5\x5e\x31\xa5\xd0\xe6\x54\xac\xc7\xe7\x49\xbf\xdf\xcc\x2f\x0c\xbd\x36\x58\x51\x5c\xa5\x17\x50\x54\xb3\x0f\x36\x89\x5d\xa6\x64\x08\x94\x5c\xe8\x11\xfa\xee\x16\x98\x72\x5e\xa1\xc4\x61\x2f\xe5\xdc\x4c\x23\xfb\x5a\xdd\x72\xff\x18\x36\x6f\x60\xd0\xbf\xb3\x69\x0c\xbb\x8e\x11\xb5\x47\x87\x61\xcf\x6a\xed\x50\x45\xb9\x34\xf8\x92\x0a\x2b\x89\x7c\x56\x75\xf9\xab\x8b\xa7\x5f\x8a\xf2\x83\x36\x9b\xf7\x6f\x2a\x6f\xaf\x00\xf7\x6b\x2a\xbb\xf7\xd0\x9a\x97\xbc\x71\xfd\x97\x3a\xb0\x8a\x84\x70\x3d\x82\x8c\x5f\x32\xe4\x18\xe6\x58\x95\x3f\xa7\x98\x2c\xf3\xa7\x71\x50\xdc\x25\xda\xf7\xdb\xed\x6b\x25\xa7\x8a\xea\xbd\xf6\xbb\x1b\x66\x8b\xef\x42\x66\x02\x12\x73\x06\x58\x4d\x99\xf0\xc6\xd2\x18\x19\x0c\xea\xde\xa6\x68\xc2\xd2\x1b\x63\x05\xc5\x9b\xcc\x83\x2a\x2d\x52\xa2\x64\x62\x22\xe3\xd3\xe0\x9c\xe6\x36\x29\x51\xb8\x97\xc2\x9c\x49\x2c\xba\xbb\x63\x64\x4a\x32\xc6\x0a\x01\x56\x0c\x7b\x71\x46\x10\x72\x11\x63\x7f\x2c\x72\xa1\x98\x31\x54\xc4\x39\x21\x27\x09\x98\x18\xa1\x7e\x69\x04\x5f\xe7\x93\x8c\x34\x98\xc7\x53\x4a\x6e\x9f\x3e\x4e\xe5\xc2\x6a\xb5\xed\x38\xb8\xa1\x36\x1d\x62\x91\x72\xe4\x4c\x50\x6f\x46\x2d\xf4\x0c\x4e\xfb\x61\x1d\xe2\xd4\x7d\x32\x9f\x79\x48\x60\xbc\x34\x54\x83\x9c\xc0\x43\xb2\xfe\x2e\x46\x49\x05\xa5\xad\xed\xd1\x31\xb3\xcb\x6e\xda\xf7\xdc\x40\xa2\x5b\x92\x7d\xbc\xa0\xfb\xd1\x9e\x8b\x74\x14\xec\x09\x32\xb1\x32\xfd\x64\xee\x1d\x50\x62\x77\x9b\x6d\xe3\x49\x76\xe4\x2b\xc5\xd4\x04\xd7\xd4\x5d\xae\xf1\x52\x2c\xad\x66\x52\xb1\x0f\x52\x58\x47\x88\xef\xe3\xd7\xf3\x3c\x4e\x27\x06\x88\x92\xe1\x07\x29\x28\x2a\x75\x6a\x36\xfb\x31\xd2\xe0\xcd\x06\x4e\x3c\x28\x64\xd2\x94\xa9\xe9\x6f\x96\xde\x63\x36\x34\x80\xfc\xe5\xe7\x6d\xad\x15\xf7\x4e\xf3\x44\xaa\x11\xe2\x74\x4e\x39\xca\xb3\x70\x5c\x27\x7a\xc9\x4b\xcf\xae\x0e\x39\x4b\xcb\x90\xb3\xca\x2a\xa4\x4a\xa3\xee\xbb\x42\x16\x50\x19\x25\xaf\xc3\x6e\xb1\x66\xc5\x0b\x8d\x75\x7b\x4c\x56\xf4\x28\x5d\xd1\xa3\x46\x2b\x82\x3d\x0a\x64\x6b\x0f\x93\x2e\xdc\x55\xcb\xd9\x6d\x5e\x22\xbb\xe8\x77\xe3\x31\xb4\x29\xfa\x57\xc4\x14\x25\x23\x94\x5e\x6d\xd3\x7f\x7d\xc8\xd6\x3c\xaa\x2a\x48\xa1\xb6\x00\xbe\x45\xa9\xfa\xd9\x14\xa5\x3f\x28\x89\x89\x8f\xb5\x81\x80\x6a\x8d\xa7\xf4\x4b\x89\xba\x77\xdf\xb8\x19\x7c\xed\x42\xad\x71\x6a\x89\x4d\xec\x2a\x3c\xfa\x1c\x11\x0c\x8a\x28\xf6\xc2\xb1\xb7\x4e\x96\x14\x1d\x69\x98\x64\x81\xfe\xcd\xae\xb4\xfe\x09\x62\x5c\xa2\x35\x87\x70\xc9\x4d\xc8\xb1\x4f\x67\x92\x13\xaa\x46\x08\x73\xaa\x72\xcc\xbb\x77\x84\x5b\xd7\xc2\xed\x7c\x21\xc3\x84\xfb\xf2\x86\x5f\x8a\xa0\xf3\xb7\xdb\xfb\xae\x7d\xac\x4c\x5d\xd6\x23\xd2\x9b\xf3\x26\xed\xa9\xbb\x1b\x98\x8b\x4b\x2d\x39\x23\x95\x10\x57\x35\xa1\x99\x33\xd4\x29\x36\x20\x9e\x9c\x4c\x34\x35\xde\xd9\x2e\xad\x96\x7e\x61\xa3\xa3\x71\xc0\xcc\xc6\x2f\x6c\x74\xe4\xfb\xf6\xec\x57\x38\x5d\x53\x41\xd2\x5c\xb4\xed\xe7\x3d\xb7\xd3\xde\xe1\x3a\x52\xe9\x4f\xfc\x66\x14\x93\xac\xa1\x7c\x73\x03\xda\x60\xc3\xfc\x9f\x2f\x7e\x79\x01\x6d\x77\xfd\xdb\xaf\x2f\x00\xf5\x08\xd6\xb3\xb1\xc4\x8a\xf4\xb0\xd6\xd4\xe8\xde\x9c\x0a\x22\x95\xee\x65\x5f\xf6\xe9\xae\xa0\xc6\x1b\xeb\x9e\xaf\xdd\xe8\x85\x1b\x1d\x4b\x69\xb4\x51\x38\xec\x06\x4c\x74\x7d\x7b\x52\x8e\xeb\xea\xce\x01\xa5\xe6\x5f\x32\xa6\x0b\xc8\x47\xee\x67\x01\x33\x36\x9d\x71\x5b\x41\x5c\x39\x79\x46\x06\x52\x29\xb9\x38\xe8\x26\x93\x83\x43\x22\x22\xbd\xad\x12\xe1\xec\x1d\x9f\x83\x0b\xc0\x6f\xa7\x15\xdc\xfc\xeb\xec\x1b\xc1\xf8\x7c\x04\x71\x9e\x38\xde\x18\xce\xe0\xe4\xa6\xe4\x67\xee\xbc\x0e\x27\xfd\xfe\xc3\xc7\xd9\x83\x55\xe2\x68\xb1\xe4\x3a\x1f\xbb\xd2\x07\xf4\xb0\xde\x95\xee\x5d\xfd\x15\x51\xb5\xec\x16\x9c\xcc\xaa\xe4\xea\x3e\x3c\x6b\xac\xad\xc0\x5a\x77\xbe\x17\x99\xb9\xef\xae\xc9\x2e\x38\xf5\x47\x10\x9e\xec\xbd\x36\x92\x0e\x23\xbe\x18\x48\x57\x85\xdb\x6e\x88\xfd\xf7\x07\x94\x93\xbd\xd6\x60\xa5\x64\x37\x87\xd4\x63\x1e\xad\x57\x6b\xc1\xba\x29\xa0\xd9\xef\x08\xb2\x30\x3b\x6a\xa7\x3f\x29\xe8\x74\xe3\x7e\x6a\x7b\x12\x89\xb8\xc8\x86\x76\x67\x2d\x4e\x9f\xa5\x92\xdd\xd7\x34\xda\x1e\x52\x61\xb4\x46\x64\x3f\x21\x56\x98\x73\xca\x7f\x0b\xb9\xc4\x44\x0f\xe0\xe4\xb8\x92\x26\x78\x89\x03\x3a\x00\x34\x61\x2a\x58\x60\x45\xd1\x26\x99\xaf\x28\x36\xf4\x79\x80\xa7\xf4\x62\x16\x05\x63\x81\x19\xd7\x03\xb7\xe7\x4d\x6a\xec\xfb\x34\x34\x94\xfc\xc4\x38\xd5\x03\x28\x6d\x3f\xc0\xfe\x98\x09\xac\x96\xc7\xdd\x31\x13\xe5\x1f\x6b\xae\x1e\x97\x1b\x37\x33\x7e\xa5\xbb\x4c\x30\xf3\x73\xea\x34\x4c\x4c\x5f\x89\x17\x12\x93\x76\x67\x8d\x36\xd3\x57\x92\xb2\x7f\xc6\x82\x70\xaa\xda\x6a\x5d\x7d\xf6\xc3\x26\xd0\x56\x36\xda\x22\x6e\x60\x34\x1a\x41\x6b\x82\x19\xa7\xa4\x55\x45\x6c\x3f\x82\x2e\xe0\xf5\x4b\x69\xd8\x64\xd9\xae\xa6\xb0\x9f\xf8\x64\x3b\x80\xd6\xbf\x95\x92\xaa\xb5\xa9\x97\x8c\x8e\x5e\x9b\x01\xa8\x6e\x52\x8a\x6d\x21\x5c\x86\x96\x1f\xdd\xc1\x6f\xc6\x08\xad\x35\x46\xfa\xb1\x08\xce\xc4\x74\x00\xad\x2c\xca\xcf\x5a\x95\xd4\xab\xce\xe3\x8d\xf1\x55\xf6\xa5\x6d\x3b\x5b\x37\x7c\x65\x35\x17\x09\x97\x06\x0e\xa5\xbc\x37\xce\x7e\x07\x54\x9f\xde\xc9\xf1\x63\x28\xb0\xec\xe9\x0f\xd6\x52\xaf\x20\x72\xd1\x75\xc7\x6a\x18\x65\xce\xdc\xf6\x03\x52\xa5\xd5\xa3\x2e\xbe\xc2\xd7\x35\xca\x4c\x76\xfd\xfa\xd5\x9b\x8b\x9a\x2d\x47\x8a\x0f\xa0\x95\x9e\xe2\x5b\xf0\x2d\xf8\x01\xa9\x26\x4d\x74\x37\x58\x0b\xab\xcd\xed\xad\x6d\x79\x3d\x94\x8f\xda\xad\xaf\xb3\x76\x41\xab\xd3\x75\xf5\x76\x86\x72\x6d\x3a\xb7\xd8\xb7\xb9\xa1\x78\xbc\x1b\xaa\xf8\xff\x67\x74\x82\x23\x6e\xda\x15\xea\x9d\x63\x05\x14\x46\x70\xd4\x36\x33\xa6\xd7\xc1\xe1\x50\x3a\xa3\xdd\x50\xc9\xb0\xdd\x72\x9a\x6b\x75\xaa\x49\x6d\xc2\xb5\xb4\x9a\x2a\x86\x39\xfb\x40\xdb\x35\x84\xb7\x56\xee\xfa\xfe\x2a\x5e\x0b\x2d\x6d\xbd\xdd\xca\x6b\xc0\xb8\x28\x7c\xcb\xc8\xbb\x52\x61\x98\x94\x84\x76\xbc\xd5\xe9\xfa\x33\x2c\xa6\x34\xb7\x4e\x95\x0f\xce\xf1\xe6\x42\xed\xa7\x60\x85\x7a\xf5\xd8\x7c\xb5\xaa\x7e\xfc\x1e\x46\x99\x9e\x19\x69\x75\x36\x88\x2a\x6c\x6b\x61\x29\x9d\x63\x4d\xd9\xea\x38\x54\x4f\x5f\x1b\xab\x85\x26\xbb\x96\xb7\xef\xdf\x15\x44\x26\xaf\x7c\xb5\x3a\xf0\xd5\x08\x5a\xad\x5a\x24\xdc\xcd\x6f\x8e\x79\x7b\x73\xf5\xab\xfb\xf1\xcc\xa2\x89\x5b\x9d\x3d\xdc\xd4\xfe\x3d\xbc\x77\x16\xef\x0b\x67\x86\xb5\x61\xeb\xb3\x71\x6e\xab\x6a\xb2\xec\xce\x1a\x4d\xd2\xad\xcb\x15\xad\x9b\x9b\x5c\x52\x1d\xe5\xee\x5c\xbb\x33\x4d\x34\x4b\x11\xf5\x0a\x5a\xa7\xc8\x7e\x22\x9a\x1f\xbc\xfe\x1f\x00\x00\xff\xff\xfb\x26\x8f\x10\xbe\x47\x00\x00"

func templatesViewsWidgetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsWidgetHtml,
		"templates/views/widget.html",
	)
}

func templatesViewsWidgetHtml() (*asset, error) {
	bytes, err := templatesViewsWidgetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/widget.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesWidgetMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x5b\x6c\x54\x55\x17\xfe\x3a\x67\x3a\xd3\x7f\x7e\x2f\x88\x88\x78\x65\xfb\x50\x84\x90\xa9\x33\x55\x89\x19\x3a\x2d\x85\x42\x24\x52\x24\x65\xc0\x07\x1f\xcc\xa1\xb3\x19\x4e\x98\x39\x67\x72\x2e\x68\x13\x62\xda\xa9\x51\x08\x24\x5c\x12\xd4\x78\x81\x00\x26\x9a\x68\xcc\xf4\x32\x30\x40\x7b\x1a\x7d\xc2\xc4\x87\xb5\x1f\x34\x1a\x12\x1e\x7c\x30\xbe\xfb\x60\xe2\x93\xd9\x67\xef\x99\x22\x6d\x13\x27\x99\xac\xbd\xd7\x5e\x97\x6f\x7d\xeb\x3b\x77\x57\xc7\x2f\x00\x00\x03\xf0\xb4\xfc\x77\x00\x9b\xa5\x8d\x21\xfa\xdd\x8e\x01\x0f\x01\xf8\x21\x06\x74\x02\xf8\x25\x06\xfc\x0f\xc0\xdd\x18\xf0\x08\x80\x3f\x62\x40\x17\x80\xbf\x63\x40\x02\x80\x61\x00\x6b\x00\xa4\x0c\x60\x2d\x80\xf5\x86\x8a\xdf\x62\xa8\xf8\x6d\x06\x20\x4b\x8f\x18\xc0\xa3\x00\x0e\x18\xc0\x3a\x00\x96\xa1\xea\xd7\x0c\x20\x09\xe0\x84\x01\xc4\x01\x9c\xd5\xfe\x0b\x86\xaa\xff\xa9\xa1\xfa\x5d\xd1\xf6\x6b\x1d\x3f\xab\xe3\xe7\x74\xdc\x77\xda\x7f\x5b\xfb\x49\xd7\xf9\xc9\x00\xba\x01\xdc\x31\x80\x4d\x00\x3a\xe2\xea\x7d\x73\x5c\xbd\x67\xe2\x2a\x6f\x4b\x1c\x18\xe8\x00\xfa\xe3\x0a\xe7\xbb\x9d\xc0\x03\x00\xce\x77\x02\xab\x00\x5c\xea\x04\x5e\x06\x50\xd7\xf7\xdf\x3b\xd5\x1c\x7f\x75\x02\x7d\x00\x56\x25\x80\x57\x01\x0c\x27\x80\xc7\x01\x7c\x98\x00\x9e\x07\xf0\x6d\x42\xcd\xff\x73\x42\xf5\xff\x35\x01\xf4\x48\xde\x92\x8a\xe7\xde\x24\xb0\x1a\xc0\x60\x52\xcd\x51\x48\xaa\x39\xdf\x4c\x02\x29\x00\xc5\xa4\xea\xe7\x68\x3b\x9e\x04\x9e\x04\x70\x4e\xe7\x7d\x93\x54\x38\x17\x74\xbd\x1f\x75\x9d\x3b\x3a\xfe\xb7\x24\xb0\x0f\xc0\x9f\x49\xe0\x2d\x00\x43\x5d\xca\xff\x45\x97\xca\x6b\xe8\xfb\xf7\x5d\x40\x87\x92\x40\x34\x3f\xb4\x3e\x9e\xd5\xe7\xb5\xda\xae\xd3\xb6\x4b\xdb\x55\xda\xca\x5d\x4b\x5c\x12\xf3\x53\x50\xd8\xb4\xa4\xf0\x30\x80\x67\xb0\xf8\x93\xf8\xfe\x0f\x85\x57\x72\xb5\x46\xeb\x51\xe2\x59\x0f\xa5\x1f\x43\xc7\x3e\x06\xb5\x2f\xb9\x2b\xb9\xa7\x07\x01\x3c\x21\x1f\xba\x8b\xec\xd0\x98\xcf\x3d\xe6\x1c\x66\xdd\x45\x0c\xba\xae\x39\x86\x41\xdf\x77\xad\x43\x81\xcf\xb1\xdd\x75\xcc\xe2\xa8\xe9\xf9\xac\xc2\x3d\xcf\x2c\x71\xec\x38\xc2\x47\x8f\x7a\x41\x05\x3b\x1c\xfb\xb0\x55\x52\xc6\xad\x30\x97\x7b\xdc\x67\x45\x7e\xcc\x1a\xe5\xf7\x3a\x7d\xd3\x6d\xbb\x87\x22\xc3\xba\xbd\xd6\xc9\x6c\x35\xf2\xb0\x7b\x08\x7b\x64\x1f\xc7\x2e\x5b\x36\x67\xbe\x55\x89\x02\x97\xf1\xb1\x8d\xdd\xde\x26\xec\xe1\xc7\x78\x19\xc3\x1a\xd5\x5e\xb3\xc2\xb1\xd7\x29\x72\x0f\xaf\x57\x7d\xcb\xb1\xb1\xcf\x75\x4a\x2e\xf7\x3c\x79\xa8\x72\xd7\x1f\xc3\x88\x02\x83\xfd\xdc\x2e\x62\xbf\x6f\xfa\x81\x87\x82\x55\xe1\x4e\xe0\xa3\x30\x56\xe5\x38\x68\x96\x03\x8e\x37\xac\x72\x99\x1d\xe2\xf7\x61\xef\x61\x83\x2e\x67\x63\x4e\xc0\xbc\xc0\xe5\x03\xed\xa8\xb7\xad\x2a\x67\xa3\x11\x15\x2b\x46\x56\x39\x5c\x6e\x16\xc7\xe0\x06\xb6\x6d\xd9\x25\x8c\xf0\xaa\xe3\xfa\xe9\x61\xaf\x64\x15\xd3\xdb\x83\x92\x97\x2e\x38\x39\x99\xbe\xed\xa8\x75\xc4\xac\x38\x3d\x6e\x90\x92\x83\xa7\x0b\xae\x69\x7b\x65\xd3\x77\xdc\x1c\x7b\x2d\x7a\x62\xc3\x81\x6b\x56\x9c\xa2\xc3\xfa\xfe\x15\xdf\x9f\xda\x63\xda\xa5\xc0\x2c\xf1\x74\x81\x9b\x95\x1c\x6b\xdf\x73\x6c\x24\xf0\x3c\xcb\xb4\x53\xc3\xbb\x87\x77\xa6\x0f\x72\xd7\xb3\x1c\x3b\xc7\xb2\x3d\x99\xd4\x0e\xc7\xf6\xb9\xed\xa7\xe5\xf8\x39\xe6\xf3\x77\xfc\x17\xaa\x65\xd3\xb2\xb7\xb2\xd1\x23\xa6\xeb\x71\x3f\x7f\xa0\xb0\x2b\xfd\xca\x62\x9c\xc4\x73\x98\xbb\xe9\x9d\xf6\xa8\x53\xb4\xec\x52\x8e\xa5\xf6\x95\x03\xd7\x2c\xa7\x77\x39\x6e\xc5\xcb\x31\xbb\x1a\x5d\xbd\xfc\x8b\x5b\x99\x3a\xe6\xed\xee\x6c\x26\x9f\xcf\xb2\x0d\x1b\x98\x3c\x66\x9e\xcb\x67\xb3\x6c\x80\x65\x58\x2e\xba\xf7\xe7\x7b\x5b\x4f\x7d\xf9\x97\xe4\x71\x63\x14\xd6\x97\xcd\xb0\xe3\xc7\x55\x4a\x7f\xbe\x37\xb3\x89\x0d\xb0\x2c\xcb\xb1\xde\xad\x52\xb4\x34\x45\x75\xba\x21\x6a\x8c\x9a\x74\x5d\x2a\x97\x3e\xa3\xba\x98\x10\x13\xd4\xa4\x69\xd0\x59\x51\x13\x35\x31\x4e\x4d\x9a\x12\x93\xa2\x06\xfa\x8a\x9a\x62\x9c\x42\xba\x49\x21\x4d\x53\x43\x9c\xa4\xba\xa8\x51\x83\x6e\x89\xd3\x34\x4f\x21\x35\x98\x98\xa0\x90\x42\x9a\x12\x27\xa9\x41\xf3\xd4\xa4\x06\xe8\x4b\x6a\xd0\x4d\x31\x21\x26\x69\x8e\xe6\xa8\x0e\xfa\x84\x42\x9a\x17\xef\x51\x93\x66\xc4\xa4\x18\xa7\xba\x78\x9f\x9a\xe2\x0c\xe8\x12\x85\x34\x2b\x6a\x51\xed\x71\xba\x46\xb3\xad\x22\xb2\xee\x94\x6c\x2d\x26\xa8\xce\xc4\xa4\x98\x88\x80\x85\x74\x43\x9e\x68\x5a\x56\x5d\x39\x99\x16\x22\x57\x83\xae\x53\x9d\x66\xc4\xb8\x98\xa4\xeb\x74\x93\x9a\x2b\x14\xba\xba\xc4\x19\xca\x8f\xe8\x7e\x3a\xc4\xa9\xe5\xf3\x77\x0f\x81\xce\x47\xed\xe6\xc4\x19\xd9\x5b\x82\xbe\x45\x0d\x9a\xa5\x79\x6a\xd0\x0c\x85\xad\x4f\x51\x16\xfd\xaf\x91\xea\x7b\xa5\xab\x51\xb3\x69\x39\x9a\x38\x0d\xba\xbc\x94\xed\x8f\x65\x31\xd0\xe7\x11\x1b\xa7\x40\x17\x69\xa1\x4d\x6f\x94\x3c\x23\x3b\xca\x25\xcb\xf4\xe9\x7b\xa7\x94\x1c\x2e\x25\xaa\x29\x6a\xb2\xd5\x45\x51\xa3\x05\xb9\x2c\x9a\x6e\xb9\x2e\x8b\x9a\x14\x80\x64\x01\x74\x45\x4a\x49\xee\x57\x49\xe5\x0a\x35\x69\x01\xf4\x11\xcd\x53\x5d\x7c\xb0\x08\x6f\x39\x72\x25\x9f\x72\x5d\x52\x88\x4b\x57\x75\x2d\x4a\x0e\x7b\x18\x9d\x8f\x28\xd7\x0b\x96\x0c\x9c\x1a\x00\x9d\x6b\xe7\xb6\x35\x72\x22\xca\xa8\xb3\x48\xa7\xcb\x08\x6d\xd9\xbd\xad\x54\xff\x72\x5b\x78\x7a\xea\x19\x0a\x45\x2d\x5a\x42\x88\x08\xe6\x82\x98\xd4\x0b\x08\xf1\x4f\x00\x00\x00\xff\xff\xed\x76\xe8\xc1\xd3\x08\x00\x00"

func localesRuLc_messagesWidgetMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesWidgetMo,
		"locales/ru/LC_MESSAGES/widget.mo",
	)
}

func localesRuLc_messagesWidgetMo() (*asset, error) {
	bytes, err := localesRuLc_messagesWidgetMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/widget.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/widget.html":      templatesViewsWidgetHtml,
	"locales/ru/LC_MESSAGES/widget.mo": localesRuLc_messagesWidgetMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"widget.mo": &bintree{localesRuLc_messagesWidgetMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"widget.html": &bintree{templatesViewsWidgetHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
