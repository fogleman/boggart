// Code generated by go-bindata.
// sources:
// templates/views/widget.html
// locales/ru/LC_MESSAGES/widget.mo
// DO NOT EDIT!

package v1

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"

	"github.com/elazarl/go-bindata-assetfs"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsWidgetHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x79\x6f\xe3\x36\x16\xff\x7f\x3e\xc5\x83\x90\xd9\x49\xda\xca\x77\xbb\xbb\xa9\x93\xa2\xd8\xe9\x62\x0b\xb4\x8b\xa2\x93\x9d\x62\xb7\xed\x06\xb4\x44\xc5\xea\x48\xa4\x86\xa2\x9c\x64\x03\x7f\xf7\x05\x49\x1d\x94\x2d\xdb\x3a\x93\x78\x22\x03\x9d\x5a\x07\xdf\x23\x7f\xfc\xbd\xc3\xd2\x23\xf3\xf0\x00\x36\x76\x5c\x82\xc1\xb0\x28\xe1\x98\x70\x03\xd6\xeb\x57\xf3\xd0\x62\x6e\xc0\x81\xdf\x07\xf8\xc2\x40\x41\xe0\xb9\x16\xe2\x2e\x25\xc3\x3f\xd0\x0a\xa9\x8b\xc6\xe5\x2b\x00\x00\x27\x22\x96\xb8\x02\x2b\xe4\x45\xf8\xef\x94\xf9\x88\x9f\x92\x33\x78\x90\x57\xc5\x87\x61\x1e\x31\x02\x04\xdf\xc2\xf7\x84\x7b\x83\x7f\x46\xfe\x02\xb3\xf8\xce\xb3\x81\x93\x34\xf9\x5a\xb6\x58\xbf\x9a\x0f\x95\x82\xcb\x57\x73\xdb\x5d\x81\xe5\xa1\x30\xbc\x30\x18\xbd\x8d\x35\xea\x67\x2d\xea\x99\xbe\x6d\x8e\x27\x20\xbe\x85\x7e\xf2\xed\x2e\x34\xc7\x93\xf8\xfe\xcd\x36\x77\xd7\x01\x22\xd8\xd3\xae\x6e\xdf\x91\x80\x91\xbf\x27\xbd\x8f\x51\x0f\x5f\x18\x1c\x2d\x8a\x24\xa5\x77\x46\x5e\x22\x90\xa0\x15\x10\xb4\x32\x39\x5a\x84\xb0\x40\xec\x5a\x7c\x31\x32\x31\x9e\x1b\x16\xe9\x4a\x25\x79\x6e\x7c\x6f\xc0\x70\x88\x09\x97\x73\x61\x3c\x3c\x80\xeb\x00\xfe\x08\x03\xa4\xa6\xc0\x10\x93\x97\xe8\x14\xe7\x56\x58\xdc\x84\x89\x0d\xeb\xf5\xe5\x1c\xc1\x92\x61\xe7\x62\x47\xbb\x6c\x66\xcf\x57\xd4\xb5\x4f\x47\x67\x5f\x8b\xb6\x5e\x88\x61\xbd\x7e\x78\x80\xc1\xcf\xf8\x63\x84\x43\x3e\xf8\xd7\xcf\x3f\x0c\x7e\x42\x7c\xa9\x4e\x2b\xe1\xc6\xa5\x10\x3a\xfe\x0b\x01\xe3\x6f\x11\x63\x98\x70\xf0\x31\x0a\x23\x86\x7d\x4c\x78\x68\xc0\x00\xd6\xeb\xf9\x10\x5d\xce\x87\x9e\xdb\xc2\x40\x7d\x4a\xf8\xd2\xbb\xaf\x3b\x5e\xad\x79\x9d\x61\x7f\xa3\xe4\x5c\xc4\x62\xfe\x84\x3c\xef\x62\x5c\x84\xc5\x8f\xea\x06\x08\xc5\x40\x42\xee\x5a\xed\x23\x61\xbb\x61\xe0\xa1\xda\x48\x68\xcd\x9b\x20\x11\x8b\x29\xc2\xe0\x6d\xa2\xa1\xe5\x81\xe3\x95\x60\x96\x49\x89\x49\x1d\xa7\xee\xf0\xb7\x84\x34\x01\x21\x27\xac\x08\x8a\xef\xe4\x0d\x40\xc9\x50\x6a\xeb\x08\x90\x00\x13\xd3\xf2\x68\x88\x9b\x82\x92\x13\xd4\x06\x30\xa9\xc0\x7d\xe0\x04\x98\x0c\x63\xad\x2d\x03\xb4\xa4\x9e\x6b\xa3\xfb\xb0\x2e\x2e\x7a\xfb\x26\x70\x24\x72\x8a\x50\xf8\x47\xaa\xe3\xf0\xe0\xe7\xc3\xc8\xdb\x71\x45\x0b\x66\x1c\x2d\xcc\xdd\xe1\x2c\xd7\x62\x23\xac\xe9\x12\xc4\x19\x70\x90\x8d\x41\x21\x06\x2e\xd9\x23\x4d\x7c\xf6\x7a\xdd\xbd\x2d\x65\x7f\x82\x54\x3b\xbe\xe3\xa6\x1f\x71\x6c\x83\x43\x09\x37\xc7\x53\xf0\xcd\x85\x39\x1d\x1d\xd0\xaf\xf5\x83\xa1\x5b\x38\xcd\x47\x27\x1b\x71\x0c\xdc\xf5\x31\x50\x02\x36\x5e\xb9\x16\x86\xd7\x12\x75\xe2\x7a\xe9\x7f\xa7\x01\x73\x09\x07\x23\x97\x0f\xfd\xb6\x23\x21\xfa\xcd\xb8\xb4\xa9\x15\x89\x80\x37\xb8\x65\x2e\xc7\xa7\x42\xc9\x15\x7d\xc7\x99\x4b\x6e\x4e\xdf\x18\x70\x3a\x10\x67\x06\x2a\xf5\x01\x63\x32\x1a\x7d\x65\x8e\xc6\xe6\x68\x72\x35\xfe\xf2\x7c\x34\x3b\x1f\x7d\xf9\x9f\xd1\x9f\xcf\x47\x23\xe3\x0c\x8c\x37\x67\x67\x69\x22\x64\x9c\x9d\x95\xc2\x6c\x18\x5c\xbe\x3a\x7c\x97\xc8\x37\xb0\x36\xb7\x1e\x06\xf9\xaf\x19\x72\xe6\x06\xd8\x16\xd8\x20\x75\xde\xe6\x26\xc3\x61\x40\x49\x28\xa6\x9c\xd0\x5b\x86\x02\x03\x42\x7e\x2f\x78\x72\xeb\xda\x7c\x79\x3e\x1e\x8d\x5e\x97\x9c\x89\x39\x5f\x62\x64\x97\xbd\x97\x95\xbb\x31\x16\xbc\x11\x73\x13\xf3\xe1\xcb\xf2\x52\x14\x61\x6f\x38\x9c\x0c\x38\x62\xae\xe3\x5c\x5b\x34\x22\x1c\x46\x42\x92\xae\xe1\x6a\x0c\x43\xf8\x45\xd7\x91\x5a\x72\x63\x65\xe3\x2d\x65\x93\xee\x94\x4d\xb6\x94\x4d\xbb\x53\x36\xdd\x52\x36\x6b\xa6\x6c\x3e\x2c\xcb\x11\x21\xbc\x02\xf3\x16\xd4\xbe\xaf\xe0\x5b\xc8\x0d\x86\x13\xf7\x0b\x38\x11\x59\x5e\x08\xe7\x17\x30\x50\xdf\xca\x8e\x83\x33\x85\x19\x22\x36\x9c\xe2\x8f\xb1\xa0\x81\x24\x32\x9c\x28\x9f\x21\x0f\xce\xf4\xcb\xff\xc6\x88\x25\x57\xc5\xf7\x33\x2d\xaa\x85\x91\x65\xe1\x30\xd4\xc2\x5a\x05\x5b\xb2\xd3\x29\xd2\x3b\x32\x50\x6e\x0c\x4e\xa4\x63\x34\x6c\x14\x2e\x17\x14\x31\x5b\x06\xd3\x87\x87\x5c\xaf\xe4\x74\x96\x84\x1b\x0e\x58\x5e\xa5\x8e\x97\xbe\x59\x36\x28\xf5\x23\x77\xc3\xa5\xeb\xbf\x72\xb3\x51\x5f\x09\xb3\xd5\x1c\x76\xa5\x7e\x64\xa3\x4f\x84\x5d\x31\x31\x6b\x95\x46\x9f\x0d\x2a\x40\x24\xa1\x81\x87\x16\xd8\x03\xf9\xaf\x69\x0b\x9e\x32\xe3\xb2\xd5\x51\xbf\xc5\x1e\x47\xf9\xa1\xc3\xb0\x5d\x60\x15\x16\x39\x15\xf3\xa1\x18\x64\x65\x90\x65\x72\xe6\x3a\xe0\x75\x8c\x74\x62\x7c\x3d\xd4\x90\x79\xab\x6e\xa0\x76\x89\x43\x7b\x9c\xf3\xce\x43\x0d\xa0\x65\xe7\x81\x1d\x14\x79\xbc\x7b\xa8\xeb\xe2\x50\x2d\x45\xa9\x1c\x9d\x5a\x4c\xee\x8e\x23\x9e\x4d\xda\x8c\x67\x93\x63\x89\x67\x93\xee\x8d\x7f\xd2\x69\x3c\xeb\x04\xe9\x4e\xe2\xd9\x71\x42\xad\xc5\xb3\x4e\xa0\x6e\x3f\x9e\x1d\x27\xce\xba\xf3\x38\x9a\x78\x56\x04\xf5\xa7\x1d\xcf\x26\x47\x13\xcf\xa6\x6d\xc6\xb3\xe9\xb1\xc4\xb3\x69\xf7\xc6\x3f\xed\x34\x9e\x75\x82\x74\x27\xf1\xec\x38\xa1\xd6\xe2\x59\x27\x50\xb7\x1f\xcf\x8e\x13\x67\xdd\x79\x1c\x4d\x3c\x2b\x82\xfa\xd3\x8e\x67\xd3\xa3\x89\x67\xb3\x36\xe3\xd9\xec\x58\xe2\xd9\xac\x7b\xe3\x9f\x75\x1a\xcf\x3a\x41\xba\x93\x78\x76\x9c\x50\x6b\xf1\xac\x13\xa8\xdb\x8f\x67\xc7\x89\xb3\xee\x3c\x8e\x26\x9e\x15\x41\x7d\xfc\xf1\xac\xfc\x5b\xd0\xca\x72\xcb\xbd\x07\x9d\x0f\x65\xad\xc0\xc1\x62\x10\xcd\x46\x77\x97\x5f\xed\x15\xf2\x34\x95\x0b\x8f\x53\xb5\xf0\x16\x71\x5c\xa7\x68\x21\x27\xe4\x1d\xaf\x21\xa5\x1c\x81\x4a\xbf\x42\xaf\xff\xfa\x5c\x92\x41\xbe\x3e\x57\xb4\xa8\xf0\xfe\xbc\xda\xeb\xed\x5a\x4e\x25\x5f\xcb\x23\xdc\x8a\xec\xe5\xe0\xca\xf5\xcb\x54\xf4\xc0\x7a\xfd\x26\xe7\x77\xaa\x78\x84\xe4\x9d\xbc\x93\x28\x95\x13\xad\x0a\xcd\xd4\xcc\x53\x62\xc0\x49\x5c\x90\x9b\xd6\xa0\xc5\x97\x84\x65\x9d\xe8\xc5\xba\xe5\x95\x77\xe1\x5c\x4a\x39\x96\x36\x9c\x4a\xae\x7c\xb1\x77\x2c\xbd\x63\xe9\x1d\x4b\x51\xa7\x0f\x38\x96\x00\xef\x76\x2d\xb1\x75\xbd\x24\xe7\xa2\xd5\xcb\x1f\xee\x8c\x43\x99\x0f\xae\x7d\x91\xb5\x8a\x5d\x8c\xb8\x60\x2e\x29\x73\xff\x47\x09\x47\x1e\xc8\x63\x95\xfa\x7a\xd8\xe1\x86\xf4\x37\x26\xa7\x37\x37\xc2\xab\xac\x90\xe7\xda\x88\x53\x66\x80\x8f\xf9\x92\xda\x17\x46\x40\xf7\x2e\x18\xc9\xf5\x42\xab\x05\x96\x7a\x6e\x18\x8d\x82\x92\x8d\xa5\x00\x95\x99\xa7\x2b\x6e\x08\x67\xd4\x33\xe3\x93\x6a\xfd\xcd\x2c\x59\x7e\x33\xd3\x56\xdf\x88\x51\x5d\x18\x3e\xb5\xf1\x35\x1f\x57\xd0\x07\xf1\x33\x0a\xe5\x79\x96\xf4\x16\xae\xc6\xca\xf7\xe4\x7f\x30\x30\xfc\x31\x72\x19\xb6\x8d\xcb\xcf\xaa\xa6\xf1\xf3\xa1\xec\x7e\x85\x06\xdb\x6b\x8e\xbe\x4a\xc6\xfc\x55\xe1\x8a\xa3\x52\x52\x5d\x12\x44\x89\xbb\xb0\x96\xd8\xfa\xb0\xa0\x77\x29\x49\xfe\x08\xcd\xf0\xd6\xe5\xd6\xd2\x00\x82\x7c\x9c\x41\x29\x29\x95\x1e\xa4\x75\xd6\x71\xb1\xf2\x20\xbe\x72\x06\x06\x67\x51\xbc\x08\x40\xc8\xc6\x76\x6a\x47\x30\xac\x82\x95\xed\xae\xca\x5a\x74\xf9\x5b\x9f\x03\x2b\xab\xce\xd7\x06\x2b\x27\x3d\x2b\x71\x06\xa5\xc6\xca\xc9\x4e\x56\x4e\x7a\x56\x1e\x64\xe5\xb4\x19\x2b\xa7\x3d\x2b\x71\x06\xa5\xc6\xca\xe9\x4e\x56\x4e\x7b\x56\x1e\x64\xe5\xac\x19\x2b\x67\x3d\x2b\x71\x06\xa5\xc6\xca\xd9\x4e\x56\xce\x7a\x56\x1e\x62\x25\xf2\x69\xb4\x77\x59\x5b\xd1\x27\xcf\xcc\x58\x44\xcf\xce\x3c\xa4\x19\x43\x93\x13\xc5\x2c\x55\x57\x7b\xa6\x1e\x62\x6a\x40\x6f\x31\x6b\x44\x54\x25\xa1\xe7\x69\x0e\xd0\x8c\xa6\xf1\x71\x31\x4b\xe5\xc5\x9e\xa4\x07\x83\xbc\xeb\xe3\x46\x1c\x95\x02\x7a\x8a\xea\x70\x6a\xa1\x5e\x1e\xee\x08\xf6\xae\x8f\x7b\x7e\x1e\xe2\xa7\x8d\x78\x33\x7e\xda\xe9\x63\xec\x9e\x9f\x31\x9c\x19\x3f\xd5\xe1\x16\x3f\xc5\xe9\x9e\x9a\x7b\xa8\x29\x6c\xb7\xc1\x13\xce\xef\x09\xc7\x6c\xa5\x1e\x02\x03\xa1\x1c\xac\x78\x8b\x02\x55\x9a\xf6\x02\xe8\x4a\xe4\x86\x50\x09\x35\x13\x38\x25\x31\xd3\x03\x59\xd3\x21\x37\xe5\x18\xc4\xe7\x60\xbd\x36\x20\x40\x9c\x63\x46\x2e\x8c\xff\xfe\x6a\x7e\xfe\xfb\x37\xbf\x8e\xcc\xbf\xfe\xfe\xd9\x89\xd1\x53\xd2\x6f\xf2\x78\x33\x47\xc9\x9e\x8e\xd9\xe3\xcd\xf4\x60\x8b\x8e\x93\x9e\x8e\x87\xe8\x58\xfb\xb9\x66\x8e\x8e\x32\x95\xff\x42\x6d\xdd\x82\x88\xfd\x52\x42\x7a\x11\x29\xa7\x3a\x29\xa7\x05\xa4\x9c\xf6\xa4\x3c\x44\xca\xda\x8f\x35\x73\xa4\x44\x0e\xc7\x0c\x02\x86\xc3\x10\x16\xc8\xfa\x00\x8b\x88\x73\x4a\x5e\x28\x2f\x67\x3a\x2f\x67\x05\xbc\x9c\x3d\x19\x2f\x2b\x13\xd3\x23\xd7\x21\xf5\x5c\xdb\xb8\x7c\x54\x66\x97\x9b\xb8\x84\xe5\xd4\x71\x42\xcc\xcd\xaa\x0e\x76\xae\x58\x1a\xcf\x24\xc3\x21\xe6\xe9\x2f\x86\x05\x27\xb0\xe0\x44\x55\x3c\x27\x33\xa8\x6e\xc9\xca\x82\x7e\x56\x4d\x54\x59\x90\x12\xd6\xa4\x07\x61\xb4\xf0\xdd\xed\x2e\x24\xf5\xed\x49\x2f\x42\xb4\xc2\x5a\x27\xde\x89\xc3\x9a\x7d\x68\xdf\xb1\xcd\x87\x62\xc2\x6b\x95\x96\xe8\xdb\xcb\x95\xa8\x86\xfa\xb4\x77\xf1\x7a\x9b\xed\x18\x59\xbb\x6a\xad\xd6\x4e\x60\xcf\x60\x57\x29\xd8\xaa\x60\xb3\xd1\xbd\xac\x5f\x4b\x28\x52\x6d\x9d\x52\x85\x39\x80\xac\x28\x4c\x28\xcd\xea\xcf\x8c\xca\x9b\x3a\x69\xa2\xd4\x66\x52\x42\xde\xc1\xad\xa4\x2a\xd6\xaf\x95\x9e\x2c\x78\x26\x05\xf0\x2f\xd6\xb4\x93\xf1\xf8\xb6\x29\xa2\xd6\x44\xdf\x25\x37\xdb\x29\xb8\xa6\xcd\xef\x11\xfe\x5e\x04\x8d\xc6\xae\xe4\x2d\x56\xf5\x95\x6e\x92\xd4\x1d\x9d\x43\xa9\xeb\x06\xb2\x2a\x62\xf9\x73\x2b\x7b\xc2\x5f\xdd\x1b\xa8\x47\x8b\xf2\x81\xa2\x10\x33\xc0\x8c\x51\x56\x6b\xdd\x10\xb7\x73\xbb\x83\x26\x6b\x0d\x45\x86\x99\x97\x3e\xf8\x2e\xd6\x51\xab\xb7\x65\x2d\xb6\xa0\x7f\xd5\x74\xa5\x0d\x5b\x29\x20\xce\x30\x90\x19\x53\xf5\x22\xe2\x5a\x7d\x57\xb3\x4b\xb0\xa6\xde\xae\xbf\x34\x2c\x43\x84\x33\x4a\x6e\x0a\xa7\xbb\xb6\xd0\x74\x05\x6c\xab\x5d\x85\xec\xe7\xe1\x4f\x5e\xc4\x90\x07\xc6\xe7\xaf\x6d\x08\xb1\x45\x89\x6d\xe8\x07\xa1\xb1\xa5\xf9\x24\xb7\xef\xec\xe6\xd5\x06\xbd\x6a\x40\xe3\x3d\x03\xd3\xc7\xf5\x64\xc3\xaa\xb6\x08\x6f\xf3\x33\x1f\x2a\x6a\xd5\x66\x7b\x4d\xfd\xf5\x3c\x51\x75\x5d\x39\xff\x9d\xdb\xf6\x38\xf1\xe3\x40\x09\xf8\x98\x27\x55\x05\x5d\xa6\x5e\xcd\xa2\xcf\x8f\xe8\x03\xd6\x1e\xf4\xd5\x8e\x3c\x3e\xfa\xa0\x5e\x73\x75\x13\x7a\x36\xc4\x3f\x5d\xec\xc9\x77\x66\x57\x10\xa8\x97\xd2\xb7\x40\xc6\x46\xd3\xf9\x98\xbc\xfb\x01\x85\x5c\x3d\x70\x06\x6d\xc3\xfe\x9a\xe4\xf3\x50\xc8\x55\x21\xca\x35\x75\x9c\xeb\x6e\xb3\xa0\xbd\xca\x9e\x8e\x98\x2d\xe5\x37\xbb\x46\x57\x33\xdd\x79\x4c\x23\x38\x0e\xb2\x93\x16\xb9\x4e\x1e\x91\xea\x9b\xba\x3e\x29\xa6\x93\x9e\xe8\xa9\xfc\xc6\x44\x97\x4b\x17\xc1\x42\x41\x1b\x4c\x97\xc2\xae\x2d\x14\x3c\x06\xd5\x77\x29\xfb\x34\xb8\x5e\x30\xba\x9e\xec\x0d\xc8\xfe\x9e\x7a\x1c\xdd\x34\x4d\x9c\x57\x4a\x4a\x37\xac\xce\x09\x7f\xd2\xa4\x59\x41\xf6\xda\x86\xf7\x9b\x7f\x08\x26\xed\xa4\x24\xe3\x53\x25\xce\xc9\xaf\xb8\x55\xfd\x49\x7d\x02\xee\x81\x8f\xee\x5c\x3f\xf2\xc1\x42\xe4\x0d\x07\xa6\xbf\x34\x6c\xc6\xc7\x6b\x1f\xdd\x75\xca\xc9\x4c\xc1\x33\xe7\xa5\xec\x68\xc2\xcd\xac\x48\x01\x65\x0b\x5b\x5a\x71\xd1\xba\xb6\x92\x7f\xca\xa8\xf7\xca\x59\x87\xf6\x59\x46\xdb\x76\x71\x2d\xe5\x75\x6e\x1d\xba\x9a\x23\xb0\x91\xb8\xbb\x8f\x6a\x29\xb1\xce\xde\x5e\xea\xdb\xcb\xb7\x7e\x80\x59\xf3\x34\x06\xc5\x62\xba\xb1\x8a\xbc\xf4\xe7\x60\x0c\x83\x89\x03\xdf\x6e\x99\x43\xda\xcf\x67\x91\xcb\xa0\x06\x53\xfb\x14\x14\xec\x20\x9b\x49\x20\xe8\x2e\x9d\xd9\xd6\xf0\xfc\xe9\xa9\xa5\x34\x9d\x7a\xea\x9c\xbe\xde\x49\xb7\x6b\x21\xad\xdb\x47\x97\x69\xcd\x2e\x3d\xc7\x61\x2b\x8f\x96\xda\x14\x28\xed\xcd\xa6\xbe\xd9\xfc\x94\xad\xeb\xae\x6d\x21\xf2\x09\x71\x37\x46\xa1\x89\x7e\x0e\x76\x60\xc3\x2f\x5b\x56\xa0\xba\xf8\x2c\xb2\x99\xa0\xee\x64\x3e\x3a\xe3\x3a\xc8\x63\xd4\x7b\x8a\xce\x92\x98\x0d\xf1\xcf\x9a\x8d\x8f\xf4\x3c\x26\xd3\xd5\x7b\xe0\x16\xed\xa1\x5d\x6b\xe8\x32\x65\x29\x54\xf2\xec\x2d\xe3\xd1\x52\x95\x4d\x8d\x2f\xd7\x4a\xda\xaf\x66\xdf\x3f\xbe\x3d\xcb\x65\x76\x5c\x2a\x38\xbd\x71\x4a\x3b\x8c\xbf\xc6\xff\xcb\xba\xf3\xff\x00\x00\x00\xff\xff\xef\xc4\x74\xe9\xd0\x88\x00\x00"

func templatesViewsWidgetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsWidgetHtml,
		"templates/views/widget.html",
	)
}

func templatesViewsWidgetHtml() (*asset, error) {
	bytes, err := templatesViewsWidgetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/widget.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesWidgetMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x5b\x6c\x1c\x67\xf5\xff\xf5\x62\xef\x7a\x9d\x38\xf1\x25\xfd\xb7\x7f\xa0\x7c\xa5\x4d\xef\x1b\x5f\xa1\x65\x13\x27\xad\x93\x14\x7a\x71\x55\xa5\x6e\x8a\x04\x2a\x9d\xee\x8e\xed\x25\xbb\x33\xab\x99\x59\xa7\x46\x05\xf9\xd2\x34\xa9\x1c\xe2\xaa\x82\x12\x44\x20\x4a\x41\xf0\x80\x04\x1b\x37\x9b\x6c\x7c\x59\x3f\xf1\x46\xd1\xf9\xde\x78\x40\x2d\xbc\x70\x15\x2f\x48\x08\x54\x21\x84\xce\x9c\xcf\xeb\xbd\x25\x75\x1f\xca\x3c\xcc\xf9\xce\xe5\x3b\xdf\xb9\xfc\xbe\x33\xf3\x5e\xd7\xcd\xdf\x01\x80\x43\x00\x3e\x09\x60\xdf\x8d\x80\x05\xe0\x2b\x37\x23\x7c\x7e\xd7\x02\xb4\x02\xf8\x7d\x0b\xc0\xa2\x3f\x19\xfa\xb7\x16\xa0\x07\xc0\xdf\x5b\x80\x5b\x00\x44\x5a\x81\x28\x80\xdb\x5b\x81\xff\x07\x70\x4f\xab\xf8\x1b\x69\x05\xee\x05\xf0\xd5\x56\xe0\x13\x00\x4e\x19\xfe\xc7\x86\x7f\xb7\x15\xd8\x09\xe0\xcf\xad\xc0\xed\x00\x3e\x30\xf4\xb6\x88\xf8\x7f\x38\x02\x6c\x07\x30\x1a\x01\x76\x00\xf8\x72\x44\xce\x3f\x66\xe4\xb9\x08\x70\x13\x80\x6f\x46\x80\x76\x00\x73\x11\x20\x02\xe0\x8c\xd1\xbf\x15\x01\x3a\xf9\xbc\x08\xb0\x1b\xc0\x65\x43\x7f\x1b\x01\xee\x00\x70\x63\x54\xe2\xbe\x2b\x0a\xdc\x05\x20\x1e\x95\xb8\x8e\x44\x81\x4f\x03\x70\xa2\x62\x77\x26\x0a\x74\x00\x28\x18\xba\x1e\x15\xff\xbf\x8e\x02\x6d\xec\x2f\x2a\xe7\xff\x21\x0a\xb4\x70\x5d\xa2\x40\x17\x80\x7f\x19\xbe\xbd\x0d\xf8\x3f\x00\x9d\x6d\xc0\x6d\x00\xee\x6b\x13\xf9\xc1\x36\xc9\xe7\xf1\x36\x89\xfb\x69\x43\x8f\x1a\xfa\x82\xa1\xe3\x6d\xe2\xdf\x69\x93\xf3\xbe\xde\x06\xc4\x00\xbc\x6a\xf8\x45\xe3\xef\x7b\xc6\xfe\xbc\xa1\x3f\x35\xf4\x17\x86\x5e\x31\x76\xeb\x86\xff\xa5\x89\xe7\xdd\x36\xc9\xfb\x8f\x6d\xc0\x8d\x00\x6e\x8a\x89\x5d\x6b\x4c\xea\xbb\x2d\x26\xf2\x9d\x31\x89\xb7\x3b\x06\x1c\xb8\x01\xb8\x35\x26\x7e\xbe\xd4\x2e\xf2\x17\xdb\x85\xb7\xdb\x81\x41\x00\xd9\x76\xe0\x73\x00\x2e\xb4\x0b\x8e\x7e\xd3\x0e\x0c\x00\x78\xbf\x1d\x78\x08\x40\xd7\x36\xe0\x45\x00\x4f\x6c\x03\x0e\x00\xf8\xd9\x36\x60\x1c\xc0\x5f\xb7\x01\x87\xb9\x0f\xdb\x01\x05\xe0\xec\x76\x60\x2f\x80\xab\xdb\x81\x21\x00\xff\xd8\x0e\xdc\x09\xe0\xfe\x0e\xe9\xd3\xd3\x1d\xc2\x3b\x1d\xd2\xcf\x37\x3b\x04\x97\xdf\x37\xfc\x52\x87\xe0\x6c\xa5\x43\xfa\xf2\xab\x0e\xc1\xd9\xfb\x1d\x40\x1f\x80\xff\x74\x48\x1c\xbd\x3b\xe4\xfc\x37\x76\x00\x2f\x00\xf8\xe7\x0e\xe0\x53\xdc\x8f\x9d\xc0\x13\x00\x82\x9d\xc0\x33\x5c\xbf\x9d\xc0\x18\xd7\xa3\x53\x78\xbb\x13\x78\x94\xf1\xd5\x09\xdc\xc3\x7d\xef\x14\x9c\xa9\x2e\xc1\xcf\x63\x5d\x82\xe7\xc9\x2e\xe9\xdb\x37\xba\x44\x7f\xaa\x4b\xe2\xfa\x79\x17\x90\x60\xbf\x5d\x52\x87\x0f\x8c\x3c\xd1\x2d\xf1\x3e\xd9\x2d\xf8\x79\xc1\xd0\x29\x43\xcf\x18\xfa\x93\x6e\xa9\x43\xb9\x5b\xe2\x7d\xaf\x5b\xfc\xff\xdb\xc8\x3f\xd3\x23\x7e\x46\x7a\x04\x47\xcf\x19\x6a\x19\x9a\x35\x74\xba\x47\xce\x3d\xd1\x23\xf1\xbe\xd5\x03\xec\xe7\xbe\xf4\x00\x07\x01\xfc\xa5\x47\x70\xb0\x67\x97\xd8\xf5\xef\x12\xbb\x91\x5d\xe2\xff\x79\x23\xff\xda\x2e\xe0\x06\xc6\x0d\x36\x1f\xae\x37\xdf\xb1\xdb\x0c\xdf\x52\xa5\xbb\xd5\xd0\x83\x55\x32\x8e\x9f\x6b\xda\x0b\xc9\xa1\x1f\x82\x1d\xae\x1f\x63\xe9\x61\x63\xd7\x61\x28\xf7\x91\x73\xe7\xfa\xdd\xcf\x31\x56\xf9\x62\xec\x30\x1e\x19\xe3\xf7\x19\xd9\x67\x01\x3c\x08\x99\x2b\xbb\x20\x79\xf0\xc3\x78\xbf\xb9\x6a\x6f\xa7\x99\x8d\x23\x10\x2c\xf1\xac\x7c\x00\x82\x73\x7e\x38\xef\x3b\xcd\x7a\x98\x6b\x0d\xe9\xf9\xdd\x90\x59\xf7\x90\xd1\x71\xdd\x6e\xa9\xf2\xcb\xf3\xe3\x11\xc8\xbc\xe4\x1a\x73\x1f\x19\xeb\xdd\x3c\x87\x21\xf7\x3a\x8e\xda\x87\xef\xd2\xe7\x21\x77\xa0\xbd\x4a\x1e\x62\x05\x82\xbd\x9a\x67\xf7\x9e\x81\x71\xf5\x28\x76\xa7\xd4\x51\x7e\x3d\xcf\x2f\xdf\x4e\xba\x4e\x6a\x73\xe5\xe3\x81\x4d\xe9\x03\x55\xe2\x47\xb3\x39\xdb\xb3\x26\xec\xca\x42\x65\xad\x97\xd3\xd9\x7c\x56\x25\x2d\x47\x79\xb6\x6f\x07\x4d\x55\xf7\x04\x46\x79\x70\xd2\x72\x26\x6c\x95\x4a\xfb\xb9\x8c\x35\xad\xb2\x6e\xca\x56\xe3\x56\x3a\x63\xa7\xd4\xf1\x74\x30\xa9\x6c\xcf\x73\x3d\xb5\xdb\x6f\x6a\xe8\xe7\x93\x49\xdb\x6f\xd0\x05\xe9\xec\xd6\x9c\x84\x86\x15\x27\x79\xcf\xb3\x9d\x40\x59\x1b\x29\x6d\x08\x52\x56\x60\x2b\xcb\x49\x89\xb9\xeb\xa8\xac\x1d\xd8\x5e\xad\x7a\x43\x95\xb2\xa7\xd2\x49\x3b\x3c\xca\xa8\xb3\xb6\xe5\xe7\x3d\x3b\x6b\x3b\xc1\xa6\x30\xe7\x1e\xaf\xf2\x30\xe5\x66\x02\x3e\xf0\x90\x15\xc8\xab\x72\x1a\x0e\x59\xd3\x38\x64\xfb\x49\x2f\x9d\x0b\xd2\xae\x83\x43\x12\x39\x0e\x4f\xb1\x3f\xe5\x3a\xbd\xee\xf8\x78\x85\xcb\xd9\x4e\x6f\x32\xe3\xfa\x36\xbe\x60\x07\x5b\xa8\x69\xb5\xd5\xb5\x8b\xc6\x56\x93\x6e\x26\x9d\xb2\xa6\xfd\xe6\x16\x5f\x34\x5a\x3c\xee\x04\xb6\x37\x65\x65\xd4\xb8\xeb\x29\x6b\x3c\xb0\x3d\x95\xf3\x6c\xdf\x57\x2f\x59\xc9\x63\xea\xa5\x7c\x10\xb8\x4e\xad\x51\xd2\xd4\x20\xb0\xbc\xf4\xf8\x78\xad\xce\x71\x83\xeb\xea\xc3\x2a\x3e\x28\x91\x73\xc5\xb8\x13\x78\xca\xf2\x03\x15\x16\x41\x25\xad\x9c\xb0\xa1\xa1\xe2\x4a\x55\xb3\x0e\x46\xad\x63\xb6\xec\x1a\xdd\xec\x12\x46\x5d\x27\x98\x94\x77\x66\x5a\xf9\x81\x15\xa4\xfd\x20\x9d\xf4\xf1\x4c\xd8\xb5\xf0\xdd\x04\xe6\x0d\xf2\x0a\xc6\x8f\x84\xef\x67\xad\x29\x1b\xcf\x4e\xba\xc7\xd5\x58\xbf\xa1\x03\x86\x0e\x1a\x3a\x24\xd4\xca\xba\x79\x27\x90\x75\x18\x5d\xb8\x12\xcc\x84\xcb\x10\x1a\xcf\x06\xac\x1a\xeb\x57\xbd\xea\xf9\x49\x8c\x0d\x18\x3a\x68\xe8\x90\xd0\xa3\x56\x26\x6f\xe3\xa8\x41\x98\xa1\x4d\xa2\x6f\xa2\xa9\xc4\x6f\x05\x10\x54\x71\x05\x5d\x07\x8c\x33\x1c\xb1\x73\xae\x17\xc4\x47\xfd\x89\x74\x2a\x3e\x92\x9f\xf0\xe3\x63\x6e\x82\xf1\xff\xc8\xb1\xf4\xa4\x95\x75\xf7\x78\xf9\x18\x57\x3b\x3e\xe6\x59\x8e\x9f\xb1\x02\xd7\x4b\xa8\x27\x43\x95\x1a\xcd\x7b\x56\xd6\x4d\xb9\x6a\x5f\x8d\xfd\xfe\xd8\x53\x96\x33\x91\xb7\x26\xec\xf8\x98\x6d\x65\x13\xaa\xc2\x27\xd4\x91\xbc\xef\xa7\x2d\x27\x36\xfa\xf8\xe8\xe1\xf8\x51\xdb\xf3\xd3\xae\x93\x50\xfd\x7b\xfa\x62\x07\x5d\x27\xb0\x9d\x20\x3e\x36\x9d\xb3\x13\x2a\xb0\x5f\x0e\x7a\x73\x19\x2b\xed\xec\x55\xc9\x49\xcb\xf3\xed\x60\xf8\xb9\xb1\xc7\xe2\x0f\x6f\xda\x71\x3c\xe3\xb6\x17\x3f\xec\x24\xdd\x54\xda\x99\x48\xa8\xd8\x33\x99\xbc\x67\x65\xe2\x8f\xb9\x5e\xd6\x4f\x28\x27\x17\xb2\xfe\xf0\xe0\x5e\x25\xcb\x61\x67\x77\x7f\xdf\xf0\x70\xbf\xba\xfb\x6e\xc5\xcb\xbe\x3b\x86\xfb\xfb\xd5\x01\xd5\xa7\x12\x21\xbf\x7f\x78\x60\x43\xb5\x6f\x78\x88\x97\xf7\x86\x66\xfb\xfa\xfb\xd4\x2b\xaf\xc8\x96\xfd\xc3\x03\x7d\xf7\xa9\x03\xaa\x5f\x25\xd4\xc0\x5e\x19\xbb\xf4\x06\xcf\xd8\x11\x7e\xd1\x9b\x7a\x8e\xa9\x9e\xa5\x22\x2d\xeb\x79\x5a\xa3\x4b\x54\xa8\x97\xe8\x85\x7a\x49\x38\x8e\xeb\x36\xd5\x8b\xf4\x42\x83\x08\xf4\x36\x95\x69\x19\x74\x8e\x0a\xb4\xac\x67\xa9\x44\xab\x7a\x9e\x56\x95\x9e\x63\x39\x15\xd8\xfa\xa2\x9e\xa1\x82\x9e\xd5\x0b\xb4\x44\x05\x2a\xd2\xaa\x5e\xa0\xab\xd7\xd9\x42\x6b\x54\xbc\xce\xbe\xb3\x74\x85\x56\xa9\xc8\x56\xb4\x46\x25\xb6\x9d\xa1\x22\x5d\x66\x47\x54\xa6\x25\x45\xa5\x30\x81\x12\x3b\xd3\xaf\x51\x89\x4a\x8a\xae\x50\x81\x96\xa8\xa8\x67\xf4\x29\x2a\xd1\x0a\x95\xf5\xac\x3e\xad\xf4\xac\xa2\x72\x28\xb9\x48\xcb\x54\xa6\xab\x3c\x86\xe8\x47\x7a\x96\xd6\xa9\xa8\x4f\xd1\x1a\x95\xd9\x5b\xd5\x79\x7a\xa1\xea\x34\xbd\xd0\xe4\xac\x66\x01\xb2\x95\x9e\xe3\xe3\xc3\x54\x56\xfe\x17\x61\xd6\x9f\x79\x8d\x60\xdf\x96\x66\xea\xd7\xa9\xa0\x17\x55\xd8\x8e\x15\x6e\x9b\x69\x46\xb5\x41\x98\xc9\x25\x2a\xe8\x39\x6e\x52\x49\xd1\x52\x58\x8a\x55\xbd\xc8\x2d\xe3\x56\xeb\x93\x54\xd4\x73\xfa\x64\x78\x44\xb1\xde\xf9\xe6\xde\xd0\x7a\x5e\xcf\xea\x39\x3d\xc3\xf9\xf0\x8a\xf3\x0e\xf3\xaa\x3b\x70\x5d\x02\xe1\xd2\x70\x3a\xb4\xd2\x18\x35\xf7\x5d\xbf\xce\x65\x08\x5d\x9e\xae\xd6\x17\xd9\xc7\x1a\x15\x68\x5d\xcf\xe8\x45\xba\xbc\xd1\x13\xd0\xb7\x25\x9a\xca\xa2\x36\x25\x16\x73\x21\x4f\x83\x7e\x48\xeb\x54\xd2\xb3\x54\xd8\xd8\x79\xb6\xb6\x8c\x6c\x7c\x81\xca\x74\x51\x2f\xe8\x39\x66\x15\x2d\xd1\x32\xad\xf4\xd2\x92\x5e\xe0\x45\x83\xba\xac\xe7\x68\x59\xcf\x88\x80\x8a\xbd\x61\xdf\xab\x04\xa0\xf3\x54\xa6\x15\x3d\xcf\x05\xfd\x78\x40\xde\x78\xc0\xc7\x02\xd2\x26\xc7\xac\xf3\xb5\xa6\x2b\x74\x89\x05\xfa\x24\x83\x55\x9f\x50\x21\x5b\xa4\xab\x1f\xd1\x7d\xa3\x2f\x01\xe9\x9a\x5c\xc4\x9a\x84\x9a\x26\xb3\xce\xfe\x69\x65\x03\x25\x97\x43\x2c\x84\x4d\x5a\x66\x40\xd1\x3a\x2d\x6f\xd1\x95\xfe\x16\x67\xa0\x67\xe8\x1d\x61\xe7\xaa\x30\xf8\x0e\x95\x59\x50\xd0\x33\x54\xd2\xaf\x32\xe8\xb6\x12\x5b\x38\x07\x37\xdd\x94\xf4\x89\x6a\x27\xd2\x1e\xbe\x75\xf3\xb4\xca\xc3\x68\x6b\x4e\x6b\xee\x0a\x95\x1e\xac\x60\x5e\x3a\x14\xde\x82\xf0\xa2\xb2\xc3\xf3\x1b\xd5\x31\xed\x29\xaa\x7a\xa8\x2a\xc3\x9c\xe2\x3a\xd5\x8f\x80\x42\x53\x0f\x21\xfa\x69\x45\x9f\xd9\x44\x45\x53\xbb\xa5\x46\xab\xca\x55\x5d\x0f\x07\x07\xcf\xbc\x25\x2a\xd3\x25\x33\x40\xe4\xbc\xda\x71\xc1\x37\xf8\x1c\x15\xf5\xac\x5e\xd4\xaf\x6d\x2e\x4f\x72\xbb\xc3\x89\x17\x96\x94\x7b\x1e\xd6\x43\xa2\x3e\x57\x3f\x50\xea\x3f\x56\xf5\x65\xfc\x08\xdf\xb9\x86\xad\x1f\xf2\xbd\xbb\x10\x2a\xb8\x3a\x25\x89\xe5\x02\x95\xf5\x89\x10\xf8\x6b\x1b\xa2\x4a\xd6\xb2\x99\x85\xfc\x7f\xd8\x5c\x3e\x70\x0d\xf9\xe0\x35\xe4\x43\xcd\xe5\x15\xe0\xcd\x37\xd7\x1b\x14\x5d\x4b\xdb\x30\xb3\x9b\x5a\x55\xcd\xe3\x0b\xa6\x60\x65\xbd\x68\xe0\x10\xfe\xb5\xf2\x1f\x8f\x3e\x29\x7f\xae\x1b\xeb\xc1\xaa\xf5\xd0\xe6\x9a\xbe\x1b\x36\xbd\x0a\x4f\x3f\x68\xf6\x61\x68\x68\x58\xc3\xe7\x43\xbe\x94\x5b\xed\x77\xb3\xed\x1f\xd2\xf3\x25\x34\x7e\x12\xcc\xc7\xa4\xf6\x42\x34\xb9\x23\x75\x1f\x17\xfc\x37\x00\x00\xff\xff\x40\xe9\x9e\xde\x7b\x15\x00\x00"

func localesRuLc_messagesWidgetMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesWidgetMo,
		"locales/ru/LC_MESSAGES/widget.mo",
	)
}

func localesRuLc_messagesWidgetMo() (*asset, error) {
	bytes, err := localesRuLc_messagesWidgetMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/widget.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/widget.html":      templatesViewsWidgetHtml,
	"locales/ru/LC_MESSAGES/widget.mo": localesRuLc_messagesWidgetMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"widget.mo": &bintree{localesRuLc_messagesWidgetMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"widget.html": &bintree{templatesViewsWidgetHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
