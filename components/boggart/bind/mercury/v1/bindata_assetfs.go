// Code generated by go-bindata.
// sources:
// templates/views/widget.html
// locales/ru/LC_MESSAGES/widget.mo
// DO NOT EDIT!

package v1

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"

	"github.com/elazarl/go-bindata-assetfs"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsWidgetHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x79\x6f\xe4\xb6\x15\xff\x7f\x3f\xc5\x83\xe0\xed\xda\x49\x34\x77\xd2\xd6\x19\x3b\x08\xea\x14\x0d\x90\x14\x8b\x5d\x77\x83\x36\x49\x07\x1c\x89\xf2\x28\x2b\x91\x5a\x8a\x1a\xdb\x35\xfc\xdd\x0b\x92\x3a\xa8\x39\x75\xda\x33\x6b\x0d\x90\xcd\xe8\xe0\x7b\xe4\x8f\xbf\x77\x8c\xf4\x48\x3f\x3c\x80\x8d\x1d\x97\x60\x30\x2c\x4a\x38\x26\xdc\x80\xc7\xc7\x57\xd3\xd0\x62\x6e\xc0\x81\xdf\x07\xf8\xc2\x40\x41\xe0\xb9\x16\xe2\x2e\x25\xfd\x3f\xd0\x12\xa9\x8b\xc6\xe5\x2b\x00\x00\x27\x22\x96\xb8\x02\x4b\xe4\x45\xf8\xef\x94\xf9\x88\x9f\x92\x33\x78\x90\x57\xc5\x87\x61\x1e\x31\x02\x04\xdf\xc2\x8f\x84\x7b\xbd\x7f\x46\xfe\x1c\xb3\xf8\xce\xb3\x9e\x93\x34\xf9\x56\xb6\x78\x7c\x35\xed\x2b\x05\x97\xaf\xa6\xb6\xbb\x04\xcb\x43\x61\x78\x61\x30\x7a\x1b\x6b\xd4\xcf\x5a\xd4\x33\x7d\xdb\x1c\x8e\x40\x7c\x0b\xfd\xe4\xdb\x5d\x68\x0e\x47\xf1\xfd\xab\x6d\xee\x66\x01\x22\xd8\xd3\xae\xae\xdf\x91\x80\x91\xbf\x27\xbd\x8f\x51\x0f\x5f\x18\x1c\xcd\x37\x49\x4a\xef\x8c\xbc\x44\x20\x41\x4b\x20\x68\x69\x72\x34\x0f\x61\x8e\xd8\x4c\x7c\x31\x32\x31\x9e\x1b\x6e\xd2\x95\x4a\xf2\xdc\xf8\xde\x80\xe1\x10\x13\x2e\xe7\xc2\x78\x78\x00\xd7\x01\xfc\x09\x7a\x48\x4d\x81\x21\x26\x2f\xd1\x29\xce\x2d\xb1\xb8\x09\x13\x1b\x1e\x1f\x2f\xa7\x08\x16\x0c\x3b\x17\x5b\xda\x65\x33\x7b\xbe\xa4\xae\x7d\x3a\x38\xfb\x56\xb4\xf5\x42\x0c\x8f\x8f\x0f\x0f\xd0\x7b\x87\x3f\x45\x38\xe4\xbd\x7f\xbd\xfb\xa9\xf7\x16\xf1\x85\x3a\xad\x84\x1b\x97\x42\xe8\xf0\x2f\x04\x8c\xbf\x45\x8c\x61\xc2\xc1\xc7\x28\x8c\x18\xf6\x31\xe1\xa1\x01\x3d\x78\x7c\x9c\xf6\xd1\xe5\xb4\xef\xb9\x0d\x0c\xd4\xa7\x84\x2f\xbc\xfb\xaa\xe3\xd5\x9a\x57\x19\xf6\x77\x4a\xce\x45\x2c\xe6\x4f\xc8\xf3\x2e\x86\x9b\xb0\xf8\x59\xdd\x00\xa1\x18\x48\xc8\x5d\xab\x79\x24\x6c\x37\x0c\x3c\x54\x19\x09\xad\x79\x1d\x24\x62\x31\x9b\x30\xb8\x4a\x34\x34\x3c\x70\xbc\x14\xcc\x32\x29\x31\xa9\xe3\x54\x1d\xfe\x9a\x90\x3a\x20\xe4\x84\x6d\x82\xe2\x07\x79\x03\x50\xd2\x97\xda\x5a\x02\x24\xc0\xc4\xb4\x3c\x1a\xe2\xba\xa0\xe4\x04\x35\x01\x4c\x2a\x70\x17\x38\x01\x26\xfd\x58\x6b\xc3\x00\x2d\xa8\xe7\xda\xe8\x3e\xac\x8a\x8b\xde\xbe\x0e\x1c\x89\x9c\x4d\x28\xfc\x23\xd5\xb1\x7f\xf0\xd3\x7e\xe4\x6d\xb9\xa2\x05\x33\x8e\xe6\xe6\xf6\x70\x96\x6b\xb1\x12\xd6\x74\x09\xe2\x0c\x38\xc8\xc6\xa0\x10\x03\x97\xec\x90\x26\x3e\x3b\xbd\xee\xce\x96\xb2\x3f\x41\xaa\x1d\xdf\x71\xd3\x8f\x38\xb6\xc1\xa1\x84\x9b\xc3\x31\xf8\xe6\xdc\x1c\x0f\xf6\xe8\xd7\xfa\xc1\xd0\x2d\x9c\xe6\xa3\x93\x8d\x38\x06\xee\xfa\x18\x28\x01\x1b\x2f\x5d\x0b\xc3\x6b\x89\x3a\x71\xbd\xf4\xbf\xd3\x80\xb9\x84\x83\x91\xcb\x87\x7e\xdb\x92\x10\xfd\x66\x5c\xda\xd4\x8a\x44\xc0\xeb\xdd\x32\x97\xe3\x53\xa1\xe4\x9a\xbe\xe7\xcc\x25\x37\xa7\x6f\x0c\x38\xed\x89\x33\x3d\x95\xfa\x80\x31\x1a\x0c\xbe\x31\x07\x43\x73\x30\xba\x1e\x7e\x7d\x3e\x98\x9c\x0f\xbe\xfe\xcf\xe0\xcf\xe7\x83\x81\x71\x06\xc6\x9b\xb3\xb3\x34\x11\x32\xce\xce\x0a\x61\xd6\x0f\x2e\x5f\xed\xbf\x4b\xe4\x1b\x58\x9b\x5b\x0f\x83\xfc\xd7\x0c\x39\x73\x03\x6c\x0b\x6c\x90\x3a\x6f\x73\x93\xe1\x30\xa0\x24\x14\x53\x4e\xe8\x2d\x43\x81\x01\x21\xbf\x17\x3c\xb9\x75\x6d\xbe\x38\x1f\x0e\x06\xaf\x0b\xce\xc4\x94\x2f\x30\xb2\x8b\xde\xcb\x8a\xdd\x18\x0b\x5e\x89\xb9\x89\xf9\xf0\x45\x71\x29\x8a\xb0\x37\x1c\x4e\x7a\x1c\x31\xd7\x71\x66\x16\x8d\x08\x87\x81\x90\xa4\x6b\xb8\x1e\x42\x1f\x7e\xd1\x75\xa4\x96\x5c\x5b\xd9\x70\x4d\xd9\xa8\x3d\x65\xa3\x35\x65\xe3\xf6\x94\x8d\xd7\x94\x4d\xea\x29\x9b\xf6\x8b\x72\x44\x08\x2f\xc1\xbc\x39\xb5\xef\x4b\xf8\x16\x72\x83\xe1\xc4\xfd\x0a\x4e\x44\x96\x17\xc2\xf9\x05\xf4\xd4\xb7\xa2\xe3\xe0\x4c\x61\x86\x88\x0d\xa7\xf8\x53\x2c\xa8\x27\x89\x0c\x27\xca\x67\xc8\x83\x33\xfd\xf2\xbf\x31\x62\xc9\x55\xf1\xfd\x4c\x8b\x6a\x61\x64\x59\x38\x0c\xb5\xb0\x56\xc2\x96\xec\x74\x8a\xf4\x8e\xf4\x94\x1b\x83\x13\xe9\x18\x0d\x1b\x85\x8b\x39\x45\xcc\x96\xc1\xf4\xe1\x21\xd7\x2b\x39\x9d\x05\xe1\x86\x3d\x96\x57\xaa\xe3\x85\x6f\x96\x0d\x0a\xfd\xc8\x5d\x71\xe9\xfa\xaf\xdc\x6c\xd4\x1f\xc4\xd9\xb0\x77\x2d\x3b\x2f\x4c\x58\x73\xde\xa5\xfa\x94\x21\xa1\x04\x5f\x0f\xaf\x99\x98\xc1\x52\x48\x64\x03\x0c\x10\x49\x28\xe1\xa1\x39\xf6\x40\xfe\x6b\xda\x82\xb3\xcc\xb8\x6c\x10\x81\xeb\xe1\x15\xf6\x38\xca\x0f\x1d\xfa\x4d\x82\x9c\x60\x91\x53\x31\xed\x8b\x41\x96\x06\x59\x26\x6a\xae\x03\x5e\xcb\x48\x27\x86\xd8\x41\x0d\x99\xe7\x6a\x07\x6a\x97\x38\xb4\xc3\x39\xef\x3c\xd4\x00\x1a\x76\x1e\xd8\x41\x91\xc7\xdb\x87\xba\x2a\x0e\xe5\xd2\x95\xd2\x91\xaa\xc1\x44\xef\xf8\x62\xdb\xa8\xc9\xd8\x36\x3a\x96\xd8\x36\x6a\xdf\x11\x8c\x5a\x8d\x6d\xad\x20\xdd\x4a\x6c\x3b\x4e\xa8\xb5\xd8\xd6\x0a\xd4\xcd\xc7\xb6\xe3\xc4\x59\x77\x1e\x47\x13\xdb\x36\x41\xfd\x79\xc7\xb6\xd1\x51\xc6\xb6\x71\x93\xb1\x6d\x7c\x2c\xb1\x6d\xdc\xbe\x23\x18\xb7\x1a\xdb\x5a\x41\xba\x95\xd8\x76\x9c\x50\x6b\xb1\xad\x15\xa8\x9b\x8f\x6d\xc7\x89\xb3\xee\x3c\x8e\x26\xb6\x6d\x82\xfa\xf3\x8e\x6d\xe3\xa3\x8c\x6d\x93\x26\x63\xdb\xe4\x58\x62\xdb\xa4\x7d\x47\x30\x69\x35\xb6\xb5\x82\x74\x2b\xb1\xed\x38\xa1\xd6\x62\x5b\x2b\x50\x37\x1f\xdb\x8e\x13\x67\xdd\x79\x1c\x4d\x6c\xdb\x04\xf5\xf1\xc7\xb6\xe2\x6f\x4d\x4b\xcb\x2d\xf6\xde\x74\xda\x97\xb5\x05\x7b\x8b\x47\x34\x1b\xdd\x5e\xae\xb5\x53\xc8\xf3\x54\x3a\x3c\x4d\x95\xc3\x15\xe2\xb8\x4a\x91\x43\x4e\xc8\x7b\x5e\x41\x4a\x31\x02\x15\x7e\xe5\x5e\xfd\x75\xbb\x24\x83\x7c\xdd\xae\x68\x51\xe2\x7d\x7b\xb9\xd7\xe1\x95\x9c\x4a\xbe\xf6\x47\xb8\x15\xd9\xcb\xde\xb5\xeb\x17\xa9\x00\x82\xc7\xc7\x37\x39\xbf\x53\xc6\x23\x24\xef\xf0\x9d\x44\xa9\x9c\x68\x55\x98\xa6\x66\x9e\x12\x03\x4e\xe2\x02\xde\xb4\x66\x2d\xbe\x24\x2c\xeb\x44\x2f\xee\x2d\xae\xbc\x0d\xe7\x52\xc8\xb1\x34\xe1\x54\x72\xe5\x8e\x9d\x63\xe9\x1c\x4b\xe7\x58\x36\x75\x7a\x8f\x63\x09\xf0\x76\xd7\x12\x5b\xd7\x4b\x72\x2e\x5a\x7d\xfd\xfe\xce\x38\x94\xf9\xe0\xda\x17\x59\xab\xd8\xc5\x88\x0b\xe6\x82\x32\xf7\x7f\x94\x70\xe4\x81\x3c\x56\xa9\xaf\x87\x1d\x6e\x48\x7f\x63\x72\x7a\x73\x23\xbc\xca\x12\x79\xae\x8d\x38\x65\x06\xf8\x98\x2f\xa8\x7d\x61\x04\x74\xe7\x02\x93\x5c\x2f\xb4\xda\x61\xa9\xe7\x86\xd1\x28\x28\xd8\x58\x0a\x50\x99\x79\xba\x42\x87\x70\x46\x3d\x33\x3e\xa9\xd6\xeb\x4c\x92\xe5\x3a\x13\x6d\xb5\x8e\x18\xd5\x85\xe1\x53\x1b\xcf\xf8\xb0\x84\x3e\x88\x9f\x51\x28\xcf\xb3\xa0\xb7\x70\x3d\x54\xbe\x27\xff\x83\x81\xe1\x4f\x91\xcb\xb0\x6d\x5c\x7e\x51\x36\x8d\x9f\xf6\x65\xf7\x4b\x34\x58\x5f\xa3\xf4\x4d\x32\xe6\x6f\x36\xae\x50\x2a\x24\xd5\x25\x41\x94\xb8\x0b\x6b\x81\xad\x8f\x73\x7a\x97\x92\xe4\x8f\xd0\x0c\x6f\x5d\x6e\x2d\x0c\x20\xc8\xc7\x19\x94\x92\x52\xe9\x41\x5a\x97\x1d\x17\x37\xf7\xc4\x95\xde\x8f\x61\x5c\xbc\x76\x06\x06\x67\x51\xbc\x76\x40\xa8\xc0\x76\x6a\x4e\xd0\x2f\x03\x99\xed\x2e\x8b\x1a\x76\xf1\x5b\x0f\x81\x9c\x65\xa7\x6d\x85\x9c\xa3\x8e\x9c\x38\x83\x52\x23\xe7\x68\x1f\x39\x47\x1d\x39\xf7\x92\x73\x5c\x8f\x9c\xe3\x8e\x9c\x38\x83\x52\x23\xe7\x78\x1f\x39\xc7\x1d\x39\xf7\x92\x73\x52\x8f\x9c\x93\x8e\x9c\x38\x83\x52\x23\xe7\x64\x1f\x39\x27\x1d\x39\xf7\x91\x13\xf9\x34\xda\xb9\x44\x6e\xd3\x27\x4f\xd0\x58\x44\x47\xd2\x3c\xa4\x19\x51\x93\x13\xdb\xc8\xfa\xbd\xbc\xde\x71\x75\x1f\x57\x03\x7a\x8b\x59\x2d\xaa\x2a\x09\x1d\x53\x73\x80\x66\x44\x8d\x8f\xb7\xf1\xf4\xad\xb8\xdc\xd1\x74\x6f\xbc\x77\x7d\x5c\x8b\xa5\x52\x40\x47\x52\x1d\x4e\x2d\xea\xcb\xc3\xad\x71\xdf\xf5\x71\xc7\xd0\x7d\x0c\xb5\x11\xaf\xc7\x50\x3b\x7d\xd0\xdd\x31\x34\x86\x33\x63\xa8\x3a\xdc\xc6\xd0\x2b\xc4\x3b\x86\xee\x62\xa8\x30\xf0\x1a\x8f\x42\x7f\x24\x1c\xb3\xa5\x7a\x5a\x0c\x84\x72\xb0\xe2\xbd\x0f\x54\x3d\xdb\x0b\x60\x2d\x91\x3b\x4d\x25\x0c\x4d\xe0\x94\xfc\x4c\x0f\x64\xf1\x87\xdc\xed\xa3\x27\xce\x69\x6b\x78\x0d\x08\x10\xe7\x98\x91\x0b\xe3\xbf\xbf\x9a\x5f\xfe\xfe\xdd\xaf\x03\xf3\xaf\xbf\x7f\x71\x62\x74\xbc\xf4\xeb\x3c\x05\xcd\xf1\xb2\xe3\x64\xf6\x14\x34\x3d\xd8\xcc\xc9\x51\xc7\xc9\x7d\x9c\xac\xfc\xf0\x33\xc7\x49\x99\xfc\x7f\xa5\x76\x87\x41\xc4\x7e\x29\x31\x7e\x13\x33\xc7\x3a\x33\xc7\xdb\x98\x39\xee\x98\xb9\x8f\x99\x95\x9f\x7c\xe6\x98\x89\x1c\x8e\x19\x04\x0c\x87\x21\xcc\x91\xf5\x11\xe6\x11\xe7\x94\xbc\x50\x72\x4e\x74\x72\x4e\xb6\x91\x73\xf2\x6c\xe4\x2c\xcd\x4e\x8f\xcc\x42\xea\xb9\xb6\x71\xf9\xa4\xf4\x2e\x36\x7b\x09\xd5\xa9\xe3\x84\x98\x9b\x65\x5d\xed\x54\x51\x35\x9e\x4e\x86\x43\xcc\xd3\x1f\x13\x73\x4e\x60\xce\x89\x2a\x97\x4e\xa6\x51\xdd\x92\xd5\x14\xbd\x53\x4d\x54\x4d\x91\x12\x56\xa7\x07\x61\x34\xf7\xdd\xf5\x2e\x24\xc5\xf1\x49\x2f\x42\xb4\xc4\x5a\x27\xde\x8b\xc3\x8a\x7d\x68\xde\xbb\x4d\xfb\x62\xc2\x2b\xd5\xa5\xe8\x7b\xd9\x15\x28\xa5\xfa\xbc\xb7\x0c\xbb\xca\xb6\xa7\xac\x5c\xf2\x56\x69\xdb\xb1\x03\xd8\xc2\x0a\xd6\xca\xdf\x6c\x74\x2f\x8b\xdf\x12\x8a\x94\x5b\xf0\x54\x62\x0e\x20\xab\x28\x13\x4a\xb3\xe2\x35\xa3\xf4\x0e\x52\x9a\x28\xb5\x73\x95\x90\xb7\x77\xdf\xaa\x92\xc5\x6f\x85\x27\x0b\x0e\xa4\x7a\xfe\xc5\x9a\x76\x32\x1e\xdf\x36\x45\xd4\x1a\xe9\x5b\xf2\x66\xdb\x12\x57\xb4\xf9\x1d\xc2\xe5\x9a\xbb\xda\xae\xe4\x0a\xab\xe2\x4c\x37\xc9\xec\x8e\xce\xa1\x54\x75\x03\x59\x09\xb2\xfc\xe1\x95\x3d\xfe\x2f\xef\x0d\xd4\x53\x47\xb9\x3d\x9e\x4c\x06\x31\x63\x94\x55\x5a\x74\xc4\xed\xdc\x56\xa4\xc9\x42\x45\x91\x66\xe6\xa5\xf7\x7e\x88\x75\x54\xea\x6d\x51\x8b\xdd\xd0\xbf\x72\xba\xd2\x86\x8d\x54\x1f\x67\x18\xc8\x8c\xa9\x7c\x05\x72\xa5\xbe\xab\xd9\x25\x58\x53\x6f\x57\x5f\x57\x96\x21\xc2\x19\x25\x37\x1b\xa7\xbb\xb2\xd0\x74\xf9\x6c\xa3\x5d\x85\xec\x37\xe2\x5b\x2f\x62\xc8\x03\xe3\xcb\xd7\x36\x84\xd8\xa2\xc4\x36\xf4\x83\xd0\x58\xd3\x7c\x92\xdb\xe4\x76\xf5\x6a\x8d\x5e\xd5\xa0\xf1\x8e\x81\xe9\xe3\x7a\xb6\x61\x95\x5b\xc1\xb7\xfa\x99\xf6\x15\xb5\x2a\xb3\xbd\xa2\xfe\x6a\x9e\xa8\xbc\xae\x9c\xff\xce\xed\xb1\x9c\xf8\x71\xa0\x04\x7c\xcc\x93\xa2\x83\x36\x53\xaf\x7a\xd1\xe7\x2d\x62\xc8\x07\x0f\x85\x1c\xac\x85\x30\xfe\x9a\x11\x28\x10\xf2\x66\x42\xde\x4c\xc9\x9b\x89\x8c\xaa\x9d\x78\xb4\x4b\xd7\xf3\x45\xa7\x86\x02\xcd\x96\xc1\x55\x0c\x3b\xcf\x62\x19\x6b\xdc\xd2\x9e\x2d\x1f\xae\x45\xfc\x8c\x3e\x56\xef\x28\x64\x96\xe0\xa3\x8f\xea\x9d\x70\x3b\xe4\x5f\x11\xff\x7c\x7c\xcf\x77\x66\x1b\x3f\xab\xfd\xc8\x6d\x80\x84\xb5\xa6\xf3\x29\x79\xf7\x93\xb0\x13\xf9\x32\x06\xb4\xbf\x97\x51\x91\x7c\xd2\x6f\x48\x61\x33\xea\x38\xb3\x76\x7f\x17\xec\x54\x76\xf4\x8e\x78\xdb\xe8\x8e\xc0\x13\x1f\x07\xd9\x49\x83\x5c\x27\x4f\x48\xf5\x55\x5d\x9f\x15\xd3\x49\x47\xf4\x54\x7e\x6d\xa2\xcb\x95\xc0\x60\xa1\xa0\x09\xa6\x4b\x61\x33\x0b\x05\x4f\x41\xf5\x6d\xca\x3e\x0f\xae\x6f\x18\x5d\x47\xf6\x1a\x64\xff\x40\x3d\x8e\x6a\xff\x84\x5c\x2a\x29\xed\xb0\x3a\x27\xfc\x59\x93\x66\x05\xd9\x6b\x1b\x3e\xac\xfe\x1d\xa6\xb4\x93\x92\x8c\xcf\x95\x38\x27\xcf\x35\x96\xd5\x27\xf5\x19\xb8\x07\x3e\xba\x73\xfd\xc8\x07\x0b\x91\x37\x1c\x98\xfe\x1a\xbd\x1e\x1f\x67\x3e\xba\x6b\x95\x93\x99\x82\x03\xe7\xa5\xec\x68\xc2\xcd\xac\x76\x07\x65\x6b\xc1\x1a\x71\xd1\xba\xb6\x82\x7f\x49\xac\xf3\xca\x59\x87\x76\x59\x46\xd3\x76\x31\x93\xf2\x5a\xb7\x0e\x5d\xcd\x11\xd8\x48\xdc\xdd\x27\xb5\x94\x58\x67\x67\x2f\xd5\xed\xe5\x7b\x3f\xc0\xac\x7e\x1a\x83\x62\x31\xed\x58\x45\x5e\xfa\x21\x18\x43\x6f\xe4\xc0\xf7\x6b\xe6\x90\xf6\xf3\x20\x72\x19\x54\x63\x6a\x9f\x83\x82\x2d\x64\x33\x09\x04\xed\xa5\x33\xeb\x1a\x0e\x9f\x9e\x5a\x4a\xd3\xaa\xa7\xce\xe9\xeb\x9c\x74\xb3\x16\xd2\xb8\x7d\xb4\x99\xd6\x6c\xd3\x73\x1c\xb6\xf2\x64\xa9\xcd\x06\xa5\x9d\xd9\xd4\x78\x25\x9b\x6d\x84\x50\xfd\x15\xbf\x90\xd1\xd2\x1b\xfd\x4c\xf4\x21\xd8\x81\x0d\xbf\xac\x59\x81\xea\xe2\x41\x64\x33\x41\xd5\xc9\x7c\x72\xc6\xb5\x90\xc7\xa8\xf7\x14\xad\x25\x31\x2b\xe2\x0f\x9a\x8d\x4f\xf4\x3c\x26\xd3\xd5\x79\xe0\x06\xed\xa1\x59\x6b\x68\x33\x65\xd9\xa8\xe4\xe0\x2d\xe3\xc9\x52\x95\x55\x8d\x2f\xd7\x4a\x9a\x5f\xdf\xb1\x7b\x7c\x3b\x16\x90\x6d\xb9\xb4\xe1\xf4\xca\x29\xed\x30\xfe\x1a\xff\x2f\xeb\xce\xff\x03\x00\x00\xff\xff\xae\x8e\xa3\xbe\x4f\x8c\x00\x00"

func templatesViewsWidgetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsWidgetHtml,
		"templates/views/widget.html",
	)
}

func templatesViewsWidgetHtml() (*asset, error) {
	bytes, err := templatesViewsWidgetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/widget.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesWidgetMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x5b\x6c\x1c\x67\xf5\xff\xf5\x62\xef\x7a\x9d\x38\xf1\x25\xfd\xb7\x7f\xa0\x7c\xa5\x4d\xef\x1b\x5f\xa1\x65\x13\x27\xad\x93\x14\x7a\x71\x55\xa5\x6e\x8a\x04\x2a\x9d\xee\x8e\xed\x25\xbb\x33\xab\x99\x59\xa7\x46\x05\xf9\xd2\x34\xa9\x1c\xe2\xaa\x82\x12\x44\x20\x4a\x41\xf0\x80\x04\x1b\x37\x9b\x6c\x7c\x59\x3f\xf1\x46\xd1\xf9\xde\x78\x40\x2d\xbc\x70\x15\x2f\x48\x08\x54\x21\x84\xce\x9c\xcf\xeb\xbd\x25\x75\x1f\xca\x3c\xcc\xf9\xce\xe5\x3b\xdf\xb9\xfc\xbe\x33\xf3\x5e\xd7\xcd\xdf\x01\x80\x43\x00\x3e\x09\x60\xdf\x8d\x80\x05\xe0\x2b\x37\x23\x7c\x7e\xd7\x02\xb4\x02\xf8\x7d\x0b\xc0\xa2\x3f\x19\xfa\xb7\x16\xa0\x07\xc0\xdf\x5b\x80\x5b\x00\x44\x5a\x81\x28\x80\xdb\x5b\x81\xff\x07\x70\x4f\xab\xf8\x1b\x69\x05\xee\x05\xf0\xd5\x56\xe0\x13\x00\x4e\x19\xfe\xc7\x86\x7f\xb7\x15\xd8\x09\xe0\xcf\xad\xc0\xed\x00\x3e\x30\xf4\xb6\x88\xf8\x7f\x38\x02\x6c\x07\x30\x1a\x01\x76\x00\xf8\x72\x44\xce\x3f\x66\xe4\xb9\x08\x70\x13\x80\x6f\x46\x80\x76\x00\x73\x11\x20\x02\xe0\x8c\xd1\xbf\x15\x01\x3a\xf9\xbc\x08\xb0\x1b\xc0\x65\x43\x7f\x1b\x01\xee\x00\x70\x63\x54\xe2\xbe\x2b\x0a\xdc\x05\x20\x1e\x95\xb8\x8e\x44\x81\x4f\x03\x70\xa2\x62\x77\x26\x0a\x74\x00\x28\x18\xba\x1e\x15\xff\xbf\x8e\x02\x6d\xec\x2f\x2a\xe7\xff\x21\x0a\xb4\x70\x5d\xa2\x40\x17\x80\x7f\x19\xbe\xbd\x0d\xf8\x3f\x00\x9d\x6d\xc0\x6d\x00\xee\x6b\x13\xf9\xc1\x36\xc9\xe7\xf1\x36\x89\xfb\x69\x43\x8f\x1a\xfa\x82\xa1\xe3\x6d\xe2\xdf\x69\x93\xf3\xbe\xde\x06\xc4\x00\xbc\x6a\xf8\x45\xe3\xef\x7b\xc6\xfe\xbc\xa1\x3f\x35\xf4\x17\x86\x5e\x31\x76\xeb\x86\xff\xa5\x89\xe7\xdd\x36\xc9\xfb\x8f\x6d\xc0\x8d\x00\x6e\x8a\x89\x5d\x6b\x4c\xea\xbb\x2d\x26\xf2\x9d\x31\x89\xb7\x3b\x06\x1c\xb8\x01\xb8\x35\x26\x7e\xbe\xd4\x2e\xf2\x17\xdb\x85\xb7\xdb\x81\x41\x00\xd9\x76\xe0\x73\x00\x2e\xb4\x0b\x8e\x7e\xd3\x0e\x0c\x00\x78\xbf\x1d\x78\x08\x40\xd7\x36\xe0\x45\x00\x4f\x6c\x03\x0e\x00\xf8\xd9\x36\x60\x1c\xc0\x5f\xb7\x01\x87\xb9\x0f\xdb\x01\x05\xe0\xec\x76\x60\x2f\x80\xab\xdb\x81\x21\x00\xff\xd8\x0e\xdc\x09\xe0\xfe\x0e\xe9\xd3\xd3\x1d\xc2\x3b\x1d\xd2\xcf\x37\x3b\x04\x97\xdf\x37\xfc\x52\x87\xe0\x6c\xa5\x43\xfa\xf2\xab\x0e\xc1\xd9\xfb\x1d\x40\x1f\x80\xff\x74\x48\x1c\xbd\x3b\xe4\xfc\x37\x76\x00\x2f\x00\xf8\xe7\x0e\xe0\x53\xdc\x8f\x9d\xc0\x13\x00\x82\x9d\xc0\x33\x5c\xbf\x9d\xc0\x18\xd7\xa3\x53\x78\xbb\x13\x78\x94\xf1\xd5\x09\xdc\xc3\x7d\xef\x14\x9c\xa9\x2e\xc1\xcf\x63\x5d\x82\xe7\xc9\x2e\xe9\xdb\x37\xba\x44\x7f\xaa\x4b\xe2\xfa\x79\x17\x90\x60\xbf\x5d\x52\x87\x0f\x8c\x3c\xd1\x2d\xf1\x3e\xd9\x2d\xf8\x79\xc1\xd0\x29\x43\xcf\x18\xfa\x93\x6e\xa9\x43\xb9\x5b\xe2\x7d\xaf\x5b\xfc\xff\xdb\xc8\x3f\xd3\x23\x7e\x46\x7a\x04\x47\xcf\x19\x6a\x19\x9a\x35\x74\xba\x47\xce\x3d\xd1\x23\xf1\xbe\xd5\x03\xec\xe7\xbe\xf4\x00\x07\x01\xfc\xa5\x47\x70\xb0\x67\x97\xd8\xf5\xef\x12\xbb\x91\x5d\xe2\xff\x79\x23\xff\xda\x2e\xe0\x06\xc6\x0d\x36\x1f\xae\x37\xdf\xb1\xdb\x0c\xdf\x52\xa5\xbb\xd5\xd0\x83\x55\x32\x8e\x9f\x6b\xda\x0b\xc9\xa1\x1f\x82\x1d\xae\x1f\x63\xe9\x61\x63\xd7\x61\x28\xf7\x91\x73\xe7\xfa\xdd\xcf\x31\x56\xf9\x62\xec\x30\x1e\x19\xe3\xf7\x19\xd9\x67\x01\x3c\x08\x99\x2b\xbb\x20\x79\xf0\xc3\x78\xbf\xb9\x6a\x6f\xa7\x99\x8d\x23\x10\x2c\xf1\xac\x7c\x00\x82\x73\x7e\x38\xef\x3b\xcd\x7a\x98\x6b\x0d\xe9\xf9\xdd\x90\x59\xf7\x90\xd1\x71\xdd\x6e\xa9\xf2\xcb\xf3\xe3\x11\xc8\xbc\xe4\x1a\x73\x1f\x19\xeb\xdd\x3c\x87\x21\xf7\x3a\x8e\xda\x87\xef\xd2\xe7\x21\x77\xa0\xbd\x4a\x1e\x62\x05\x82\xbd\x9a\x67\xf7\x9e\x81\x71\xf5\x28\x76\xa7\xd4\x51\x7e\x3d\xcf\x2f\xdf\x4e\xba\x4e\x6a\x73\xe5\xe3\x81\x4d\xe9\x03\x55\xe2\x47\xb3\x39\xdb\xb3\x26\xec\xca\x42\x65\xad\x97\xd3\xd9\x7c\x56\x25\x2d\x47\x79\xb6\x6f\x07\x4d\x55\xf7\x04\x46\x79\x70\xd2\x72\x26\x6c\x95\x4a\xfb\xb9\x8c\x35\xad\xb2\x6e\xca\x56\xe3\x56\x3a\x63\xa7\xd4\xf1\x74\x30\xa9\x6c\xcf\x73\x3d\xb5\xdb\x6f\x6a\xe8\xe7\x93\x49\xdb\x6f\xd0\x05\xe9\xec\xd6\x9c\x84\x86\x15\x27\x79\xcf\xb3\x9d\x40\x59\x1b\x29\x6d\x08\x52\x56\x60\x2b\xcb\x49\x89\xb9\xeb\xa8\xac\x1d\xd8\x5e\xad\x7a\x43\x95\xb2\xa7\xd2\x49\x3b\x3c\xca\xa8\xb3\xb6\xe5\xe7\x3d\x3b\x6b\x3b\xc1\xa6\x30\xe7\x1e\xaf\xf2\x30\xe5\x66\x02\x3e\xf0\x90\x15\xc8\xab\x72\x1a\x0e\x59\xd3\x38\x64\xfb\x49\x2f\x9d\x0b\xd2\xae\x83\x43\x12\x39\x0e\x4f\xb1\x3f\xe5\x3a\xbd\xee\xf8\x78\x85\xcb\xd9\x4e\x6f\x32\xe3\xfa\x36\xbe\x60\x07\x5b\xa8\x69\xb5\xd5\xb5\x8b\xc6\x56\x93\x6e\x26\x9d\xb2\xa6\xfd\xe6\x16\x5f\x34\x5a\x3c\xee\x04\xb6\x37\x65\x65\xd4\xb8\xeb\x29\x6b\x3c\xb0\x3d\x95\xf3\x6c\xdf\x57\x2f\x59\xc9\x63\xea\xa5\x7c\x10\xb8\x4e\xad\x51\xd2\xd4\x20\xb0\xbc\xf4\xf8\x78\xad\xce\x71\x83\xeb\xea\xc3\x2a\x3e\x28\x91\x73\xc5\xb8\x13\x78\xca\xf2\x03\x15\x16\x41\x25\xad\x9c\xb0\xa1\xa1\xe2\x4a\x55\xb3\x0e\x46\xad\x63\xb6\xec\x1a\xdd\xec\x12\x46\x5d\x27\x98\x94\x77\x66\x5a\xf9\x81\x15\xa4\xfd\x20\x9d\xf4\xf1\x4c\xd8\xb5\xf0\xdd\x04\xe6\x0d\xf2\x0a\xc6\x8f\x84\xef\x67\xad\x29\x1b\xcf\x4e\xba\xc7\xd5\x58\xbf\xa1\x03\x86\x0e\x1a\x3a\x24\xd4\xca\xba\x79\x27\x90\x75\x18\x5d\xb8\x12\xcc\x84\xcb\x10\x1a\xcf\x06\xac\x1a\xeb\x57\xbd\xea\xf9\x49\x8c\x0d\x18\x3a\x68\xe8\x90\xd0\xa3\x56\x26\x6f\xe3\xa8\x41\x98\xa1\x4d\xa2\x6f\xa2\xa9\xc4\x6f\x05\x10\x54\x71\x05\x5d\x07\x8c\x33\x1c\xb1\x73\xae\x17\xc4\x47\xfd\x89\x74\x2a\x3e\x92\x9f\xf0\xe3\x63\x6e\x82\xf1\xff\xc8\xb1\xf4\xa4\x95\x75\xf7\x78\xf9\x18\x57\x3b\x3e\xe6\x59\x8e\x9f\xb1\x02\xd7\x4b\xa8\x27\x43\x95\x1a\xcd\x7b\x56\xd6\x4d\xb9\x6a\x5f\x8d\xfd\xfe\xd8\x53\x96\x33\x91\xb7\x26\xec\xf8\x98\x6d\x65\x13\xaa\xc2\x27\xd4\x91\xbc\xef\xa7\x2d\x27\x36\xfa\xf8\xe8\xe1\xf8\x51\xdb\xf3\xd3\xae\x93\x50\xfd\x7b\xfa\x62\x07\x5d\x27\xb0\x9d\x20\x3e\x36\x9d\xb3\x13\x2a\xb0\x5f\x0e\x7a\x73\x19\x2b\xed\xec\x55\xc9\x49\xcb\xf3\xed\x60\xf8\xb9\xb1\xc7\xe2\x0f\x6f\xda\x71\x3c\xe3\xb6\x17\x3f\xec\x24\xdd\x54\xda\x99\x48\xa8\xd8\x33\x99\xbc\x67\x65\xe2\x8f\xb9\x5e\xd6\x4f\x28\x27\x17\xb2\xfe\xf0\xe0\x5e\x25\xcb\x61\x67\x77\x7f\xdf\xf0\x70\xbf\xba\xfb\x6e\xc5\xcb\xbe\x3b\x86\xfb\xfb\xd5\x01\xd5\xa7\x12\x21\xbf\x7f\x78\x60\x43\xb5\x6f\x78\x88\x97\xf7\x86\x66\xfb\xfa\xfb\xd4\x2b\xaf\xc8\x96\xfd\xc3\x03\x7d\xf7\xa9\x03\xaa\x5f\x25\xd4\xc0\x5e\x19\xbb\xf4\x06\xcf\xd8\x11\x7e\xd1\x9b\x7a\x8e\xa9\x9e\xa5\x22\x2d\xeb\x79\x5a\xa3\x4b\x54\xa8\x97\xe8\x85\x7a\x49\x38\x8e\xeb\x36\xd5\x8b\xf4\x42\x83\x08\xf4\x36\x95\x69\x19\x74\x8e\x0a\xb4\xac\x67\xa9\x44\xab\x7a\x9e\x56\x95\x9e\x63\x39\x15\xd8\xfa\xa2\x9e\xa1\x82\x9e\xd5\x0b\xb4\x44\x05\x2a\xd2\xaa\x5e\xa0\xab\xd7\xd9\x42\x6b\x54\xbc\xce\xbe\xb3\x74\x85\x56\xa9\xc8\x56\xb4\x46\x25\xb6\x9d\xa1\x22\x5d\x66\x47\x54\xa6\x25\x45\xa5\x30\x81\x12\x3b\xd3\xaf\x51\x89\x4a\x8a\xae\x50\x81\x96\xa8\xa8\x67\xf4\x29\x2a\xd1\x0a\x95\xf5\xac\x3e\xad\xf4\xac\xa2\x72\x28\xb9\x48\xcb\x54\xa6\xab\x3c\x86\xe8\x47\x7a\x96\xd6\xa9\xa8\x4f\xd1\x1a\x95\xd9\x5b\xd5\x79\x7a\xa1\xea\x34\xbd\xd0\xe4\xac\x66\x01\xb2\x95\x9e\xe3\xe3\xc3\x54\x56\xfe\x17\x61\xd6\x9f\x79\x8d\x60\xdf\x96\x66\xea\xd7\xa9\xa0\x17\x55\xd8\x8e\x15\x6e\x9b\x69\x46\xb5\x41\x98\xc9\x25\x2a\xe8\x39\x6e\x52\x49\xd1\x52\x58\x8a\x55\xbd\xc8\x2d\xe3\x56\xeb\x93\x54\xd4\x73\xfa\x64\x78\x44\xb1\xde\xf9\xe6\xde\xd0\x7a\x5e\xcf\xea\x39\x3d\xc3\xf9\xf0\x8a\xf3\x0e\xf3\xaa\x3b\x70\x5d\x02\xe1\xd2\x70\x3a\xb4\xd2\x18\x35\xf7\x5d\xbf\xce\x65\x08\x5d\x9e\xae\xd6\x17\xd9\xc7\x1a\x15\x68\x5d\xcf\xe8\x45\xba\xbc\xd1\x13\xd0\xb7\x25\x9a\xca\xa2\x36\x25\x16\x73\x21\x4f\x83\x7e\x48\xeb\x54\xd2\xb3\x54\xd8\xd8\x79\xb6\xb6\x8c\x6c\x7c\x81\xca\x74\x51\x2f\xe8\x39\x66\x15\x2d\xd1\x32\xad\xf4\xd2\x92\x5e\xe0\x45\x83\xba\xac\xe7\x68\x59\xcf\x88\x80\x8a\xbd\x61\xdf\xab\x04\xa0\xf3\x54\xa6\x15\x3d\xcf\x05\xfd\x78\x40\xde\x78\xc0\xc7\x02\xd2\x26\xc7\xac\xf3\xb5\xa6\x2b\x74\x89\x05\xfa\x24\x83\x55\x9f\x50\x21\x5b\xa4\xab\x1f\xd1\x7d\xa3\x2f\x01\xe9\x9a\x5c\xc4\x9a\x84\x9a\x26\xb3\xce\xfe\x69\x65\x03\x25\x97\x43\x2c\x84\x4d\x5a\x66\x40\xd1\x3a\x2d\x6f\xd1\x95\xfe\x16\x67\xa0\x67\xe8\x1d\x61\xe7\xaa\x30\xf8\x0e\x95\x59\x50\xd0\x33\x54\xd2\xaf\x32\xe8\xb6\x12\x5b\x38\x07\x37\xdd\x94\xf4\x89\x6a\x27\xd2\x1e\xbe\x75\xf3\xb4\xca\xc3\x68\x6b\x4e\x6b\xee\x0a\x95\x1e\xac\x60\x5e\x3a\x14\xde\x82\xf0\xa2\xb2\xc3\xf3\x1b\xd5\x31\xed\x29\xaa\x7a\xa8\x2a\xc3\x9c\xe2\x3a\xd5\x8f\x80\x42\x53\x0f\x21\xfa\x69\x45\x9f\xd9\x44\x45\x53\xbb\xa5\x46\xab\xca\x55\x5d\x0f\x07\x07\xcf\xbc\x25\x2a\xd3\x25\x33\x40\xe4\xbc\xda\x71\xc1\x37\xf8\x1c\x15\xf5\xac\x5e\xd4\xaf\x6d\x2e\x4f\x72\xbb\xc3\x89\x17\x96\x94\x7b\x1e\xd6\x43\xa2\x3e\x57\x3f\x50\xea\x3f\x56\xf5\x65\xfc\x08\xdf\xb9\x86\xad\x1f\xf2\xbd\xbb\x10\x2a\xb8\x3a\x25\x89\xe5\x02\x95\xf5\x89\x10\xf8\x6b\x1b\xa2\x4a\xd6\xb2\x99\x85\xfc\x7f\xd8\x5c\x3e\x70\x0d\xf9\xe0\x35\xe4\x43\xcd\xe5\x15\xe0\xcd\x37\xd7\x1b\x14\x5d\x4b\xdb\x30\xb3\x9b\x5a\x55\xcd\xe3\x0b\xa6\x60\x65\xbd\x68\xe0\x10\xfe\xb5\xf2\x1f\x8f\x3e\x29\x7f\xae\x1b\xeb\xc1\xaa\xf5\xd0\xe6\x9a\xbe\x1b\x36\xbd\x0a\x4f\x3f\x68\xf6\x61\x68\x68\x58\xc3\xe7\x43\xbe\x94\x5b\xed\x77\xb3\xed\x1f\xd2\xf3\x25\x34\x7e\x12\xcc\xc7\xa4\xf6\x42\x34\xb9\x23\x75\x1f\x17\xfc\x37\x00\x00\xff\xff\x40\xe9\x9e\xde\x7b\x15\x00\x00"

func localesRuLc_messagesWidgetMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesWidgetMo,
		"locales/ru/LC_MESSAGES/widget.mo",
	)
}

func localesRuLc_messagesWidgetMo() (*asset, error) {
	bytes, err := localesRuLc_messagesWidgetMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/widget.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/widget.html":      templatesViewsWidgetHtml,
	"locales/ru/LC_MESSAGES/widget.mo": localesRuLc_messagesWidgetMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"widget.mo": &bintree{localesRuLc_messagesWidgetMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"widget.html": &bintree{templatesViewsWidgetHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
