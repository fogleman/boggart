// Code generated by go-bindata.
// sources:
// templates/views/widget.html
// locales/ru/LC_MESSAGES/widget.mo
// DO NOT EDIT!

package v1

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"

	"github.com/elazarl/go-bindata-assetfs"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsWidgetHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x79\x8f\xe3\xb6\x15\xff\x7f\x3f\xc5\x83\x30\xdb\x1d\x27\x91\xef\xa4\xed\xc4\x9e\x20\xe8\xa6\x68\x80\xa4\x58\xec\x4e\x37\x68\x93\x74\x40\x5b\xf4\x58\x59\x89\xd4\x52\x94\x67\xa6\x03\x7f\xf7\x82\xa4\x0e\xca\x96\x6d\x9d\x1e\x7b\x57\x06\xb2\xb1\x0e\xbe\x47\xfe\xf8\x7b\x87\xa5\x47\xce\xd3\x13\x58\x78\x61\x13\x0c\xc6\x9c\x12\x8e\x09\x37\x60\xbd\x7e\x31\xf1\xe7\xcc\xf6\x38\xf0\x47\x0f\x4f\x0d\xe4\x79\x8e\x3d\x47\xdc\xa6\xa4\xf7\x07\x5a\x21\x75\xd1\xb8\x7e\x01\x00\xb0\x08\xc8\x5c\x5c\x81\x15\x72\x02\xfc\x77\xca\x5c\xc4\x2f\x49\x07\x9e\xe4\x55\xf1\x61\x98\x07\x8c\x00\xc1\xf7\xf0\x23\xe1\x4e\xf7\x9f\x81\x3b\xc3\x2c\xbc\xb3\xd3\x5d\x44\x4d\xbe\x95\x2d\xd6\x2f\x26\x3d\xa5\xe0\xfa\xc5\xc4\xb2\x57\x30\x77\x90\xef\x4f\x0d\x46\xef\x43\x8d\xfa\xd9\x39\x75\x4c\xd7\x32\x07\x43\x10\xdf\x7c\x37\xfa\xf6\xe0\x9b\x83\x61\x78\xff\x66\x9b\x87\x5b\x0f\x11\xec\x68\x57\xb7\xef\x88\xc0\x48\xdf\x13\xdf\xc7\xa8\x83\xa7\x06\x47\xb3\x2c\x49\xf1\x9d\x81\x13\x09\x24\x68\x05\x04\xad\x4c\x8e\x66\x3e\xcc\x10\xbb\x15\x5f\x8c\x44\x8c\x63\xfb\x59\xba\x62\x49\x8e\x1d\xde\xeb\x31\xec\x63\xc2\xe5\x5c\x18\x4f\x4f\x60\x2f\x00\x7f\x84\x2e\x52\x53\x60\x88\xc9\x8b\x74\x8a\x73\x2b\x2c\x6e\xc2\xc4\x82\xf5\xfa\x7a\x82\x60\xc9\xf0\x62\xba\xa3\x5d\x32\xb3\x57\x2b\x6a\x5b\x97\xfd\xce\xb7\xa2\xad\xe3\x63\x58\xaf\x9f\x9e\xa0\xfb\x16\x7f\x0c\xb0\xcf\xbb\xff\x7a\xfb\x53\xf7\x0d\xe2\x4b\x75\x5a\x09\x37\xae\x85\xd0\xc1\x5f\x08\x18\x7f\x0b\x18\xc3\x84\x83\x8b\x91\x1f\x30\xec\x62\xc2\x7d\x03\xba\xb0\x5e\x4f\x7a\xe8\x7a\xd2\x73\xec\x1a\x06\xea\x52\xc2\x97\xce\x63\xd9\xf1\x6a\xcd\xcb\x0c\xfb\x3b\x25\x67\x1a\x8a\xf9\x13\x72\x9c\xe9\x20\x0b\x8b\x9f\xd5\x0d\xe0\x8b\x81\xf8\xdc\x9e\xd7\x8f\x84\x65\xfb\x9e\x83\x4a\x23\xa1\x35\xaf\x82\x44\x28\x26\x0b\x83\xd7\x91\x86\x9a\x07\x8e\x57\x82\x59\x26\x25\x26\x5d\x2c\xca\x0e\x7f\x4b\x48\x15\x10\x52\xc2\xb2\xa0\xf8\x41\xde\x00\x94\xf4\xa4\xb6\x86\x00\xf1\x30\x31\xe7\x0e\xf5\x71\x55\x50\x52\x82\xea\x00\x26\x16\xb8\x0f\x1c\x0f\x93\x5e\xa8\xb5\x66\x80\x96\xd4\xb1\x2d\xf4\xe8\x97\xc5\x45\x6f\x5f\x05\x8e\x48\x4e\x16\x0a\xff\x88\x75\x1c\x1e\xfc\xa4\x17\x38\x3b\xae\x68\xc1\x8c\xa3\x99\xb9\x3b\x9c\xa5\x5a\x6c\x84\x35\x5d\x82\x38\x03\x0b\x64\x61\x50\x88\x81\x4d\xf6\x48\x13\x9f\xbd\x5e\x77\x6f\x4b\xd9\x1f\x2f\xd6\x8e\x1f\xb8\xe9\x06\x1c\x5b\xb0\xa0\x84\x9b\x83\x11\xb8\xe6\xcc\x1c\xf5\x0f\xe8\xd7\xfa\xc1\xd0\x3d\x5c\xa6\xa3\x93\x85\x38\x06\x6e\xbb\x18\x28\x01\x0b\xaf\xec\x39\x86\x97\x12\x75\x62\x3b\xf1\x7f\x97\x1e\xb3\x09\x07\x23\x95\x0f\xfd\xb6\x23\x21\xfa\xcd\xb8\xb6\xe8\x3c\x10\x01\xaf\x7b\xcf\x6c\x8e\x2f\x85\x92\x1b\xfa\x8e\x33\x9b\xdc\x5d\xbe\x32\xe0\xb2\x2b\xce\x74\x55\xea\x03\xc6\xb0\xdf\xff\xc6\xec\x0f\xcc\xfe\xf0\x66\xf0\xf5\x55\x7f\x7c\xd5\xff\xfa\x3f\xfd\x3f\x5f\xf5\xfb\x46\x07\x8c\x57\x9d\x4e\x9c\x08\x19\x9d\x4e\x2e\xcc\x7a\xde\xf5\x8b\xc3\x77\x89\x7c\x03\x6b\x73\xeb\x60\x90\xff\x9a\x3e\x67\xb6\x87\x2d\x81\x0d\x52\xe7\x2d\x6e\x32\xec\x7b\x94\xf8\x62\xca\x09\xbd\x67\xc8\x33\xc0\xe7\x8f\x82\x27\xf7\xb6\xc5\x97\x57\x83\x7e\xff\x65\xce\x99\x98\xf0\x25\x46\x56\xde\x7b\x59\xbe\x1b\x43\xc1\x1b\x31\x37\x32\x1f\xbe\x2c\x29\xe5\x66\x00\x3d\xf8\xa5\x06\x39\xc3\x9a\xe4\x8c\x6a\x92\x33\x2e\x25\x67\xd2\xcb\x3b\x1f\x42\x66\x81\x59\x9e\x51\xeb\xb1\x80\x1d\x93\x3b\x0c\x17\xf6\x57\x70\x21\x32\x2a\x1f\xae\xa6\xd0\x55\xdf\x72\x98\x87\x52\xc8\x94\x5f\x42\xc4\x82\x4b\xfc\x31\x14\xd4\x95\xa4\x81\x0b\x65\x9f\xf2\xa0\xa3\x5f\xfe\x37\x46\x2c\xba\x2a\xbe\x77\xb4\x08\xe2\x07\xf3\x39\xf6\x7d\x2d\x84\x14\x98\x19\x2b\x9e\x19\xbd\x23\x5d\xe5\x32\xe0\x42\x3a\x21\xc3\x42\xfe\x72\x46\x11\xb3\x64\xe0\x7a\x7a\x4a\xf5\x4a\xce\x62\x4e\xb8\x23\x9d\xb9\x6f\x96\x0d\x72\xfd\x16\xdc\xf0\x7c\xfa\x8f\xc1\xa4\xc3\x37\x03\x58\xaf\x35\xbf\x56\xa8\x1f\x6a\xde\xee\x78\x22\xec\x86\x09\xc0\xfb\x79\xe7\x3e\x3d\x28\x0f\x91\x68\x06\x1d\x34\xc3\x0e\xc8\x7f\x4d\x4b\x50\x8c\x19\xd7\xb5\x8e\xfa\x35\x76\x38\x4a\x0f\x1d\x7a\xf5\x02\xab\xb0\x48\xa9\x98\xf4\xc4\x20\x0b\x83\x2c\x73\x18\x7b\x01\x4e\xc3\x48\x47\x76\xd3\x42\x0d\x89\xa3\x69\x06\x6a\x9b\x2c\x68\x8b\x73\xda\x79\xa8\x01\xd4\xec\x3c\xf0\x02\x05\x0e\x6f\x1e\xea\xb2\x38\x48\x3c\xf3\x87\x8a\xf3\x09\x2c\xc3\x3a\x03\xcb\xf0\x5c\x02\xcb\xb0\x79\x2b\x1c\x36\x1a\x58\x1a\x41\xba\x91\xc0\x72\x9e\x50\x6b\x81\xa5\x11\xa8\xeb\x0f\x2c\xe7\x89\xb3\xee\x3c\xce\x26\xb0\x64\x41\xdd\x06\x96\x0d\x90\x46\x75\x06\x96\xd1\xb9\x04\x96\x51\xf3\x56\x38\x6a\x34\xb0\x34\x82\x74\x23\x81\xe5\x3c\xa1\xd6\x02\x4b\x23\x50\xd7\x1f\x58\xce\x13\x67\xdd\x79\x9c\x4d\x60\xc9\x82\xba\x0d\x2c\x1b\x20\x8d\xeb\x0c\x2c\xe3\x73\x09\x2c\xe3\xe6\xad\x70\xdc\x68\x60\x69\x04\xe9\x46\x02\xcb\x79\x42\xad\x05\x96\x46\xa0\xae\x3f\xb0\x9c\x27\xce\xba\xf3\x38\x9b\xc0\x92\x05\xf5\xa9\x05\x96\xfc\x6f\xca\x8a\xf5\x62\xd2\xcb\xf9\xae\x6c\xd2\x93\xef\x6e\x0f\xbe\x9c\xd7\x2c\x6e\x77\x39\xcc\x5e\x21\xcf\xf3\x26\xf9\x38\x6f\x91\x5f\x23\x8e\x2b\xbf\x6c\x7d\xc7\x4b\x48\xc9\x47\xa0\xdc\xaf\x59\xcb\xbf\x62\x95\x64\x90\xaf\x58\x15\x2d\x0a\xbc\x63\x2d\x96\x83\x95\x72\x11\xe9\xda\x0a\xe1\x24\x64\x2f\xbb\x37\xb6\x9b\xa7\xc2\x02\xd6\xeb\x57\x29\x2f\x52\x34\x71\x54\x39\x58\xa8\x54\x4e\xb4\x2a\xfc\x51\x33\x4f\x89\x01\x17\x61\x81\x64\x5c\x13\x14\x5e\x12\x96\x75\xa1\x17\x4f\x3e\xaf\x73\xc9\xe5\x58\xea\x70\x2a\xa9\x72\xb2\xd6\xb1\xb4\x8e\xa5\x75\x2c\x59\x9d\x3e\xe0\x58\x3c\xbc\xdb\xb5\x84\xd6\xf5\x39\x39\x17\xad\x7e\xf9\x70\x67\x16\x94\xb9\x60\x5b\xd3\xa4\x55\xe8\x62\xc4\x05\x73\x49\x99\xfd\x3f\x4a\x38\x72\x40\x1e\xab\x44\xd6\xc1\x0b\x6e\x48\x7f\x63\x72\x7a\x77\x27\xbc\xca\x0a\x39\xb6\x85\x38\x65\x06\xb8\x98\x2f\xa9\x35\x35\x3c\xba\xb7\x80\x3f\xd5\x0b\xad\x36\x53\xea\xb9\x63\x34\xf0\x72\x36\x96\x02\x54\x9e\x1d\xaf\x80\x20\x9c\x51\xc7\x0c\x4f\xaa\xf5\x10\xe3\x68\x39\xc4\x58\x5b\x0d\x21\x46\x35\x35\x5c\x6a\xe1\x5b\x3e\x28\xa0\x0f\xc2\x27\x0e\xca\xf3\x2c\xe9\x3d\xdc\x0c\x94\xef\x49\xa7\xff\x0c\x7f\x0c\x6c\x86\x2d\xe3\xfa\x8b\xa2\x49\xf9\xa4\x27\xbb\x5f\xa0\xc1\xf6\x1a\x90\x6f\xa2\x31\x7f\x93\xb9\x02\x24\x97\x54\x9b\x78\x41\xe4\x2e\xe6\x4b\x3c\xff\x30\xa3\x0f\x31\x49\xfe\xf0\x4d\xff\xde\xe6\xf3\xa5\x01\x04\xb9\x38\x81\x52\x52\x2a\x3e\x88\xeb\x5e\xc3\xe2\xd1\x6e\x78\xa5\x03\x06\x67\x41\x58\x94\x2d\x64\x63\x2b\xb6\x23\xe8\x15\xc1\xca\xb2\x57\x79\x2d\x3a\xff\xad\xa7\xc0\xca\xa2\xf3\xb5\xc1\xca\x61\xcb\x4a\x9c\x40\xa9\xb1\x72\xb8\x93\x95\xc3\x96\x95\x07\x59\x39\xaa\xc6\xca\x51\xcb\x4a\x9c\x40\xa9\xb1\x72\xb4\x93\x95\xa3\x96\x95\x07\x59\x39\xae\xc6\xca\x71\xcb\x4a\x9c\x40\xa9\xb1\x72\xbc\x93\x95\xe3\x96\x95\x87\x58\x89\x5c\x1a\xec\x5d\x66\x94\xf5\x49\x33\x33\x14\xd1\xb2\x33\x0d\x69\xc2\xd0\xe8\x44\x36\x4b\xd5\xd5\x96\xa9\x87\x98\xea\xd1\x7b\xcc\x2a\x11\x55\x49\x68\x79\x9a\x02\x34\xa1\x69\x78\x9c\xcd\x52\x79\xb1\x25\xe9\xc1\x20\x6f\xbb\xb8\x12\x47\xa5\x80\x96\xa2\x3a\x9c\x5a\xa8\x97\x87\x3b\x82\xbd\xed\xe2\x96\x9f\x87\xf8\x69\x21\x5e\x8d\x9f\x56\xfc\x18\xbb\xe5\x67\x08\x67\xc2\x4f\x75\xb8\xc5\x4f\x71\xba\xa5\xe6\x1e\x6a\x0a\xdb\xad\xf0\x84\xf3\x47\xc2\x31\x5b\xa9\x87\xc0\x40\x28\x87\x79\xb8\x64\x9c\x23\x66\x47\xdb\x36\x7c\xd2\x74\x25\x72\x83\x9e\x88\x9a\x11\x9c\x92\x98\xf1\x81\xac\xd0\x90\x9b\x24\x74\xc3\x73\xb0\x5e\x1b\xe0\x21\xce\x31\x23\x53\xe3\xbf\xbf\x9a\x5f\xfe\xfe\xdd\xaf\x7d\xf3\xaf\xbf\x7f\x71\x61\xb4\x94\x74\xab\x3c\xde\x4c\x51\xb2\xa5\x63\xf2\x78\x33\x3e\xd8\xa2\xe3\xb0\xa5\xe3\x21\x3a\x96\x7e\xae\x99\xa2\xa3\x4c\xe5\xbf\x52\x5b\x69\x20\x62\x7d\x2e\x21\x3d\x8b\x94\x23\x9d\x94\xa3\x0c\x52\x8e\x5a\x52\x1e\x22\x65\xe9\xc7\x9a\x29\x52\xa2\x05\xc7\x0c\x3c\x86\x7d\x1f\x66\x68\xfe\x01\x66\x01\xe7\x94\x7c\xa6\xbc\x1c\xeb\xbc\x1c\x67\xf0\x72\xfc\x6c\xbc\x2c\x4c\x4c\x87\xdc\xfa\xd4\xb1\x2d\xe3\xfa\xa8\xcc\xce\x37\x71\x11\xcb\xe9\x62\xe1\x63\x6e\x16\x75\xb0\x13\xc5\xd2\x70\x26\x19\xf6\x31\x8f\x7f\x31\xcc\x38\x81\x19\x27\xaa\x7e\x39\x9a\x41\x75\x4b\x52\x16\xf4\x56\x35\x51\x65\x41\x4a\x58\x95\x1e\xf8\xc1\xcc\xb5\xb7\xbb\x10\x55\xab\x47\xbd\xf0\xd1\x0a\x6b\x9d\x78\x27\x0e\x4b\xf6\xa1\x7e\xc7\x36\xe9\x89\x09\x2f\x55\x5a\xa2\x6f\xf7\x95\xa3\x1a\xea\xd3\xde\x55\xe9\x75\xb2\x83\x5f\xe9\xaa\xb5\x52\x3b\x33\x9d\xc0\xce\x43\xb0\x55\xc1\x66\xa1\x47\x59\xbf\x16\x51\xa4\x50\x29\x79\x91\x39\x80\xa4\x28\x4c\x28\x4d\xea\xcf\x8c\xc2\x1b\xff\x68\xa2\xd4\x86\x43\x42\xde\xc1\xed\x86\x0a\xd6\xaf\xe5\x9e\x2c\x38\x91\x02\xf8\xcf\xd6\xb4\xa3\xf1\xb8\x96\x29\xa2\xd6\x50\xdf\xb5\x34\xd9\xb9\xb5\xa4\xcd\xef\x11\xfe\x5e\x04\x8d\xca\xae\xe4\x35\x56\xf5\x95\x76\x94\xd4\x9d\x9d\x43\x29\xeb\x06\x92\x2a\x62\xf9\x73\x2b\x79\xc2\x5f\xdc\x1b\xa8\x47\x8b\xf2\x81\xa2\x10\xd3\xc5\x8c\x51\x56\x6a\x15\x10\xb7\x52\xbb\x35\x46\x2b\x07\x45\x86\x99\x96\xde\xfd\x21\xd4\x51\xaa\xb7\x79\x2d\x36\xa3\x7f\xc5\x74\xc5\x0d\x6b\x29\x20\x4e\x30\x90\x19\x53\xf1\x22\xe2\x52\x7d\x57\xb3\x4b\xb0\xa6\xde\x2a\xbf\xd0\x2b\x41\x84\x33\x4a\xee\x32\xa7\xbb\xb4\xd0\x78\x3d\x6b\xad\x5d\x85\xe4\xe7\xe1\x1b\x27\x60\xc8\x01\xe3\xcb\x97\x16\xf8\x78\x4e\x89\x65\xe8\x07\xbe\xb1\xa5\xf9\x22\xb5\x0f\xe8\xe6\xd5\x0a\xbd\xaa\x40\xe3\x3d\x03\xd3\xc7\xf5\x6c\xc3\x2a\xb6\xa4\x6e\xf3\x33\xe9\x29\x6a\x95\x66\x7b\x49\xfd\xe5\x3c\x51\x71\x5d\x29\xff\x9d\xda\x86\x36\xf2\xe3\x40\x09\xb8\x98\x47\x55\x05\x4d\xa6\x5e\xd5\xa2\xcf\xcf\xe8\x03\xd6\x1e\xf4\x95\x8e\x3c\x2e\xfa\xa0\x5e\x73\x35\x13\x7a\x36\xc4\x3f\x5f\xec\x49\x77\x66\x57\x10\x28\x97\xd2\xd7\x40\xc6\x4a\xd3\x79\x4c\xde\xfd\x84\x7c\xae\x1e\x38\x83\xb6\x81\x7a\x49\xf2\x39\xc8\xe7\xaa\x10\xe5\x96\x2e\x16\xb7\xcd\x66\x41\x7b\x95\x3d\x1f\x31\x6b\xca\x6f\x76\x8d\xae\x64\xba\x73\x4c\x23\x38\x0f\xb2\x93\x1a\xb9\x4e\x8e\x48\xf5\x4d\x5d\x9f\x14\xd3\x49\x4b\xf4\x58\x7e\x65\xa2\xcb\xa5\x8b\x30\x47\x5e\x1d\x4c\x97\xc2\x6e\xe7\xc8\x3b\x06\xd5\x77\x29\xfb\x34\xb8\x9e\x31\xba\x96\xec\x15\xc8\xfe\x9e\x3a\x1c\xdd\x55\x4d\x9c\x57\x4a\x4a\x33\xac\x4e\x09\x7f\xd6\xa4\x59\x41\xf6\xd2\x82\xf7\x9b\x7f\x98\x23\xee\xa4\x24\xe3\x73\x25\xce\xd1\xaf\xb8\x55\xf9\x49\x7d\x06\xee\x81\x8b\x1e\x6c\x37\x70\x61\x8e\xc8\x2b\x0e\x4c\x7f\x69\x58\x8d\x8f\xb7\x2e\x7a\x68\x94\x93\x89\x82\x13\xe7\xa5\xec\x68\xc4\xcd\xa4\x48\x01\x25\x0b\x5b\x6a\x71\xd1\xba\xb6\x9c\x7f\x5a\xa6\xf5\xca\x49\x87\xf6\x59\x46\xdd\x76\x71\x2b\xe5\x35\x6e\x1d\xba\x9a\x33\xb0\x91\xb0\xbb\x47\xb5\x94\x50\x67\x6b\x2f\xe5\xed\xe5\x7b\xd7\xc3\xac\x7a\x1a\x83\x42\x31\xcd\x58\x45\x5a\xfa\x29\x18\x43\x77\xb8\x80\xef\xb7\xcc\x21\xee\xe7\x49\xe4\x32\xa8\xc2\xd4\x3e\x07\x05\x1b\xc8\x66\x22\x08\x9a\x4b\x67\xb6\x35\x9c\x3e\x3d\xb5\x94\xa6\x51\x4f\x9d\xd2\xd7\x3a\xe9\x7a\x2d\xa4\x76\xfb\x68\x32\xad\xd9\xa5\xe7\x3c\x6c\xe5\x68\xa9\x4d\x86\xd2\xd6\x6c\xca\x9b\xcd\x9b\x64\x5d\x77\x69\x0b\x91\x4f\x88\x9b\x31\x0a\x4d\xf4\x29\xd8\x81\x05\xbf\x6c\x59\x81\xea\xe2\x49\x64\x33\x5e\xd9\xc9\x3c\x3a\xe3\x1a\xc8\x63\xd4\x7b\x8a\xc6\x92\x98\x0d\xf1\x27\xcd\xc6\x23\x3d\x8f\x49\x74\xb5\x1e\xb8\x46\x7b\xa8\xd7\x1a\x9a\x4c\x59\x32\x95\x9c\xbc\x65\x1c\x2d\x55\xd9\xd4\xf8\xf9\x5a\x49\xfd\xd5\xec\xfb\xc7\xb7\x67\xb9\xcc\x8e\x4b\x19\xa7\x37\x4e\x69\x87\xe1\xd7\xf0\x7f\x49\x77\xfe\x1f\x00\x00\xff\xff\xca\x35\x88\x07\x60\x86\x00\x00"

func templatesViewsWidgetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsWidgetHtml,
		"templates/views/widget.html",
	)
}

func templatesViewsWidgetHtml() (*asset, error) {
	bytes, err := templatesViewsWidgetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/widget.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesWidgetMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x5b\x6c\x1c\x67\xf5\xff\xf5\x62\xef\x7a\x9d\x38\xf1\x25\xfd\xb7\x7f\xa0\x7c\xa5\x4d\xef\x1b\x5f\xa1\x65\x13\x27\xad\x93\x14\x7a\x71\x55\xa5\x6e\x8a\x04\x2a\x9d\xee\x8e\xed\x25\xbb\x33\xab\x99\x59\xa7\x46\x05\xf9\xd2\x34\xa9\x1c\xe2\xaa\x82\x12\x44\x20\x4a\x41\xf0\x80\x04\x1b\x37\x9b\x6c\x7c\x59\x3f\xf1\x46\xd1\xf9\xde\x78\x40\x2d\xbc\x70\x15\x2f\x48\x08\x54\x21\x84\xce\x9c\xcf\xeb\xbd\x25\x75\x1f\xca\x3c\xcc\xf9\xce\xe5\x3b\xdf\xb9\xfc\xbe\x33\xf3\x5e\xd7\xcd\xdf\x01\x80\x43\x00\x3e\x09\x60\xdf\x8d\x80\x05\xe0\x2b\x37\x23\x7c\x7e\xd7\x02\xb4\x02\xf8\x7d\x0b\xc0\xa2\x3f\x19\xfa\xb7\x16\xa0\x07\xc0\xdf\x5b\x80\x5b\x00\x44\x5a\x81\x28\x80\xdb\x5b\x81\xff\x07\x70\x4f\xab\xf8\x1b\x69\x05\xee\x05\xf0\xd5\x56\xe0\x13\x00\x4e\x19\xfe\xc7\x86\x7f\xb7\x15\xd8\x09\xe0\xcf\xad\xc0\xed\x00\x3e\x30\xf4\xb6\x88\xf8\x7f\x38\x02\x6c\x07\x30\x1a\x01\x76\x00\xf8\x72\x44\xce\x3f\x66\xe4\xb9\x08\x70\x13\x80\x6f\x46\x80\x76\x00\x73\x11\x20\x02\xe0\x8c\xd1\xbf\x15\x01\x3a\xf9\xbc\x08\xb0\x1b\xc0\x65\x43\x7f\x1b\x01\xee\x00\x70\x63\x54\xe2\xbe\x2b\x0a\xdc\x05\x20\x1e\x95\xb8\x8e\x44\x81\x4f\x03\x70\xa2\x62\x77\x26\x0a\x74\x00\x28\x18\xba\x1e\x15\xff\xbf\x8e\x02\x6d\xec\x2f\x2a\xe7\xff\x21\x0a\xb4\x70\x5d\xa2\x40\x17\x80\x7f\x19\xbe\xbd\x0d\xf8\x3f\x00\x9d\x6d\xc0\x6d\x00\xee\x6b\x13\xf9\xc1\x36\xc9\xe7\xf1\x36\x89\xfb\x69\x43\x8f\x1a\xfa\x82\xa1\xe3\x6d\xe2\xdf\x69\x93\xf3\xbe\xde\x06\xc4\x00\xbc\x6a\xf8\x45\xe3\xef\x7b\xc6\xfe\xbc\xa1\x3f\x35\xf4\x17\x86\x5e\x31\x76\xeb\x86\xff\xa5\x89\xe7\xdd\x36\xc9\xfb\x8f\x6d\xc0\x8d\x00\x6e\x8a\x89\x5d\x6b\x4c\xea\xbb\x2d\x26\xf2\x9d\x31\x89\xb7\x3b\x06\x1c\xb8\x01\xb8\x35\x26\x7e\xbe\xd4\x2e\xf2\x17\xdb\x85\xb7\xdb\x81\x41\x00\xd9\x76\xe0\x73\x00\x2e\xb4\x0b\x8e\x7e\xd3\x0e\x0c\x00\x78\xbf\x1d\x78\x08\x40\xd7\x36\xe0\x45\x00\x4f\x6c\x03\x0e\x00\xf8\xd9\x36\x60\x1c\xc0\x5f\xb7\x01\x87\xb9\x0f\xdb\x01\x05\xe0\xec\x76\x60\x2f\x80\xab\xdb\x81\x21\x00\xff\xd8\x0e\xdc\x09\xe0\xfe\x0e\xe9\xd3\xd3\x1d\xc2\x3b\x1d\xd2\xcf\x37\x3b\x04\x97\xdf\x37\xfc\x52\x87\xe0\x6c\xa5\x43\xfa\xf2\xab\x0e\xc1\xd9\xfb\x1d\x40\x1f\x80\xff\x74\x48\x1c\xbd\x3b\xe4\xfc\x37\x76\x00\x2f\x00\xf8\xe7\x0e\xe0\x53\xdc\x8f\x9d\xc0\x13\x00\x82\x9d\xc0\x33\x5c\xbf\x9d\xc0\x18\xd7\xa3\x53\x78\xbb\x13\x78\x94\xf1\xd5\x09\xdc\xc3\x7d\xef\x14\x9c\xa9\x2e\xc1\xcf\x63\x5d\x82\xe7\xc9\x2e\xe9\xdb\x37\xba\x44\x7f\xaa\x4b\xe2\xfa\x79\x17\x90\x60\xbf\x5d\x52\x87\x0f\x8c\x3c\xd1\x2d\xf1\x3e\xd9\x2d\xf8\x79\xc1\xd0\x29\x43\xcf\x18\xfa\x93\x6e\xa9\x43\xb9\x5b\xe2\x7d\xaf\x5b\xfc\xff\xdb\xc8\x3f\xd3\x23\x7e\x46\x7a\x04\x47\xcf\x19\x6a\x19\x9a\x35\x74\xba\x47\xce\x3d\xd1\x23\xf1\xbe\xd5\x03\xec\xe7\xbe\xf4\x00\x07\x01\xfc\xa5\x47\x70\xb0\x67\x97\xd8\xf5\xef\x12\xbb\x91\x5d\xe2\xff\x79\x23\xff\xda\x2e\xe0\x06\xc6\x0d\x36\x1f\xae\x37\xdf\xb1\xdb\x0c\xdf\x52\xa5\xbb\xd5\xd0\x83\x55\x32\x8e\x9f\x6b\xda\x0b\xc9\xa1\x1f\x82\x1d\xae\x1f\x63\xe9\x61\x63\xd7\x61\x28\xf7\x91\x73\xe7\xfa\xdd\xcf\x31\x56\xf9\x62\xec\x30\x1e\x19\xe3\xf7\x19\xd9\x67\x01\x3c\x08\x99\x2b\xbb\x20\x79\xf0\xc3\x78\xbf\xb9\x6a\x6f\xa7\x99\x8d\x23\x10\x2c\xf1\xac\x7c\x00\x82\x73\x7e\x38\xef\x3b\xcd\x7a\x98\x6b\x0d\xe9\xf9\xdd\x90\x59\xf7\x90\xd1\x71\xdd\x6e\xa9\xf2\xcb\xf3\xe3\x11\xc8\xbc\xe4\x1a\x73\x1f\x19\xeb\xdd\x3c\x87\x21\xf7\x3a\x8e\xda\x87\xef\xd2\xe7\x21\x77\xa0\xbd\x4a\x1e\x62\x05\x82\xbd\x9a\x67\xf7\x9e\x81\x71\xf5\x28\x76\xa7\xd4\x51\x7e\x3d\xcf\x2f\xdf\x4e\xba\x4e\x6a\x73\xe5\xe3\x81\x4d\xe9\x03\x55\xe2\x47\xb3\x39\xdb\xb3\x26\xec\xca\x42\x65\xad\x97\xd3\xd9\x7c\x56\x25\x2d\x47\x79\xb6\x6f\x07\x4d\x55\xf7\x04\x46\x79\x70\xd2\x72\x26\x6c\x95\x4a\xfb\xb9\x8c\x35\xad\xb2\x6e\xca\x56\xe3\x56\x3a\x63\xa7\xd4\xf1\x74\x30\xa9\x6c\xcf\x73\x3d\xb5\xdb\x6f\x6a\xe8\xe7\x93\x49\xdb\x6f\xd0\x05\xe9\xec\xd6\x9c\x84\x86\x15\x27\x79\xcf\xb3\x9d\x40\x59\x1b\x29\x6d\x08\x52\x56\x60\x2b\xcb\x49\x89\xb9\xeb\xa8\xac\x1d\xd8\x5e\xad\x7a\x43\x95\xb2\xa7\xd2\x49\x3b\x3c\xca\xa8\xb3\xb6\xe5\xe7\x3d\x3b\x6b\x3b\xc1\xa6\x30\xe7\x1e\xaf\xf2\x30\xe5\x66\x02\x3e\xf0\x90\x15\xc8\xab\x72\x1a\x0e\x59\xd3\x38\x64\xfb\x49\x2f\x9d\x0b\xd2\xae\x83\x43\x12\x39\x0e\x4f\xb1\x3f\xe5\x3a\xbd\xee\xf8\x78\x85\xcb\xd9\x4e\x6f\x32\xe3\xfa\x36\xbe\x60\x07\x5b\xa8\x69\xb5\xd5\xb5\x8b\xc6\x56\x93\x6e\x26\x9d\xb2\xa6\xfd\xe6\x16\x5f\x34\x5a\x3c\xee\x04\xb6\x37\x65\x65\xd4\xb8\xeb\x29\x6b\x3c\xb0\x3d\x95\xf3\x6c\xdf\x57\x2f\x59\xc9\x63\xea\xa5\x7c\x10\xb8\x4e\xad\x51\xd2\xd4\x20\xb0\xbc\xf4\xf8\x78\xad\xce\x71\x83\xeb\xea\xc3\x2a\x3e\x28\x91\x73\xc5\xb8\x13\x78\xca\xf2\x03\x15\x16\x41\x25\xad\x9c\xb0\xa1\xa1\xe2\x4a\x55\xb3\x0e\x46\xad\x63\xb6\xec\x1a\xdd\xec\x12\x46\x5d\x27\x98\x94\x77\x66\x5a\xf9\x81\x15\xa4\xfd\x20\x9d\xf4\xf1\x4c\xd8\xb5\xf0\xdd\x04\xe6\x0d\xf2\x0a\xc6\x8f\x84\xef\x67\xad\x29\x1b\xcf\x4e\xba\xc7\xd5\x58\xbf\xa1\x03\x86\x0e\x1a\x3a\x24\xd4\xca\xba\x79\x27\x90\x75\x18\x5d\xb8\x12\xcc\x84\xcb\x10\x1a\xcf\x06\xac\x1a\xeb\x57\xbd\xea\xf9\x49\x8c\x0d\x18\x3a\x68\xe8\x90\xd0\xa3\x56\x26\x6f\xe3\xa8\x41\x98\xa1\x4d\xa2\x6f\xa2\xa9\xc4\x6f\x05\x10\x54\x71\x05\x5d\x07\x8c\x33\x1c\xb1\x73\xae\x17\xc4\x47\xfd\x89\x74\x2a\x3e\x92\x9f\xf0\xe3\x63\x6e\x82\xf1\xff\xc8\xb1\xf4\xa4\x95\x75\xf7\x78\xf9\x18\x57\x3b\x3e\xe6\x59\x8e\x9f\xb1\x02\xd7\x4b\xa8\x27\x43\x95\x1a\xcd\x7b\x56\xd6\x4d\xb9\x6a\x5f\x8d\xfd\xfe\xd8\x53\x96\x33\x91\xb7\x26\xec\xf8\x98\x6d\x65\x13\xaa\xc2\x27\xd4\x91\xbc\xef\xa7\x2d\x27\x36\xfa\xf8\xe8\xe1\xf8\x51\xdb\xf3\xd3\xae\x93\x50\xfd\x7b\xfa\x62\x07\x5d\x27\xb0\x9d\x20\x3e\x36\x9d\xb3\x13\x2a\xb0\x5f\x0e\x7a\x73\x19\x2b\xed\xec\x55\xc9\x49\xcb\xf3\xed\x60\xf8\xb9\xb1\xc7\xe2\x0f\x6f\xda\x71\x3c\xe3\xb6\x17\x3f\xec\x24\xdd\x54\xda\x99\x48\xa8\xd8\x33\x99\xbc\x67\x65\xe2\x8f\xb9\x5e\xd6\x4f\x28\x27\x17\xb2\xfe\xf0\xe0\x5e\x25\xcb\x61\x67\x77\x7f\xdf\xf0\x70\xbf\xba\xfb\x6e\xc5\xcb\xbe\x3b\x86\xfb\xfb\xd5\x01\xd5\xa7\x12\x21\xbf\x7f\x78\x60\x43\xb5\x6f\x78\x88\x97\xf7\x86\x66\xfb\xfa\xfb\xd4\x2b\xaf\xc8\x96\xfd\xc3\x03\x7d\xf7\xa9\x03\xaa\x5f\x25\xd4\xc0\x5e\x19\xbb\xf4\x06\xcf\xd8\x11\x7e\xd1\x9b\x7a\x8e\xa9\x9e\xa5\x22\x2d\xeb\x79\x5a\xa3\x4b\x54\xa8\x97\xe8\x85\x7a\x49\x38\x8e\xeb\x36\xd5\x8b\xf4\x42\x83\x08\xf4\x36\x95\x69\x19\x74\x8e\x0a\xb4\xac\x67\xa9\x44\xab\x7a\x9e\x56\x95\x9e\x63\x39\x15\xd8\xfa\xa2\x9e\xa1\x82\x9e\xd5\x0b\xb4\x44\x05\x2a\xd2\xaa\x5e\xa0\xab\xd7\xd9\x42\x6b\x54\xbc\xce\xbe\xb3\x74\x85\x56\xa9\xc8\x56\xb4\x46\x25\xb6\x9d\xa1\x22\x5d\x66\x47\x54\xa6\x25\x45\xa5\x30\x81\x12\x3b\xd3\xaf\x51\x89\x4a\x8a\xae\x50\x81\x96\xa8\xa8\x67\xf4\x29\x2a\xd1\x0a\x95\xf5\xac\x3e\xad\xf4\xac\xa2\x72\x28\xb9\x48\xcb\x54\xa6\xab\x3c\x86\xe8\x47\x7a\x96\xd6\xa9\xa8\x4f\xd1\x1a\x95\xd9\x5b\xd5\x79\x7a\xa1\xea\x34\xbd\xd0\xe4\xac\x66\x01\xb2\x95\x9e\xe3\xe3\xc3\x54\x56\xfe\x17\x61\xd6\x9f\x79\x8d\x60\xdf\x96\x66\xea\xd7\xa9\xa0\x17\x55\xd8\x8e\x15\x6e\x9b\x69\x46\xb5\x41\x98\xc9\x25\x2a\xe8\x39\x6e\x52\x49\xd1\x52\x58\x8a\x55\xbd\xc8\x2d\xe3\x56\xeb\x93\x54\xd4\x73\xfa\x64\x78\x44\xb1\xde\xf9\xe6\xde\xd0\x7a\x5e\xcf\xea\x39\x3d\xc3\xf9\xf0\x8a\xf3\x0e\xf3\xaa\x3b\x70\x5d\x02\xe1\xd2\x70\x3a\xb4\xd2\x18\x35\xf7\x5d\xbf\xce\x65\x08\x5d\x9e\xae\xd6\x17\xd9\xc7\x1a\x15\x68\x5d\xcf\xe8\x45\xba\xbc\xd1\x13\xd0\xb7\x25\x9a\xca\xa2\x36\x25\x16\x73\x21\x4f\x83\x7e\x48\xeb\x54\xd2\xb3\x54\xd8\xd8\x79\xb6\xb6\x8c\x6c\x7c\x81\xca\x74\x51\x2f\xe8\x39\x66\x15\x2d\xd1\x32\xad\xf4\xd2\x92\x5e\xe0\x45\x83\xba\xac\xe7\x68\x59\xcf\x88\x80\x8a\xbd\x61\xdf\xab\x04\xa0\xf3\x54\xa6\x15\x3d\xcf\x05\xfd\x78\x40\xde\x78\xc0\xc7\x02\xd2\x26\xc7\xac\xf3\xb5\xa6\x2b\x74\x89\x05\xfa\x24\x83\x55\x9f\x50\x21\x5b\xa4\xab\x1f\xd1\x7d\xa3\x2f\x01\xe9\x9a\x5c\xc4\x9a\x84\x9a\x26\xb3\xce\xfe\x69\x65\x03\x25\x97\x43\x2c\x84\x4d\x5a\x66\x40\xd1\x3a\x2d\x6f\xd1\x95\xfe\x16\x67\xa0\x67\xe8\x1d\x61\xe7\xaa\x30\xf8\x0e\x95\x59\x50\xd0\x33\x54\xd2\xaf\x32\xe8\xb6\x12\x5b\x38\x07\x37\xdd\x94\xf4\x89\x6a\x27\xd2\x1e\xbe\x75\xf3\xb4\xca\xc3\x68\x6b\x4e\x6b\xee\x0a\x95\x1e\xac\x60\x5e\x3a\x14\xde\x82\xf0\xa2\xb2\xc3\xf3\x1b\xd5\x31\xed\x29\xaa\x7a\xa8\x2a\xc3\x9c\xe2\x3a\xd5\x8f\x80\x42\x53\x0f\x21\xfa\x69\x45\x9f\xd9\x44\x45\x53\xbb\xa5\x46\xab\xca\x55\x5d\x0f\x07\x07\xcf\xbc\x25\x2a\xd3\x25\x33\x40\xe4\xbc\xda\x71\xc1\x37\xf8\x1c\x15\xf5\xac\x5e\xd4\xaf\x6d\x2e\x4f\x72\xbb\xc3\x89\x17\x96\x94\x7b\x1e\xd6\x43\xa2\x3e\x57\x3f\x50\xea\x3f\x56\xf5\x65\xfc\x08\xdf\xb9\x86\xad\x1f\xf2\xbd\xbb\x10\x2a\xb8\x3a\x25\x89\xe5\x02\x95\xf5\x89\x10\xf8\x6b\x1b\xa2\x4a\xd6\xb2\x99\x85\xfc\x7f\xd8\x5c\x3e\x70\x0d\xf9\xe0\x35\xe4\x43\xcd\xe5\x15\xe0\xcd\x37\xd7\x1b\x14\x5d\x4b\xdb\x30\xb3\x9b\x5a\x55\xcd\xe3\x0b\xa6\x60\x65\xbd\x68\xe0\x10\xfe\xb5\xf2\x1f\x8f\x3e\x29\x7f\xae\x1b\xeb\xc1\xaa\xf5\xd0\xe6\x9a\xbe\x1b\x36\xbd\x0a\x4f\x3f\x68\xf6\x61\x68\x68\x58\xc3\xe7\x43\xbe\x94\x5b\xed\x77\xb3\xed\x1f\xd2\xf3\x25\x34\x7e\x12\xcc\xc7\xa4\xf6\x42\x34\xb9\x23\x75\x1f\x17\xfc\x37\x00\x00\xff\xff\x40\xe9\x9e\xde\x7b\x15\x00\x00"

func localesRuLc_messagesWidgetMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesWidgetMo,
		"locales/ru/LC_MESSAGES/widget.mo",
	)
}

func localesRuLc_messagesWidgetMo() (*asset, error) {
	bytes, err := localesRuLc_messagesWidgetMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/widget.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/widget.html":      templatesViewsWidgetHtml,
	"locales/ru/LC_MESSAGES/widget.mo": localesRuLc_messagesWidgetMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"widget.mo": &bintree{localesRuLc_messagesWidgetMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"widget.html": &bintree{templatesViewsWidgetHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
