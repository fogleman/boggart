// Code generated by go-bindata.
// sources:
// templates/views/releases.html
// templates/views/update.html
// assets/vendors/jQuery-Smart-Wizard/js/jquery.smartWizard.js
// locales/ru/LC_MESSAGES/ota.mo
// locales/ru/LC_MESSAGES/releases.mo
// DO NOT EDIT!

package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsReleasesHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x59\x6f\xe3\x36\x10\x7e\xdf\x5f\x31\x50\x53\xc8\xc1\x46\xd2\x26\x7d\x29\xbc\x56\x8a\x62\xb7\x40\x17\xd8\xb6\x41\x36\xdb\xd7\x05\x2d\x8e\x2c\x3a\x34\xa9\x92\x94\x8f\x1a\xfe\xef\x05\x75\xd8\xb2\x2c\xf9\xca\x01\xb4\xa8\x1e\x12\x9a\x73\xf2\x9b\x19\xce\x70\xb9\x04\x8a\x31\x13\x08\x4e\x24\x85\x41\x61\x1c\x58\xad\xde\x0c\x28\x9b\x42\xc4\x89\xd6\xa1\xa3\xe4\xcc\xb9\x7d\x03\x00\x50\xdf\x8d\x24\xf7\x26\xd4\xbb\xbe\x01\xbb\xd2\x93\x6a\x35\xd7\xde\xf5\x4d\xc9\xdf\x94\x99\x7f\x4b\x89\x40\x5e\xa3\xee\x72\x18\x66\x38\x36\x38\x72\xae\xe4\xe6\x76\xb9\x04\x76\xfd\xa3\x00\xe7\x1e\x39\x12\x8d\xda\x01\x1f\x56\xab\x41\x90\xdc\xb4\x08\xd4\x9d\xe5\x48\x54\xcc\xe6\xce\xed\x20\xa0\x6c\xda\xb0\xdf\xb2\xb5\xe5\x52\x05\xcc\x7e\x1b\x86\x0c\x39\x7a\x0a\x75\x2a\x85\x66\xd3\xb6\x33\xe4\x22\x39\xdf\x96\x10\x14\xa2\xda\x28\x96\x22\x05\x4a\x0c\x29\xf6\xa9\xa9\xe9\x03\x21\x67\x8a\xa4\x0e\x68\xb3\xe0\x18\x3a\x33\x46\x4d\xd2\xbf\x7e\xf7\xee\xfb\x0e\x4b\x85\xb5\x04\x09\xdd\x47\x57\xdd\xc4\x52\xc1\x06\xf6\x3f\x51\x69\x26\x45\x85\xba\x49\x4e\x90\xfd\x39\x32\x4c\x0a\x7d\x96\xec\x17\xf6\x37\x9e\x25\xf8\x21\xc1\xe8\x51\x67\x93\xf3\x3c\x56\x51\xc2\x0c\x46\x26\x53\xe7\x59\xbf\x23\x26\x39\x46\x70\x10\xec\x8b\x82\x95\x3d\x10\xc3\xa1\xa4\x8b\x6e\xfa\x72\x09\x8a\x88\x11\xc2\x05\xbb\x82\x0b\x55\x94\x0e\xf4\x43\xf0\xcb\xb5\xb6\x15\xdf\xad\xfd\x60\x86\x50\x7b\xe4\x4a\xb1\x5f\x26\x09\xac\x56\xd6\x32\x8b\x37\x94\x4f\xfa\x43\xa6\x14\x0a\x63\x11\xd1\x29\x11\x55\x15\x70\x32\x44\x0e\xf9\x5f\x4f\x67\x51\x84\x5a\x3b\x1b\x18\xa3\x42\xc8\x81\x8b\x1c\x49\x2b\x68\x89\x28\x68\x81\xec\x1e\x68\x2a\xff\xf6\x32\x40\xa3\x90\x87\x46\x78\x23\x25\xb3\xd4\x01\x25\x6d\xa5\x15\x3f\x0e\x2b\xc9\x15\x11\x48\x14\xc6\xa1\x13\x48\x43\x82\xf2\xe4\x41\x1d\x9f\x4f\x1f\x61\xb5\x0a\xa8\x9c\x09\x2e\x09\x75\xc0\x10\x35\x42\x13\x3a\xdf\x86\x9c\x88\x47\xa7\xe6\x05\x58\x4f\x4a\x3c\xf2\x35\x8b\x64\xb1\x39\xd7\x47\xba\x93\xbb\xc4\x2a\x9d\x31\xd1\x10\x13\x2f\x66\x1c\xbd\x9a\x03\xf6\xc6\x0d\x9d\x35\xde\x1f\xd7\x14\x0b\xb8\xbd\x32\xd9\x91\x67\x0f\xc8\xed\x9b\xa3\x38\x8b\xc4\x10\xd8\x96\x1b\x46\x65\xb8\x2f\x21\xbb\x75\xf9\x65\xa6\xd8\xc2\xdd\x68\xae\x97\xf1\x29\x7a\x07\xc3\xcc\x18\x29\xc0\x2c\x52\x0c\x9d\xe2\xc7\x4e\x74\xa8\x2d\x2c\xb5\x13\x9c\xfc\x0e\xf7\x8c\x1c\x8d\x2c\xb2\x13\x49\x09\xaf\xf6\xca\x68\x7f\x57\xdf\xcc\xd7\x5e\x19\x87\x0f\x52\xc4\x4c\x4d\x20\x4b\x47\x8a\x50\x04\x23\xa1\xaa\xd9\xf6\x32\xdb\x52\x12\x11\xce\x87\x24\x7a\x0c\x9d\x92\xf1\x6b\xa1\xa6\xe7\xee\xe4\xa0\x7b\x05\x31\xe1\x1a\x2f\xdf\x9f\x90\x4c\xd0\x96\x50\x44\x29\x39\xf3\x22\xa6\x22\x8e\x9e\xad\x9b\x66\x4a\x95\x4e\x00\x49\x53\xce\x22\x62\xf2\x26\x72\x62\x76\xe5\x96\x83\x22\x0e\x27\x48\xfc\x5b\xa2\x08\x44\x50\x50\xa8\x0d\x51\x66\x1b\xa7\xb3\xa3\x6b\x2b\xe9\xe9\xc1\x8d\xb8\xcc\xa8\x97\xa5\xf6\x4a\xf0\x08\x37\x47\x45\x17\x66\xcc\x24\xd5\x71\x5e\x29\xd4\xeb\x9e\x70\xdc\x1d\x04\xc7\x66\xc7\x8c\x28\xc1\xc4\xe8\x45\xd2\x43\xe1\x44\x4e\xf1\x49\x05\x7e\x9f\xab\x68\xcb\x80\xa7\xc7\xde\x28\xa2\x93\xdd\x80\x17\x26\x5f\x21\xac\x9b\x90\x1e\xd6\xbb\x33\xc4\xef\xb2\x1c\x33\x2a\xd4\x61\xb4\x73\xe7\xd1\x33\x46\x5d\xb0\x9a\x3b\xcf\x12\x6e\x34\xac\xd3\x15\xd8\xb9\xf3\xa0\xe0\xfe\xa1\xf3\x30\xf0\x83\x60\xcf\xd8\x39\x08\xf2\x07\x4c\xcb\x83\xe9\xe0\xf3\xab\xf6\xb3\x5c\x96\xff\x6a\xe5\x5d\x7b\xb4\xda\xd1\xd8\xa9\xfc\x5c\x2e\x41\x1b\x62\x58\xf4\xeb\xc3\x6f\x9f\xa1\x57\xac\xbf\xde\x7f\x06\x27\xa0\x44\x27\x43\x49\x14\x0d\x88\xd6\x68\x74\x30\x45\x41\xa5\xd2\xc1\xfa\xb5\xa5\x7d\x81\xc6\x1b\xea\x20\xd2\xc5\xee\x43\xb1\x3b\x94\xd2\x68\xa3\x48\xea\x4f\x98\xf0\x23\xad\x9d\xb2\x6d\x3e\xa3\xd5\xcd\x2b\xaf\x72\x60\xb3\xb3\xdf\x81\x76\x54\xc6\xfa\x19\x31\x09\xc6\x3a\x18\xff\x95\xa1\x5a\xf8\x35\x58\xac\x2f\xe3\x97\xc0\x62\xa8\xad\xc1\xce\x00\xbc\x88\xcd\x0d\xda\x0d\xdb\xb5\x30\xbc\x82\xf1\xf2\xec\x9d\xb1\xdf\x36\x5f\xd4\x88\x8e\x14\x4b\x4d\xd9\xc1\x6a\x1d\x38\x18\x93\x29\x29\x88\xb5\x2e\x70\xd1\xa3\x32\xca\x26\x28\xcc\xa5\xaf\x90\xd0\x45\x2f\xce\x44\xfe\x32\x87\xde\x25\x2c\xb7\x0a\x73\xc6\x04\x95\x33\x7f\x7b\xd2\x80\x10\x36\x12\x8c\x5e\x55\x3d\xbe\x29\x6c\xbf\x29\x51\x90\x41\x08\xee\xd6\x5b\xc8\x85\xb7\xc0\x28\xbc\x05\x37\x28\x87\x23\xf7\xfd\x6e\xc7\x66\x31\xf4\xf6\xa8\xb6\x5f\x06\x6f\x43\x70\x7f\x2a\xb9\xc2\x6b\x77\x87\xab\x65\x12\xb8\xf0\xc9\x98\xcc\x7b\xed\x1a\x2d\x88\x7d\x70\xef\xfe\xf8\xf2\xe0\x5e\xb5\xdb\x54\xbc\x0f\x59\x3b\xad\x7c\xa9\xf5\x6b\x00\xa9\x2e\xdf\xd7\x47\xb4\x19\x96\x71\x03\x61\x18\x82\x1b\x13\xc6\x91\xba\xfb\x84\xec\x27\x70\x06\x77\xbf\x4b\xc3\xe2\x45\xc7\x41\xb6\x0e\x65\x9b\x77\x1f\xdc\x5f\x94\x92\xaa\xe3\x58\x5b\xfc\x38\x37\x7d\x50\xfe\x04\xb5\x26\x23\x3c\x42\xa0\x40\x0d\x8f\xd4\x9f\x30\x8a\xfd\x22\x8d\x0f\x33\x6b\xb3\xe0\x4c\x8c\xfa\xe0\xae\x2b\xe1\x87\xdd\x38\xd7\xbf\xd5\xe5\xfb\x4e\x7a\x7b\x37\xdb\xdd\x6d\xea\x58\x35\x12\x74\xbb\x32\x8a\x69\xa8\x51\x18\x6d\x31\x7c\x8e\xdc\xeb\xac\xa5\x62\x92\xec\x10\xfd\x3f\x35\xff\xc3\xa9\xd9\x24\x0d\x82\xe2\xda\xaf\x8d\x4c\xff\x04\x00\x00\xff\xff\x8c\xd3\x7c\x4a\xe6\x17\x00\x00"

func templatesViewsReleasesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsReleasesHtml,
		"templates/views/releases.html",
	)
}

func templatesViewsReleasesHtml() (*asset, error) {
	bytes, err := templatesViewsReleasesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/releases.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsUpdateHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4f\x6f\xda\x4e\x10\xbd\xf3\x29\x46\x9b\x48\x81\x03\xac\x30\x1c\x7e\xd2\xcf\x70\xa9\x54\xf5\x90\x56\x6d\xd3\xb4\x47\x34\x78\xc7\xf5\xa2\xf5\xae\xbb\xbb\x26\x10\x8b\xef\x5e\x19\x43\x6a\x1c\xfe\x34\x04\x55\x39\x79\x3c\xf3\xde\xcc\xf0\xbc\x3b\x4c\x51\x80\xa0\x58\x6a\x02\x16\x19\xed\x49\x7b\x06\xab\x55\x2b\x14\x72\x0e\x91\x42\xe7\x46\xcc\x9a\x07\x36\x6e\x01\x00\xd4\xbd\x91\x51\xdd\x54\x74\xfb\x01\x94\x96\x4b\xb7\xd6\xc2\x75\xfb\xc1\x06\xdf\xe4\x2c\x26\x19\x6a\x52\xb5\xe8\x73\x84\x97\x5e\x51\x03\xb1\x46\x25\xc1\xb8\x28\x40\xf6\xff\xd3\xc0\xee\x33\x65\x50\x80\x25\x45\xe8\x88\x41\x0f\x56\xab\x90\x27\xc1\x1e\x5a\xbd\x65\x45\x68\x63\xb9\x60\xe3\x90\x0b\x39\x6f\x74\xb1\xc7\xb5\xd3\xd8\x56\x9e\x03\x35\xa4\x18\xb1\x07\xf9\x88\x56\xb0\x2d\x27\x36\x36\x9d\x54\x3e\xa8\x1e\x93\xc4\x58\xf9\x68\xb4\xc7\xa6\x08\x4f\xb9\x72\xb5\xa5\x6f\x28\xce\x53\xe6\x0e\xa0\xd7\x0c\x25\x0f\x07\xd7\x00\x84\xc4\x52\x3c\x62\x57\x65\xaa\x6e\xff\x48\xae\x27\x8a\xcb\x50\x6f\xfb\x28\x59\x13\x6d\xd8\xb8\x1f\xf2\xd2\x7f\x0e\x5d\x90\x8b\x2c\x1b\xdf\x79\xca\xa0\x1f\x4e\x2d\xf0\x71\xe8\x52\x54\x6a\xbc\xf9\x94\x53\xa9\xd1\x2e\x21\x96\x8a\x42\x5e\x45\xfe\xa6\x5a\xc8\xf1\x88\x32\xfc\x98\x34\x2f\xd5\x2d\x38\x5b\xb7\xe0\x32\xba\x05\x3b\xba\x7d\x27\x2b\xe3\x25\xe4\x6b\xf9\x48\xbc\x65\xe5\x06\x67\x2b\x37\xb8\x8c\x72\x83\xc6\x89\xfb\x69\x51\x10\x60\x96\x29\x19\xa1\x97\x46\xbf\x51\xe1\x86\x67\x0b\x37\xbc\x8c\x70\xc3\x1d\xe1\xde\x19\x1d\x4b\x9b\x02\xea\x72\xf4\x3a\x8f\xd6\xff\x03\xe1\x42\x9e\xab\x03\x91\xed\xdc\x3d\x39\xd7\xfa\x07\x32\x3f\x1b\xf9\xfb\x53\x1f\xbb\xfa\xc1\xeb\x52\x1f\xbb\x1b\x83\xd7\xa5\x3e\x76\x7a\x86\x2f\x49\x7d\xfa\xdf\xb2\xf6\xba\x31\x37\x8f\xa2\x00\xd2\xa2\xdc\x28\x5a\xb5\x4d\x23\x21\x14\xeb\x35\xa3\x24\x14\x05\x38\x8f\x5e\x46\x1f\xbe\x7d\xbc\x85\x76\x65\xdf\x7f\xbd\x05\xc6\x05\xba\x64\x6a\xd0\x0a\x8e\xce\x91\x77\x7c\x4e\x5a\x18\xeb\xb8\xb0\x26\x7b\x34\x9a\x66\x8e\x47\xee\xcf\x6b\x2f\x95\xba\x17\x39\xc7\x20\x46\xe5\xa8\x53\x96\xd8\xdf\xc1\xcc\x5d\xaa\xfe\xac\x51\x7e\xb6\x53\xfd\x44\x01\xe3\xb1\x99\x7a\xf6\x25\x27\xbb\xec\xde\xa5\x68\x7d\xf7\xc7\x7a\x05\x28\x6b\xcc\x7e\x95\xee\x9e\x2b\xdd\x95\xb7\x51\xa9\x12\xdf\x45\x56\x66\x1e\xfc\x32\xa3\x11\xab\x0d\x38\x3e\xc3\x39\x56\xc1\xda\xa9\xb8\x6e\x0b\x13\xe5\x29\x69\xdf\xe9\x59\x42\xb1\x6c\xc7\xb9\x8e\x4a\x3c\xb4\x3b\x50\xec\x7c\xf1\xeb\xf6\xcd\x55\xb5\x91\xdc\x74\xea\x6d\xb4\x3b\xff\xb7\x9a\xc0\xde\x34\xf7\xde\xe8\x4f\xb4\xf0\x37\x9d\x5e\x22\x05\x95\xa8\xfd\xa0\xcf\x96\xe6\xd2\xe4\xee\x24\xf0\xbd\xd4\xd2\x25\x7b\x60\xab\x8d\x1d\xf2\xea\x07\xd6\x4e\xdd\xef\x00\x00\x00\xff\xff\x4d\xbe\xb4\x09\xde\x0a\x00\x00"

func templatesViewsUpdateHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsUpdateHtml,
		"templates/views/update.html",
	)
}

func templatesViewsUpdateHtml() (*asset, error) {
	bytes, err := templatesViewsUpdateHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/update.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsVendorsJquerySmartWizardJsJquerySmartwizardJs = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x3a\x5b\x6f\xdb\x38\xd6\xef\xf9\x15\xae\x6a\x58\x22\xac\xaa\x4e\x3f\x7c\x58\xac\x15\x05\x68\x9b\x16\xdb\x45\xa7\x9d\xdd\x74\xd0\x05\x06\xb3\x01\x23\x51\x36\x53\x89\xf2\x92\x94\x93\x54\xd1\x7f\x5f\xf0\x26\x51\x37\xd7\xe9\xb4\x0f\xfb\x92\xc8\xe4\xe1\xb9\xf1\xdc\x78\xc8\xb4\x24\x31\xc7\x05\x99\x5d\xe6\x90\xf2\xcf\xf8\x2b\xa4\x89\xc7\x21\xdd\x20\xee\x17\x3b\x31\xc3\x40\xc5\xb7\x98\x05\x6a\x30\x52\xff\x42\x39\xa4\x01\x22\xfd\x5f\x0d\xc6\x25\xbd\xe4\x68\xf7\x2e\xb9\x33\xe3\x01\x43\x19\x8a\x39\x4a\x14\x00\xe3\x68\xc7\xa2\xb9\xa6\x02\x82\x78\x8b\xb3\x84\x22\xe2\x39\x65\xe6\xd8\x3f\x33\xdc\xf9\x09\x1d\xa0\x29\x14\x84\x23\xc2\x3f\xe3\x84\x6f\xa3\x95\x1a\xcb\xd9\xe6\x55\x71\x17\xcd\x3d\xf7\x2c\xc1\xfb\x59\x9c\x41\xc6\x22\x47\x8d\x3a\xe7\xf6\x98\x5e\xed\x9c\x9f\x3d\x4f\xf0\xfe\xfc\x0c\xce\xb6\x14\xa5\x91\xf3\xd4\x69\x20\xb2\x82\x21\xe7\xfc\x5f\x67\xcf\xa1\x06\x72\x35\x65\x94\xe5\x42\xb6\xd7\x05\xe1\x10\x13\x44\x0d\xbd\x06\x2c\x80\x49\xf2\x5a\x60\xf1\x1c\x66\x03\x1a\xd6\xb3\x02\x26\xd6\xb2\xf7\x05\x4c\x30\xd9\x8c\xac\x56\x80\x66\xd9\x75\xc9\xb9\x50\x74\x45\xd0\x1d\x5f\x8b\xd5\xf0\xdc\x5d\x1a\xf5\x66\xf0\x1a\x65\x1f\xd0\x1d\x5f\xba\x82\x65\x81\x87\x73\xea\x39\x42\x2e\xc7\x77\x9e\x3a\x36\x62\x85\x4a\x40\x3b\xc0\xdf\x51\xb4\xc7\x45\xc9\xc6\x51\xfe\xaa\x67\x8f\x47\x6b\x56\x38\xc0\x4f\x31\xc1\x6c\x3b\x8e\xf8\xad\x9c\x3b\x1e\xad\x82\x77\x40\x1d\xee\x21\x9d\x5d\x61\x82\x79\x64\x0c\xd7\x9b\x0b\x0d\x81\x4a\xcc\xa0\x2c\x7f\x29\x07\x5f\xc1\x83\x5b\x03\x0d\x90\x03\x42\x7b\x4d\x00\x77\x3b\x44\x12\x85\x52\x9b\x14\x08\xe7\x9e\x1b\x48\x93\x70\xfd\xce\x44\x10\x67\x38\xfe\xe2\x35\x8c\x80\xca\x9e\x0e\x52\x98\xa0\x8f\x25\xf7\x1c\x52\xd0\x1c\x66\x0e\x08\x29\xe2\x25\x25\xb3\x14\x66\x0c\x85\x35\x90\xc2\xc0\x2c\xbb\xc0\x7b\x16\xcd\x2d\x1f\x6b\x6d\xde\x4d\xf0\xde\x05\xe1\xc4\x64\x99\x75\xa5\x22\xf1\xb6\x10\x22\x69\x9c\xd6\x94\xb1\x79\x10\xe2\x54\x4b\x67\x36\x04\x51\x5a\x48\x87\x65\x8b\xc5\xd4\x4c\x90\x21\xb2\xe1\xdb\xf3\x15\xa8\xe6\x01\x82\xf1\x76\x12\x87\xdf\x68\x03\xfb\xc4\x28\x84\x21\xfe\x46\x40\x78\x95\xf0\x09\x52\xe6\x6b\xe2\x63\x26\x17\xad\x39\x2d\x51\x0d\x84\x36\xea\x93\xf9\xa8\x8f\x99\x4d\xd1\x52\x1d\xda\x31\xe5\x34\x3d\x7d\x75\x20\xfa\xc8\x0f\x61\xd3\x4e\x17\x28\x4b\x06\xe3\x93\xc2\x21\x27\xa6\x8c\x73\x8d\xf3\x63\xd3\x1d\x8b\x6b\x13\xca\xb8\x15\x93\x9e\x30\xca\x31\x3e\x26\x2c\x72\x53\xbc\x2d\xe8\xad\x88\xec\x43\x23\xec\x23\x6a\xb8\x9e\x46\xf6\x0a\xc6\x5f\x8e\xc4\x66\x74\x37\xc0\x85\x53\xef\xc9\xdc\x93\xae\x1b\x6c\x21\x53\x76\xea\xaa\x65\x17\x98\xc1\xeb\x0c\x25\x2e\x90\x70\xf3\x00\xb3\xb7\x1d\x6f\x6f\x0c\xcf\x84\x06\xa0\xfc\x5f\x2a\xf0\x8e\x47\x55\x4a\x0b\xa9\xb7\xf5\xbc\x97\x92\x96\xa7\x75\x28\x49\x8f\xa2\x09\x62\x98\x65\x92\x29\xdf\x08\x22\x93\x15\xf0\x35\x66\x00\xaa\xae\xc4\x35\xca\x18\x92\xb4\x53\x9a\x77\x9d\x78\x07\x29\x22\x9c\x79\x6e\x5a\xd0\xdc\x95\x9e\x97\xd2\x7c\xb1\x48\x69\xae\xfd\x09\x54\xe2\x9b\x95\xd7\x39\xe6\x1e\x08\xeb\xba\x3e\x99\xd2\xa7\x62\x23\xb8\xc6\x24\xf1\x1c\xa9\x4c\xa7\x75\x35\xa4\xd4\xd4\x02\x06\x98\x24\xe8\x4e\x69\x37\x8a\xfa\x3a\xe8\xcb\x70\x22\xd8\x17\xf6\x63\xd2\xf6\x04\x26\x19\xaf\x30\xbb\x28\x08\xea\x80\xa0\xff\x78\xd6\x6a\x13\xce\x15\xa0\x03\x9e\xad\x84\xe4\x7a\x59\x74\x0a\xaa\x2b\xe1\xa5\xaf\x95\xa9\x2b\xa6\x7d\x7b\x79\x38\x54\xc2\x20\x66\x7d\x41\xf7\x1f\xe0\x1e\x6f\xa0\xf8\x09\xaa\xb9\x97\x14\x71\x99\x23\xc2\x81\x98\x2a\x77\x5e\x4f\x35\x28\xb8\xdd\xe2\x78\x1b\x45\xff\xf7\xd7\x31\x97\x90\x9b\x38\xeb\xc0\xfd\x65\xd4\xda\x6b\x19\xa6\xae\x76\x14\x89\xcd\x95\x01\x4f\xa7\x9f\x70\x44\xaa\x81\xde\x43\x9d\xbf\xec\xf5\x83\x3c\x36\xb4\x4e\x44\x84\x37\xbc\xcc\x32\xb9\x40\x88\x6b\x69\xdf\xb7\x6d\x0e\x04\x14\xe5\xc5\x1e\x99\x0a\x44\x97\x5d\x4e\x6f\x3c\x91\x1b\x63\xa5\x87\x44\x3b\x9c\xd3\x33\xb8\x1e\xf2\xce\xc6\xfa\x2b\xad\xb8\x1f\xc0\x4f\x43\xde\xe6\x49\x32\xf9\x08\x7e\x4e\x65\x0a\x39\x00\x2e\x13\x57\x9b\x9f\xa4\x22\x75\x04\xb2\x2a\x10\xc1\xdb\x2e\x83\x31\xf2\x9e\xff\x3b\x58\x3e\x7d\xee\xbb\x4f\x5d\xd0\xc3\xb4\xc5\x09\x92\x31\xd8\x5e\x4d\x51\xe6\xf8\x78\x79\xaa\x92\x99\xda\x69\xc1\x46\x6f\x87\x7d\x86\xe4\x46\x36\x5e\x28\xb8\xd0\x63\xa3\xf2\x1d\xcb\x95\xa1\x69\x19\xe2\x80\xb4\x09\x00\x02\x50\xd3\xec\xbb\xb2\x81\x51\xd5\xc9\x0d\xbc\x2b\x69\x16\x75\x0d\x52\xe7\xa9\xdf\xfe\xf9\xde\x06\xba\x4a\x20\x87\x93\x90\x17\x90\x43\x09\x2d\x82\xbd\xe6\x4e\x73\x10\x88\x85\x9e\xdb\x4e\xb8\x8a\xb8\xe0\xe4\x43\x99\x47\xcc\x84\x6e\x11\x08\x34\xb1\xc5\x42\x7f\x58\xa5\xc9\x20\x4c\x68\xea\xaf\x61\xbc\x45\x8b\x45\x8b\x1f\x54\x57\x6c\x5b\xdc\x0a\xda\x3d\xc5\x84\x6d\x3c\x17\xf8\xaf\x20\xdd\xb0\xa8\x2a\x69\xb6\xd6\xe4\x7c\x7e\xbf\x43\x6b\xe7\xd7\x8f\x97\x9f\x1c\x5f\xf0\xbd\x56\x45\xcd\x15\x29\xf3\x6b\x44\xd7\x9a\xe7\x1a\xc8\xc9\x4f\x12\x58\x24\x0e\xc7\xbf\x46\x69\x41\xd1\x25\x22\xc9\x7a\x90\x52\x55\xdd\x12\x08\xa6\x44\x94\xf1\x55\x69\x34\x05\xa6\xad\xaf\xf6\x59\x19\xc7\x88\xb1\x16\x90\x22\x36\x0e\x8b\x53\x31\xb7\x58\x50\x64\xd7\x72\x93\xfa\xf7\x45\x55\x06\x42\x69\xbe\x3d\xab\x0d\xb6\x3c\xcf\x24\xa1\x70\x5a\x89\x75\x6d\x6d\x95\xb4\x0b\x50\xb5\xfa\x9c\x07\xe8\x8e\xcb\x8a\xce\x0c\xf9\x36\xa8\xa7\x75\x08\xa4\x3f\x07\x62\xaa\x85\x04\x26\xe5\x1e\x20\xae\x5d\x4f\xcf\xff\x69\x1f\xd0\x01\xbc\x0f\x33\x8c\xee\x38\x35\x0b\x9f\x8c\xe4\xdc\x6f\x15\x32\xef\x11\xdc\xcb\x94\xf0\x88\x5a\xc6\xe7\x85\x9c\x61\x87\x8b\x9b\x06\xb5\xaa\x6f\x74\x76\xf2\x34\xa6\x03\xc5\xcd\x64\x49\xbe\x45\x78\xb3\xe5\xde\xa8\x81\x14\x25\x47\xf4\x6f\x0a\x00\x28\x15\x8a\x9a\xf2\x75\xdb\x16\xe8\x0b\x12\xf6\x07\x8c\xcb\x0f\x33\x3f\xa7\x90\x30\x2c\xbe\xdf\xa4\x29\x8a\x79\x14\xb9\x2c\xc3\x09\x72\x85\x4f\xb7\xcc\x18\xd1\x02\x39\xf9\xdb\xce\x73\x52\xc8\x78\xb7\x64\x1a\x65\x5e\xc2\x5f\x14\xb7\x44\xaf\x10\x56\x8e\x78\xb9\xbb\x1c\xe0\x6e\xd6\xc8\x70\x6f\x2a\x88\x6f\x72\x2b\x4e\x85\x53\xcc\x36\x27\xc6\x23\x99\x15\xf0\xef\x7e\x1a\xa7\x52\x15\x19\x4a\xb9\xab\x0c\x52\x14\x69\x6f\xb2\xfc\x3d\x4a\x79\xb4\x0a\x7b\x23\xa7\x11\x29\xb3\xac\x3f\xda\x0e\xc6\x25\x7d\x93\x21\x51\xa2\xe9\xf5\xad\xb3\x9c\x77\xad\x03\x54\x1d\xb4\xf3\xc1\xc9\x68\x79\xba\x0a\x2d\x90\x17\xd1\x2a\xec\x63\x7f\x36\xaa\x5e\x69\x98\x9f\xf5\xf9\x49\x45\x91\x0e\xa9\xee\xb2\xae\x3d\xeb\x65\xcb\x17\xdf\xa2\x7d\xba\x5a\x1e\x41\xfc\xa4\x15\x3f\x8a\x0e\xcb\x7f\x54\x75\xd0\x9b\x7a\x1c\xcb\xab\x67\x82\x88\x31\x96\xef\x22\xd2\x56\x82\x8f\xc7\x03\x09\xce\x21\x47\x5e\x25\x6c\x6d\xdd\xe5\xad\xf6\x47\x7c\xe1\xbb\xa8\x98\xa4\x29\x0b\xf8\xb1\x6d\x8e\x65\xd7\x0d\xa5\xdc\xf1\xed\x0d\x00\x3a\x2b\xf7\xd8\xb4\x35\x3a\xca\xe4\xf1\xce\x38\x1e\x0b\x34\xbf\xe3\x41\x4a\xd5\x09\x47\x90\x30\x47\x29\x91\xcf\x9b\x9a\xd4\xac\xea\x67\xc6\xfe\xf2\x6a\x4a\xcd\x13\x45\x7d\x38\xb9\x2d\xc3\xa2\x7e\xdc\xa4\x27\x4e\x05\x47\xc2\x1f\xc6\x6d\x35\x66\x6d\x8e\x0f\xf9\x96\x75\xb2\xb8\x82\xc9\x4d\xc9\xf8\x2b\xd9\x9f\x30\x67\xbe\x6f\xa5\xf4\x4b\x5d\x82\x4c\x66\xf4\x1d\xa4\x0c\xbd\x13\x07\xc6\x26\x19\x2b\xd2\x2e\x45\x99\x0b\x80\xc9\xef\x16\x5c\x63\x04\x36\xdc\x78\xda\x37\xe4\x3b\x5d\x0d\xb3\x7e\x3a\xe9\x9f\x0c\x92\x03\x31\x67\xe5\xbf\x97\xf9\x0e\x93\x0d\xa8\xd2\x82\x7a\xb2\x1b\x30\xc8\xe5\xcb\x17\x21\x3e\xeb\xd4\x4a\xaa\xde\x0c\xf1\x72\x69\x6a\x53\xbd\xb3\xd2\x72\xb1\x2a\x17\xa5\x65\xda\x3a\x3e\xe2\x5c\x1c\xdf\xc7\x0a\x89\x9a\x5d\x9d\x8f\x54\x5d\xd3\xdd\xad\x7e\x8f\xf9\xa2\x35\xb7\x81\x02\x84\x33\x2a\xb6\xd8\xc7\x06\xf0\x10\x72\x13\x6d\xba\x07\xe4\x21\x5c\xc7\x80\x7f\x02\x1f\xe6\x44\x21\x37\xd5\x1b\xee\xca\xb3\x53\x70\x76\x84\xd6\x74\x93\xf3\xc7\x6b\x4c\x21\x3e\xac\x2d\x05\xf3\x73\x34\xa5\x70\x37\x5a\x92\x6a\x7a\x62\xab\xa9\x6d\x4d\x26\x4d\x53\xf2\xe1\x61\xac\x3f\xa3\x3a\x88\x8a\xe6\x90\x90\xe9\x83\xfe\x1c\x31\x0c\xf6\x46\x90\x51\x45\x36\x7d\xec\x1f\xbf\x8f\x06\x75\xb3\x93\x75\x68\xdd\x27\x06\x3b\x5a\xf0\x42\x9c\x9c\xdb\xb6\x5b\x64\x9d\x6e\xfb\xfd\xc7\xc1\x39\x47\xf0\x35\xb0\xdd\xb3\xc8\x6e\x1b\xca\xf8\x30\x19\x1e\x7a\x0d\x4f\x9b\xd8\x4a\x14\x04\x76\xf3\x6e\xa4\x23\x39\x29\x8c\xe9\x0d\x3e\x42\x9a\x67\x52\x9a\xd5\xf9\x0f\x61\x7e\xc4\xa1\xff\x8c\x38\x9f\x8a\x6e\x5d\x60\x4e\xe2\x95\x69\xc7\x98\xb3\xd9\x87\x32\x57\x72\x98\x1a\x3e\x5a\x2d\x16\xfa\xfb\x6c\xc0\x54\xaf\xe7\x3b\x38\xaf\x8f\xb3\xa3\xdc\xea\x3b\x19\x8a\xfa\x6a\x7f\x78\x30\xec\xad\x9a\xcf\xf3\xa1\xfe\x46\x7b\xe3\xb2\x8b\x37\xd1\x21\x98\xcb\x4f\xff\x70\xf5\x30\x06\x34\xd5\x01\x9d\xea\x98\x0e\x8a\xa8\xfa\x64\x5c\x6f\x56\x76\xfd\xdf\x56\xdc\xea\x18\xc5\xa9\x56\xf6\x11\x4a\x6b\x83\xdc\x94\xe2\xe2\x92\x52\x44\x78\x57\x71\x8d\x5c\xc3\xa0\x34\x85\x47\x44\xe1\x5f\x10\x63\x70\x83\x5a\x3c\x39\xdb\x88\xb0\xe9\x9a\xa3\xac\xab\x84\x32\x57\xc9\xb2\xab\x26\x60\xec\xd7\x0c\x4d\x3c\x9f\x20\x24\xa2\xed\x80\x90\x7e\xad\x31\x79\x09\x7d\x88\x6b\x79\x4b\xdb\x35\x1a\x22\x8c\x46\x6d\xa1\xb9\xc5\xd5\xc3\xba\x49\x78\x88\xb9\xc7\xe1\x93\x96\x73\x80\x41\x0d\x3f\xc0\x67\xee\x92\x65\x18\x15\xa0\x45\x3a\xd3\x53\x51\xe4\x14\xd7\x37\x28\xe6\x0e\xa8\x34\x54\xa4\xa7\x02\xfd\x3b\x34\xa0\x66\x5c\xff\x57\x87\xf4\x06\xf5\xdc\x1b\xda\x31\x11\xbe\x03\xfc\xf1\x63\x86\x2b\x17\xba\xc0\xe4\xe2\xe3\x96\x77\x0c\x59\x62\x70\x64\xf9\x36\xae\x92\x14\xdf\xa9\x46\x5b\x3f\xff\xa8\xfe\x9c\x6e\xd3\x98\x26\x67\x97\x83\x41\xfb\xd2\x38\x6c\xfb\xb8\x45\x1d\x3e\x3b\x67\xcf\xb0\x03\xd1\xbe\x45\xe8\xdf\xae\x80\x4a\xb1\xb0\x8c\xcc\x25\x49\xa7\x2d\x28\x0e\xbf\x6c\xac\xa3\xa8\x57\xfd\xff\xc4\x7b\x9b\x1e\xd8\x8b\x95\x3c\xce\x63\x82\xb9\xbe\xa2\xac\xc3\x96\x87\x39\xa8\xe6\x41\x4a\x02\xd6\xea\xce\xf2\x47\xc4\xb7\x45\xa2\xb4\x25\xbb\xd2\x90\x6e\xe4\x15\x22\x93\x8a\xa0\xfb\xa8\x24\x09\x4a\x31\x41\x89\x79\xa7\xf1\xf1\xfa\x86\x29\x25\xf6\x65\x15\x00\xb7\xf8\x6b\x23\xab\x6a\xa8\x5b\x74\xd5\xf5\xaf\xb6\x4d\x45\x3a\x8a\x5c\x65\x9a\xee\xc3\xc3\x13\x35\xf4\xf0\xf0\xe4\x16\x7f\x55\xe8\xcc\xd3\xaa\xa6\x59\x5e\xd5\x7e\x5f\x9a\x20\x41\x29\x2c\x33\xce\x7c\xb3\xbe\x52\xb7\xa5\x0a\x8d\xe0\x88\xa0\xdb\xce\xcb\x2e\xcd\x61\xf3\xb4\x2b\x9c\x66\xd9\x17\x48\x4c\x2d\xd9\x72\x3f\x6a\x89\xbf\x2b\x06\xfe\x88\x22\xc7\xa8\xc5\x01\x15\xdd\x47\x07\xa1\x03\xb8\xdb\x65\xf7\xde\x2d\xfe\xea\xbf\xa4\x14\xde\xdb\xce\x9e\xe1\x18\xa9\x83\xab\xbc\x20\x38\x05\xcd\x5b\x03\xba\x37\xdd\x26\xf5\xee\xc4\x73\x7f\x91\xe8\x66\xee\x52\xe1\x5d\xba\xb3\xa4\x40\x6c\x46\x0a\x3e\x43\x77\x98\xf1\x59\x41\x66\x37\xff\x28\x11\xbd\x0f\xba\x7b\x52\xd7\x4a\x5f\x74\x1f\x45\xed\x7e\x37\x21\x5f\xef\xb9\x26\x67\x91\xaf\xc3\xc9\xad\x88\x2a\x93\x7e\xd6\x2b\xbf\x73\x4f\x2d\x9f\xba\xf8\xdd\xcb\xdc\xb5\x8c\x79\x7e\xbf\xfb\xba\x56\x6d\x62\xbf\xbd\x3e\x5b\x93\x32\xcb\x7c\xfb\x42\x4b\xa1\x6b\xeb\x44\x8d\x6a\x78\x18\xd1\x13\xa3\x95\xbc\x59\xd4\xbc\xdf\x59\xff\xfe\x87\xdf\x3c\x27\x5b\xbb\xe2\xaf\xeb\x77\x1e\x83\xad\x5d\xf3\xa5\x27\x14\xad\xb5\xab\xfe\xbb\x7e\xbf\x5b\xa0\x69\x58\xd7\x10\x4a\x98\xb6\x41\x61\x7e\x6b\x4c\xe2\x57\x1d\xd6\xc0\x53\x7b\x06\xc2\xff\x06\x00\x00\xff\xff\xb9\x56\x2d\x75\xa4\x28\x00\x00"

func assetsVendorsJquerySmartWizardJsJquerySmartwizardJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsVendorsJquerySmartWizardJsJquerySmartwizardJs,
		"assets/vendors/jQuery-Smart-Wizard/js/jquery.smartWizard.js",
	)
}

func assetsVendorsJquerySmartWizardJsJquerySmartwizardJs() (*asset, error) {
	bytes, err := assetsVendorsJquerySmartWizardJsJquerySmartwizardJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/vendors/jQuery-Smart-Wizard/js/jquery.smartWizard.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesOtaMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xcd\x8a\xd4\x40\x14\x85\x4f\xb4\xdd\x04\x15\x71\xed\xe2\xba\x70\xd0\x45\x8d\x49\xeb\x42\xaa\xbb\xba\xfd\x61\x06\xc4\x69\x94\x26\xe3\xca\x4d\xd9\xa9\xc9\x04\x93\xaa\x58\x55\x11\x85\x59\x88\x5b\xc5\x9d\x2b\x41\x7c\x05\x05\x71\x40\xf4\x19\xaa\xd7\x82\xbe\x80\x0f\x21\x49\x46\xc5\xbb\x3a\xdf\x3d\xe7\xfe\xfc\x38\x3b\x7a\x03\x00\x23\x00\xe7\x00\x4c\x01\x9c\x00\xf0\x00\x43\x35\x00\x4e\x03\x78\x0c\xe0\x14\x80\xe7\x00\x4e\x02\x78\x0d\x60\x1e\x01\x6f\x01\x1c\x07\xf0\x3d\x1a\xfa\x3f\x23\xe0\x0c\x80\x5f\x11\x10\x1d\x79\xc7\x8e\x76\x75\x37\xb0\x32\x7a\xaf\x2c\x98\x97\x0f\x47\xc6\x4b\xd4\x4a\xb7\xa3\xa5\xaa\x94\x74\xca\x0d\xb4\xdb\x14\x56\xe6\x0a\x4b\xd5\x18\xeb\xd9\xc2\x15\x65\xce\x6e\xb6\x85\x63\x99\xe1\x94\xab\x27\xd7\x1f\x95\xfb\xb2\x36\x9b\xb6\x8d\x77\xa4\xf3\x2c\xb3\x52\xbb\x4a\x7a\x63\x39\xdd\xe9\x2d\x5a\xb4\x56\xd6\x26\x37\x34\xfd\x2f\x3f\x8b\x77\xa4\x2e\x5a\x59\x28\x96\x29\x59\x73\xfa\xcb\x9c\x96\xad\x73\xa5\xd4\xf1\xe2\xf6\x62\x8b\xdd\x57\xd6\x95\x46\x73\x4a\x37\x93\xf8\x96\xd1\x5e\x69\xcf\xb2\x67\x8d\xe2\xe4\xd5\x53\x7f\xb9\xa9\x64\xa9\x27\xb4\xda\x97\xd6\x29\x2f\x76\xb3\x6d\x76\xed\x5f\xae\xfb\x67\x4f\x59\xb6\xa5\x57\x26\x2f\x75\xc1\x29\xbe\x57\xb5\x56\x56\x6c\xdb\xd8\xda\x71\xd2\x4d\x8f\x4e\x5c\x99\xd0\x20\x85\xbe\x90\x26\x42\xa4\xb4\xb1\x41\x9d\x4c\xce\x8b\x34\xa5\x39\x25\xc4\x7b\x9e\x89\xf1\x1f\x6b\x2a\xae\x76\xf2\x62\x1f\x9b\xa6\x09\x1d\x1c\x0c\x23\x33\x31\x4e\x2e\xd1\x9c\x52\xe2\x34\x9e\xe0\x6e\x76\x03\xe1\x7d\xf8\x14\xbe\x84\xc3\xf0\x79\xfd\x12\xe1\x5d\xf8\x10\xbe\x86\x6f\xe1\x63\x38\x5c\xbf\x58\xbf\xc2\xef\x00\x00\x00\xff\xff\xcf\xe7\x6b\x25\xfd\x01\x00\x00"

func localesRuLc_messagesOtaMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesOtaMo,
		"locales/ru/LC_MESSAGES/ota.mo",
	)
}

func localesRuLc_messagesOtaMo() (*asset, error) {
	bytes, err := localesRuLc_messagesOtaMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/ota.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesReleasesMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x3f\x68\x14\x4d\x18\xc6\x9f\xdd\x2f\x5f\xbe\x7c\x87\xff\xb0\x10\x0b\x85\x11\x34\x98\x62\xe3\x6d\xb4\xd0\x4d\x36\x31\xc6\x04\xc4\x1c\x84\x78\xda\x0f\x7b\xe3\xdd\x92\xbb\x99\x63\x76\x36\x1a\x49\x91\xdc\x21\xa2\x08\x8a\x68\xad\xc1\xc2\xf6\x08\x06\x93\x78\x8d\xad\xd5\x3b\xa5\x8d\xa5\xb5\x62\x65\x27\x7b\xbb\x2a\x4e\xf3\x3c\xbf\x77\xde\xbf\x9f\x8f\x0e\xbd\x00\x80\x12\x80\x13\x00\x9a\x00\x0e\x02\xe8\x23\x7f\x5f\x01\xfc\x07\xe0\x1b\x80\x03\x00\x7e\x00\x18\x01\x30\xec\xe4\x7a\xd8\x01\x86\x00\x1c\x77\x80\x61\x00\x27\x0b\x3e\xed\xe4\x75\x63\x85\xfa\x0e\x30\xe3\x00\x97\x1c\xe0\x08\x80\x35\x17\x38\x06\xe0\x91\x9b\xf3\x96\x0b\x1c\x02\xb0\xed\xe6\x7d\x3f\x14\xfc\xd1\xcd\xe7\x7e\x2a\xf4\x4b\x11\xff\xee\x02\x0e\x80\x7f\x00\xfc\x5f\xec\x3a\x54\xe8\x48\xa1\x6e\x71\xd7\x70\x71\xc3\xbf\x59\x70\x36\x32\xb1\x92\x09\x66\x75\xd4\x88\x8d\x88\x4c\xaa\x05\xe6\x1a\x22\x5a\x49\xd2\x16\xae\xaa\x3b\xb2\xa9\x78\x0d\x4b\xdc\x34\xb0\x2c\x5a\x6a\x55\xe0\x46\x7c\x4f\xe0\x96\xd0\x49\xac\x24\xa2\x54\x6b\x21\x0d\x96\x45\x5b\x69\xe3\x55\x92\x7a\x5c\xf3\xae\xa4\xf5\xc4\xab\xaa\x80\xd5\xc4\xea\xe5\x95\xb8\xc1\x5b\x6a\x5c\xa7\xa5\x45\x9e\x18\xaf\xaa\xb9\x4c\x9a\xdc\x28\x1d\xb0\xeb\x83\x2f\x56\x49\x35\x6f\xa9\x9a\x62\x53\x7f\xe5\x4f\x97\x16\xb9\xac\xa7\xbc\x2e\xbc\xaa\xe0\xad\x80\xfd\xe6\x80\x2d\xa7\x49\x12\x73\x59\xaa\x5c\xab\xcc\x7b\xc5\x2e\x01\xf3\xc7\xcb\xa5\x39\x25\x8d\x90\xc6\xab\xae\xb5\x45\xc0\x8c\xb8\x6b\xce\xb5\x9b\x3c\x96\x93\x2c\x6a\x70\x9d\x08\x13\xde\xac\x2e\x78\x17\xff\xe4\x65\xfb\xdc\x16\xda\x9b\x97\x91\xaa\xc5\xb2\x1e\xb0\xd2\x52\x33\xd5\xbc\xe9\x2d\x28\xdd\x4a\x02\x26\xdb\x03\x4c\xc2\xf3\x93\x2c\xb7\xa1\x3c\xe3\x97\xc3\xd0\x67\xa3\xa3\x2c\xb3\xe5\x53\xa1\xef\xb3\x19\x56\x66\xc1\x80\xa7\xc3\x89\x5f\x5f\x53\xe1\x85\xcc\x9e\x1d\xa4\x4d\xf9\x65\xb6\xbe\x9e\x97\x4c\x87\x13\xe5\x31\x36\xc3\x7c\x16\xb0\x89\x49\xd0\x73\xda\xa1\x3d\xbb\x69\x3b\xb4\x4d\xbb\xf6\x09\xe8\xa9\xdd\xb0\xf7\x69\xd7\x76\x68\x87\xf6\x6d\xc7\x76\xed\x06\xf5\x40\x6f\x06\xb8\x69\xbb\xd4\xa7\x7e\x16\xd8\xa2\x7d\xea\xd9\x07\xd4\xb3\x1d\xfb\x18\xf4\xd2\x76\x73\xf3\x9a\xde\x52\x8f\xde\x67\x1d\x32\x7c\x45\x3d\x7a\x47\x7d\xda\xb1\x1b\xa0\x67\x99\xd8\xcd\xc1\xa0\x62\x40\xd7\x3e\xa4\x5d\xda\xc3\xcf\x00\x00\x00\xff\xff\xe1\xfa\x3b\xe9\x02\x03\x00\x00"

func localesRuLc_messagesReleasesMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesReleasesMo,
		"locales/ru/LC_MESSAGES/releases.mo",
	)
}

func localesRuLc_messagesReleasesMo() (*asset, error) {
	bytes, err := localesRuLc_messagesReleasesMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/releases.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/releases.html":                               templatesViewsReleasesHtml,
	"templates/views/update.html":                                 templatesViewsUpdateHtml,
	"assets/vendors/jQuery-Smart-Wizard/js/jquery.smartWizard.js": assetsVendorsJquerySmartWizardJsJquerySmartwizardJs,
	"locales/ru/LC_MESSAGES/ota.mo":                               localesRuLc_messagesOtaMo,
	"locales/ru/LC_MESSAGES/releases.mo":                          localesRuLc_messagesReleasesMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"vendors": &bintree{nil, map[string]*bintree{
			"jQuery-Smart-Wizard": &bintree{nil, map[string]*bintree{
				"js": &bintree{nil, map[string]*bintree{
					"jquery.smartWizard.js": &bintree{assetsVendorsJquerySmartWizardJsJquerySmartwizardJs, map[string]*bintree{}},
				}},
			}},
		}},
	}},
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"ota.mo":      &bintree{localesRuLc_messagesOtaMo, map[string]*bintree{}},
				"releases.mo": &bintree{localesRuLc_messagesReleasesMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"releases.html": &bintree{templatesViewsReleasesHtml, map[string]*bintree{}},
			"update.html":   &bintree{templatesViewsUpdateHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
