// Code generated by go-bindata.
// sources:
// templates/views/releases.html
// templates/views/update.html
// assets/vendors/jQuery-Smart-Wizard/js/jquery.smartWizard.js
// locales/ru/LC_MESSAGES/ota.mo
// locales/ru/LC_MESSAGES/releases.mo
// locales/ru/LC_MESSAGES/update.mo
// DO NOT EDIT!

package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesViewsReleasesHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x59\x8f\xdb\xb6\x13\x7f\xcf\xa7\x18\xe8\xef\x3f\xe4\x45\x56\x52\x76\xfb\x52\x38\xd6\x16\x45\x52\xa0\x01\xd2\x36\x48\x36\x7d\x0d\x68\x71\x64\xd1\x4b\x93\x0a\x49\xf9\xa8\xe1\xef\x5e\x50\x87\x2d\xcb\x92\xaf\x3d\x80\x16\xd5\xc3\x2e\xcd\x39\xf9\x9b\x19\xce\x70\xb5\x02\x8a\x31\x13\x08\x4e\x24\x85\x41\x61\x1c\x58\xaf\x5f\x0d\x29\x9b\x41\xc4\x89\xd6\xa1\xa3\xe4\xdc\xb9\x7b\x05\x00\x50\xdf\x8d\x24\xf7\xa6\xd4\xbb\xb9\x05\xbb\xd2\xd3\x6a\xb5\xd0\xde\xcd\x6d\xc9\xdf\x94\x59\x7c\x4b\x89\x40\x5e\xa3\xee\x73\x18\x66\x38\x36\x38\x72\xae\xe4\xf6\x6e\xb5\x02\x76\xf3\xa3\x00\xe7\x33\x72\x24\x1a\xb5\x03\x3e\xac\xd7\xc3\x20\xb9\x6d\x11\xa8\x3b\xcb\x91\xa8\x98\x2d\x9c\xbb\x61\x40\xd9\xac\x61\xbf\x65\x6b\xc7\xa5\x0a\x98\xc3\x36\x0c\x19\x71\xf4\x14\xea\x54\x0a\xcd\x66\x6d\x67\xc8\x45\x72\xbe\x1d\x21\x28\x44\xb5\x51\x2c\x45\x0a\x94\x18\x52\xec\x53\x53\xd3\x07\x42\xce\x15\x49\x1d\xd0\x66\xc9\x31\x74\xe6\x8c\x9a\x64\x70\xf3\xe6\xcd\xff\x3b\x2c\x15\xd6\x12\x24\xf4\x10\x5d\x75\x13\x4b\x05\x5b\xd8\xff\x44\xa5\x99\x14\x15\xea\x26\x39\x43\xf6\xe7\xc8\x30\x29\xf4\x45\xb2\x5f\xd8\x5f\x78\x91\xe0\xbb\x04\xa3\x07\x9d\x4d\x2f\xf3\x58\x45\x09\x33\x18\x99\x4c\x5d\x66\xfd\x13\x31\xc9\x29\x82\xc3\xe0\x50\x14\xac\xec\x91\x18\x8e\x24\x5d\x76\xd3\x57\x2b\x50\x44\x8c\x11\x7a\xec\x1a\x7a\xaa\x28\x1d\x18\x84\xe0\x97\x6b\x6d\x2b\xbe\x5b\xfb\xd1\x0c\xa1\xf6\xc8\x95\x62\xbf\x4c\x12\x58\xaf\xad\x65\x16\x6f\x29\x1f\xf4\xbb\x4c\x29\x14\xc6\x22\xa2\x53\x22\xaa\x2a\xe0\x64\x84\x1c\xf2\xbf\x9e\xce\xa2\x08\xb5\x76\xb6\x30\x46\x85\x90\x03\xbd\x1c\x49\x2b\x68\x89\x28\x68\x81\xec\x01\x68\x2a\xff\x0e\x32\x40\xa3\x90\x47\x46\x78\x63\x25\xb3\xd4\x01\x25\x6d\xa5\x15\x3f\x8e\x2b\xc9\x15\x11\x48\x14\xc6\xa1\x13\x48\x43\x82\xf2\xe4\x41\x1d\x9f\x0f\xef\x61\xbd\x0e\xa8\x9c\x0b\x2e\x09\x75\xc0\x10\x35\x46\x13\x3a\xdf\x46\x9c\x88\x07\xa7\xe6\x05\x58\x4f\x4a\x3c\xf2\x35\x8b\x64\xb1\xb9\xd0\x27\xba\x93\xbb\xc4\x2a\x9d\x31\xd1\x10\x13\x2f\x66\x1c\xbd\x9a\x03\xf6\xc6\x0d\x9d\x0d\xde\xef\x37\x14\x0b\xb8\xbd\x32\xd9\x89\x67\x0f\xc8\xdd\xab\x93\x38\x8b\xc4\x10\xd8\x96\x1b\x46\x65\x78\x28\x21\xdb\x75\xe1\x77\xe8\xf9\x65\xa6\xd8\xc2\xdd\x6a\xae\x97\xf1\x39\x7a\x87\xa3\xcc\x18\x29\xc0\x2c\x53\x0c\x9d\xe2\xc7\x5e\x74\xa8\x2d\x2c\xb5\x17\x9c\xfc\x0e\xf7\x8c\x1c\x8f\x2d\xb2\x53\x49\x09\xaf\xf6\xca\x68\xff\xaf\xbe\x99\xaf\xbd\x32\x0e\xef\xa4\x88\x99\x9a\x42\x96\x8e\x15\xa1\x08\x46\x42\x55\xb3\xed\x65\xb6\xa3\x24\x22\x9c\x8f\x48\xf4\x10\x3a\x25\xe3\xd7\x42\x4d\xdf\xdd\xcb\x41\xf7\x1a\x62\xc2\x35\x5e\xbd\x3d\x23\x99\xa0\x2d\xa1\x88\x52\x72\xee\x45\x4c\x45\x1c\x3d\x5b\x37\xcd\x94\x2a\x9d\x00\x92\xa6\x9c\x45\xc4\xe4\x4d\xe4\xcc\xec\xca\x2d\x07\x45\x1c\xce\x90\xf8\xa7\x44\x11\x88\xa0\xa0\x50\x1b\xa2\xcc\x2e\x4e\x17\x47\xd7\x56\xd2\xe3\x83\x1b\x71\x99\x51\x2f\x4b\xed\x95\xe0\x11\x6e\x4e\x8a\x2e\xcc\x99\x49\xaa\xe3\xbc\x50\xa8\x37\x3d\xe1\xb4\x3b\x08\x4e\xcd\x8e\x39\x51\x82\x89\xf1\xb3\xa4\x87\xc2\xa9\x9c\xe1\xa3\x0a\xfc\x73\xae\xa2\x2d\x03\x1e\x1f\x7b\xa3\x88\x4e\xf6\x03\x5e\x98\x7c\x81\xb0\x6e\x43\x7a\x5c\xef\xde\x10\xbf\xcf\x72\xca\xa8\x50\x87\xd1\xce\x9d\x27\xcf\x18\x75\xc1\x6a\xee\xbc\x48\xb8\xd1\xb0\xce\x57\x60\xe7\xce\xa3\x82\x87\x87\xce\xe3\xc0\x0f\x83\x03\x63\xe7\x30\xc8\x1f\x30\x2d\x0f\xa6\xa3\xcf\xaf\xda\xcf\x72\x59\xfe\xab\x95\x77\xed\xd1\x6a\x47\x63\xa7\xf2\x73\xb5\x02\x6d\x88\x61\xd1\xaf\xf7\xbf\x7d\x84\x7e\xb1\xfe\xfa\xf9\x23\x38\x01\x25\x3a\x19\x49\xa2\x68\x40\xb4\x46\xa3\x83\x19\x0a\x2a\x95\x0e\x36\xaf\x2d\xed\x0b\x34\xde\x48\x07\x91\x2e\x76\xef\x8b\xdd\x91\x94\x46\x1b\x45\x52\x7f\xca\x84\x1f\x69\xed\x94\x6d\xf3\x09\xad\x6e\x5f\x79\x95\x03\xdb\x9d\xc3\x0e\xb4\xa3\x32\xd1\x4f\x88\x49\x30\xd1\xc1\xe4\x7b\x86\x6a\xe9\xd7\x60\xb1\xbe\x4c\x9e\x03\x8b\x91\xb6\x06\x3b\x03\xf0\x2c\x36\xb7\x68\x37\x6c\xd7\xc2\xf0\x02\xc6\xcb\xb3\x77\xc6\x7e\xd7\x7c\x51\x23\x3a\x52\x2c\x35\x65\x07\xab\x75\xe0\x60\x42\x66\xa4\x20\xd6\xba\x40\xaf\x4f\x65\x94\x4d\x51\x98\x2b\x5f\x21\xa1\xcb\x7e\x9c\x89\xfc\x65\x0e\xfd\x2b\x58\xed\x14\xe6\x9c\x09\x2a\xe7\xfe\xee\xa4\x01\x21\x6c\x25\x18\xbd\xae\x7a\x7c\x53\xd8\x7e\x33\xa2\x20\x83\x10\xdc\x9d\xb7\x90\x0b\xaf\x81\x51\x78\x0d\x6e\x50\x0e\x47\xee\xdb\xfd\x8e\xcd\x62\xe8\x1f\x50\x6d\xbf\x0c\x5e\x87\xe0\xfe\x54\x72\x85\x37\xee\x1e\x57\xcb\x24\xd0\xf3\xc9\x84\x2c\xfa\xed\x1a\x2d\x88\x03\x70\x3f\xfd\xf1\xe5\xde\xbd\x6e\xb7\xa9\xf8\x00\xb2\x76\x5a\xf9\x52\x1b\xd4\x00\x52\x5d\xbe\x6f\x8e\x68\x33\x2c\xe3\x06\xc2\x30\x04\x37\x26\x8c\x23\x75\x0f\x09\xd9\x4f\xe0\x1c\x3e\xfd\x2e\x0d\x8b\x97\x1d\x07\xd9\x39\x94\x6d\xde\x03\x70\x7f\x51\x4a\xaa\x8e\x63\xed\xf0\xe3\xc2\x0c\x40\xf9\x53\xd4\x9a\x8c\xf1\x04\x81\x02\x35\x3c\x51\x7f\xc2\x28\x0e\x8a\x34\x3e\xce\xac\xcd\x92\x33\x31\x1e\x80\xbb\xa9\x84\x1f\xf6\xe3\x5c\xff\xd6\x57\x6f\x3b\xe9\xed\xdd\x6c\x7f\xb7\xa9\x63\xdd\x48\xd0\xdd\xca\x28\xa6\xa1\x46\x61\xb4\xc5\xf0\x29\x72\xaf\xb3\x96\x8a\x49\xb2\x43\xf4\xbf\xd4\xfc\x17\xa7\x66\x93\x34\x0c\x8a\x6b\xbf\x36\x32\xfd\x1d\x00\x00\xff\xff\xc2\xa0\x88\x6d\xe6\x17\x00\x00"

func templatesViewsReleasesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsReleasesHtml,
		"templates/views/releases.html",
	)
}

func templatesViewsReleasesHtml() (*asset, error) {
	bytes, err := templatesViewsReleasesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/releases.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesViewsUpdateHtml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\x38\xb0\x05\x6c\x03\xb1\x04\x3b\x79\x18\x32\xd9\x2f\x1b\x8a\x0d\xc8\x8a\x2e\x4d\xb6\xc7\xe0\x2c\x9e\x22\x1a\x14\xa9\x92\x94\x1b\x47\xf0\x77\x1f\x28\x59\x89\x2c\xdb\xf2\x9a\x06\x45\xf5\x22\xea\xf8\xbb\x3f\xfc\xdd\x89\x77\x65\x09\x9c\x12\xa1\x08\x58\xac\x95\x23\xe5\x18\x6c\x36\x67\x11\x17\x2b\x88\x25\x5a\x3b\x63\x46\x7f\x65\xf3\x33\x00\x80\xb6\x34\xd6\x72\x9c\xf1\xf1\x64\x0a\x7e\x65\xb3\x66\xf5\x68\xc7\x93\xe9\x16\xdf\xd5\x79\xbc\xcf\x51\x91\x6c\xed\xee\x23\x9c\x70\x92\x3a\x88\x0a\x95\x4e\xe7\x65\x09\x62\xf2\x8b\x02\x76\x97\x3f\x18\xe4\x04\x86\x24\xa1\x25\x06\x01\x6c\x36\x51\x98\x4e\x0f\xe8\xb5\x63\x96\x84\x26\x11\x8f\x6c\x1e\x85\x5c\xac\x3a\x61\x1c\x10\xed\x44\xd6\xf0\x73\xc4\x87\xe0\x33\xf6\x55\x3c\xa1\xe1\xac\xd1\x49\xb4\xc9\xee\x6b\x19\xd4\xaf\xfb\x54\x1b\xf1\xa4\x95\xc3\x2e\x0b\xcf\xb6\x0a\xd9\xa8\x6f\x55\xac\xa3\xdc\x1e\x41\x57\x1a\x52\x1c\xdf\xac\x00\x08\xa9\xa1\x64\xc6\xde\x79\x53\xe3\x49\x8f\xad\x67\x15\x9b\xa3\x6a\xe2\xf0\x5a\xf7\x4a\xb3\xf9\x24\x0a\xbd\xfc\x35\xea\x9c\x6c\x6c\xd8\x4b\x06\x3f\x3b\xca\x61\xb2\x4d\xdc\xc2\x40\x38\x8f\x6c\x86\x52\xb6\x73\x2c\x35\x72\x58\x08\x85\x66\x0d\x89\x90\xcf\x69\xae\x81\xff\x27\x96\x28\xc4\x1e\xde\xc2\x3e\xe2\xbe\x95\xd5\xe9\xab\x59\x9d\xbe\x31\xab\xd3\x3e\x56\xff\x21\x23\x92\x35\x14\x15\xb9\xc4\x7f\x7e\x5e\x2f\x5e\xcd\xeb\xc5\x1b\xf3\x7a\xd1\x5f\xad\xf5\x8d\x84\x79\x2e\x45\x8c\x4e\x68\xf5\x53\xd3\x7a\xf9\x6a\x5a\x2f\xdf\x98\xd6\xcb\x3e\x5a\x7f\xd3\x2a\x11\x26\x03\x54\x1c\x0c\x59\x87\xc6\xfd\x30\x5a\xa3\xb0\x90\x47\x76\x9a\xfb\xfe\xe4\x7d\x1a\xf9\x16\xd0\x6e\x07\xe3\x97\x06\x00\xd5\xb7\xc4\x05\xc9\xb1\xa4\xc4\x01\x37\x3a\x7f\xd2\x8a\x18\x18\x2d\xa9\xc6\x33\xc8\xc8\xa5\x9a\xcf\x58\xae\xad\x63\x95\x57\xed\x90\x01\xc6\xbe\xc6\x66\xac\x2c\x21\xb8\xa1\x2f\x05\x59\x17\xdc\xdd\x5c\x07\x9f\xd0\xa5\xb0\xd9\x30\x50\x7a\x85\x52\x70\x74\x34\x8f\x42\x6f\xea\xd8\x29\xf7\xda\xde\xe1\x63\xf6\x5d\x70\xd3\xef\x33\xdd\xf7\x8f\x5f\x7c\x9f\xe9\xbe\x3a\xbf\xfc\x16\xd3\xa7\x27\x86\xd6\xe7\x76\xb9\x7d\x95\x25\x90\xe2\x7e\xac\x3a\x6b\x8d\x5b\x29\x21\xaf\x66\x2d\xaf\x50\x96\x60\x1d\x3a\x11\xff\x71\xfb\xd7\x35\x0c\xeb\xf5\xdd\xcd\x35\xb0\x90\xa3\x4d\x17\x1a\x0d\x0f\xd1\x5a\x72\x36\x5c\x91\xe2\xda\xd8\xb0\x29\x97\xa5\x0d\x63\xfb\xf2\x19\x64\x42\x05\xb1\xb5\x0c\x12\x94\x96\x46\xde\xc5\xe1\x08\x96\xf6\xad\xfc\x2f\x3b\xee\x97\x3b\xde\x4f\x38\xd0\x0e\xbb\xa6\x97\x7f\x17\x64\xd6\xe3\xcf\x19\x1a\x37\xfe\xb7\x1a\x83\xbc\x8f\xe5\x17\x2f\x0e\xac\x17\xd7\xd2\x8e\xa7\x9a\x7c\x1b\x1b\x91\x3b\x70\xeb\x9c\x66\xac\x75\x21\x87\x4b\x5c\x61\xbd\xd9\xaa\x8a\xf7\x43\xae\xe3\x22\x23\xe5\x46\x81\x21\xe4\xeb\x61\x52\xa8\xea\xe7\x82\xe1\x08\xca\x9d\x8c\xbf\x1f\x0e\xde\xd5\x53\xd9\x60\xd4\x0e\x63\x38\xfa\xf5\xac\x0b\x0c\x16\x85\x73\x5a\x7d\xa4\x47\x37\x18\x05\xa9\xe0\xe4\x51\x87\x41\x9f\x0c\xad\x84\x2e\xec\x49\xe0\x07\xa1\x84\x4d\x5b\xb0\x1d\xdc\xef\x4d\x0e\x74\xee\xe3\xb7\x81\x76\x08\xb3\xce\x19\xfc\x93\xa3\x41\x29\x49\xd6\x33\x96\xbd\x82\xc9\xf9\x41\x4c\xf6\x11\x33\xba\x02\xd6\xcc\xd9\xfb\xa8\xd8\x10\x3a\xfa\x33\xc3\x07\xba\x4d\x8b\x6c\xa1\x50\x48\x7b\x55\xa7\x64\x1f\x8d\x71\x4c\xb9\x23\xfe\x41\x48\xb2\x57\xb0\x93\x9c\x0c\xe3\x7a\xd6\x3b\x0f\x16\x42\x1d\x70\x65\x8b\x38\x26\xeb\x8d\x6f\xf3\x33\xf4\xc3\xcb\xb9\xef\x0b\xb9\x56\xbe\x02\xf6\x0f\xda\x9b\xb4\xc1\x83\xbe\xd5\xbe\x07\x0d\xce\x61\xda\xa1\xfc\xb4\x32\x17\x16\x17\x92\xb6\xfa\x93\x6e\x2e\x9a\x27\x0c\x21\xd6\xca\x6a\x49\x81\xd4\x0f\xc3\x26\xd8\x40\xf0\xd1\x1e\x7e\xb3\x23\xd9\xbc\x44\xb4\xd9\x46\x17\x85\x75\xf9\xb6\xee\x94\xff\x02\x00\x00\xff\xff\x26\x45\x61\xd7\xc1\x0d\x00\x00"

func templatesViewsUpdateHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesViewsUpdateHtml,
		"templates/views/update.html",
	)
}

func templatesViewsUpdateHtml() (*asset, error) {
	bytes, err := templatesViewsUpdateHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/views/update.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsVendorsJquerySmartWizardJsJquerySmartwizardJs = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x1b\x5d\x6f\xdb\xba\xf5\xfd\xfe\x0a\x5e\x35\x88\x24\x58\x55\x9d\x3b\x0c\xc3\x9c\x38\x40\xdb\xb4\x58\x87\xde\xb6\x5b\x7a\xd1\x01\x17\x77\x01\x23\xd1\xb6\x5a\x59\xf2\x28\xca\x49\x9a\xfa\xbf\x0f\xfc\x92\xf8\x29\xcb\x69\x8b\xee\x61\x7a\x49\x2c\x1e\x1e\x9e\x6f\x9e\x43\x1e\x2d\xda\x2a\x23\x45\x5d\x81\xcb\x35\xc4\xe4\x43\xf1\x19\xe2\x3c\x22\x10\x2f\x11\x49\x40\xbd\xa1\x43\x4d\x0c\xee\x7f\x02\x00\x00\xb2\x2a\x9a\x94\x8f\x81\x39\xe0\xff\x9c\xf6\x23\x02\x1a\xcc\xe5\x3c\x65\x2c\x6b\xf1\x25\x41\x9b\x57\xf9\x6d\x3f\x9c\x36\xa8\x44\x19\x41\xb9\x02\xd7\x10\xb4\xa1\x18\x8e\x04\x0d\x71\x9a\xad\x8a\x32\xc7\xa8\x8a\x82\xb6\x0c\xd4\x9f\x65\xa1\xfd\x84\x41\xac\xae\x57\x57\x04\x55\xe4\x43\x91\x93\x15\x98\x83\xa9\x32\xb4\x6e\x96\xcf\xea\x5b\xb6\x46\x78\x96\x17\x5b\x90\x95\xb0\x69\xe6\x01\x7f\x1f\x9c\xab\xef\x04\x9a\xe0\xfc\xec\x49\x5e\x6c\xcf\xcf\x20\x58\x61\xb4\x98\x07\x8f\x82\x0e\xa2\xac\x1b\x14\x9c\xff\xeb\xec\x09\x14\x40\xa1\x4a\x07\x2a\xd7\x94\xef\xe7\x75\x45\x60\x51\x21\xdc\x2f\xdb\x41\xa7\x30\xcf\x9f\x53\x64\x51\xd0\xa8\xa0\x1a\x3f\x65\x0d\x73\x6d\xf6\xeb\x1a\xe6\x45\xb5\x74\x20\xe1\xa0\xda\xec\xeb\x96\x10\xae\x19\xae\x48\xfa\x54\xe8\x96\xcc\x18\x3a\x78\x1e\x82\x49\xa7\x94\x12\x5e\xa3\xf2\x0d\xba\x25\x60\x02\x42\xca\x15\x45\x4e\x08\x8e\x02\xca\x7a\x90\x80\xe0\x51\xa0\x2e\xc7\x71\xd3\x09\x41\x9c\x74\xd8\x37\x18\x6d\x8b\xba\x6d\xbc\x2b\xbc\x13\x00\x07\xad\x22\x27\xa9\x2b\x2d\x8a\xaa\x68\x56\xde\x75\x5e\xb2\xe1\x83\x56\xe1\x53\x82\x98\x2d\xb1\xe3\x62\xdc\x42\x0c\xae\x8a\xaa\xa0\x86\xdf\xb9\x4c\x74\x44\xa5\x1b\x2b\x42\xa5\x60\xa8\x5c\x3f\x65\xe3\xcf\xe0\x1e\x75\x43\x09\x26\x95\x45\x1f\x75\x7a\x0a\x37\x1b\x54\xe5\x7c\x1d\x61\xb8\x0a\xe8\x51\x14\xa6\xcc\xfe\xc2\x04\x68\x20\x69\x56\x16\xd9\xa7\xa8\x27\x54\xa5\x91\xcd\x54\xa0\xd3\x05\xcc\xd1\xdb\x96\x44\x41\x55\xe3\x35\x2c\x55\x62\xe8\x83\x11\x69\x71\x05\x16\xb0\x6c\x50\x3f\xb2\x53\xa0\x28\xd7\xb0\x2c\x2f\x8a\x2d\x73\x5d\x25\x4c\xf4\xfe\x19\xe6\xc5\x36\x54\x69\x77\x43\xb5\xa5\x2e\xa1\x2a\x5b\xd5\x9a\x78\xc4\x3a\x0a\x8c\xf4\x51\x05\xa8\x58\x08\xdd\xc8\x98\x94\x22\x8c\x6b\x16\x81\x1a\x70\x7c\x0c\x7c\x63\x69\x89\xaa\x25\x59\x81\x73\x30\xb5\x24\x96\x22\x98\xad\xbc\x58\x13\xc5\x2a\x8a\x04\x54\xe6\xf4\x9e\xe5\x06\x91\x17\x74\x5a\x74\x4f\xbd\xbd\x6a\xd7\x33\x50\x25\xa0\x68\x18\xae\x19\x20\xb8\x45\x3b\x43\x03\xea\xef\x9d\x21\x41\x33\xc0\x48\x93\x11\x72\x1a\x65\x58\x3c\x62\xf8\x94\xa3\x81\x9a\xcb\x8d\xc2\x2f\xc2\x4f\xca\x5d\x35\x76\x0f\xd2\x78\xe4\x19\x92\xc1\x64\x0f\x85\x2a\x01\x0a\xa8\x6b\x3f\xf0\xc8\xee\x86\x0e\x47\x9a\x87\xb9\x88\x1c\xe7\x5d\xcb\xfa\x65\x8d\x6f\xe8\x76\x7a\xb0\x43\x99\xcb\x76\x02\x18\xbd\xf4\x33\x98\x7d\xfa\x36\x6b\x4b\xa5\xed\x5b\x99\xfa\xdc\xcf\x47\x11\x8b\x88\xe9\x0a\x36\xdc\x3b\x43\x8e\xe6\xa2\x68\xe0\x75\x89\xf2\x30\x76\x39\x06\x73\xd7\xb4\x68\x5e\x0a\xe4\x86\x97\xc9\x88\xec\x9c\x0b\x44\xfc\x61\x0a\xbe\xa5\xe1\xf9\x7e\x81\x6b\xa6\xd7\x99\x90\x86\x92\x7b\x4c\xc0\xc9\xee\xd4\x89\x83\x93\xef\x5c\x37\xcd\x60\x59\x32\xc6\x92\x4e\x3a\x2c\x4f\x89\x13\xb9\xac\x97\x34\xbf\xcc\xd5\x67\x67\xbd\xdd\x01\x54\x36\x68\x80\xdf\x05\x5e\x9b\xb1\x76\x03\x31\xaa\x48\x13\x85\x8b\x1a\xaf\xc3\xd8\xcf\x27\x9d\x7b\x7c\x4c\x51\x88\x80\x37\x44\x3d\x85\x6a\xda\xeb\x75\x41\x4c\x5b\x1a\xa0\xfe\x27\xff\xaf\xf1\x16\xc8\x65\x9c\x5e\x17\x55\x1e\x05\xcc\xfc\x02\x35\xcc\x22\x97\x05\x2a\x33\xd3\xa2\xca\xd1\x2d\x37\x48\x30\x9f\x5b\xc6\xe0\x62\xda\xaf\x2a\x9d\x09\xaa\x01\x1a\x0b\xfa\x9c\xd6\xb3\xf0\xa9\x35\xad\x68\x2e\xea\x0a\x19\x33\xd0\x7f\x22\x05\x9d\x4c\x52\x38\x68\x10\x83\xc7\x32\x81\x55\x59\x95\x88\xe6\xe0\xc4\xc5\xca\x15\x8d\xea\xcf\x79\xd8\xe3\x62\x49\x54\x92\xcd\x2d\xe6\x40\x1d\xd9\x3b\xec\x27\x74\xf7\x06\x6e\x8b\x25\xa4\x3f\xad\xb0\x14\xe5\x75\xd6\xae\x51\x45\x62\x0a\xd8\x6e\xa2\x01\x3d\x4a\xfc\x28\xbd\x59\x15\xd9\x8a\x72\xf8\xa7\xbf\xfa\x4c\x74\x4f\xac\x05\xbd\x2f\x99\x28\xff\xb2\x0f\xa5\x2f\x86\xda\xf2\x72\x6f\xd0\x57\x1b\x8c\xa8\x4f\xb2\x04\x41\xe4\x8a\x3d\x9c\x4b\x3f\x96\x89\x9e\x5a\x39\xa8\x8a\x73\x38\x17\x75\x44\x34\x54\xd1\x28\xfc\xb4\x2c\xd9\x74\x5b\x49\x8a\x49\x26\x5a\x6c\x89\x53\x8c\xd6\xf5\x16\xc9\x3a\x45\x14\x6e\x81\xf1\x3e\x67\xe6\xaa\xe4\x66\xb9\x88\xfb\x66\x4e\x39\xb8\x94\x66\xfc\x09\x98\xaa\xc2\x75\x85\xc5\x6f\x40\x77\x47\xa6\x4a\x3b\x63\xe6\xe1\x74\x9f\xb8\xb3\xb6\x21\x0c\x2c\xc5\x54\x12\x49\x87\x86\xc4\x06\xab\x54\x31\x94\x97\x4d\x09\x33\x14\x3d\xf9\x77\x3a\x79\xf4\x24\x01\xe1\xa3\x30\x36\x51\xaf\x8a\x1c\x99\x86\xac\x23\xc3\xa8\x0c\x12\x50\xd0\x3d\x32\xb6\x9d\x5e\xb5\x41\x4a\xbb\x6d\x7b\x09\x68\x10\x33\x2c\x95\x6a\x11\x49\x28\xe1\x62\xd4\x2d\xb5\xf1\x9c\xd8\xe4\x28\x8e\xe4\xa4\xca\x0e\xf7\x74\x9a\x20\xc7\x0e\xc4\x8d\x15\x20\x59\x7d\xf3\x11\xde\xb6\xb8\xec\xc0\xa5\x4b\x89\xc4\xf2\xb7\x7f\xbe\x76\xc2\x5f\xe5\x90\xc0\x81\x49\x17\x90\x40\x7d\x22\x4d\x9d\x3a\x66\x04\x91\x29\xc5\x12\x85\xfd\x50\x68\x50\x47\x69\x7e\xd3\xd2\x8c\xa0\xe9\x33\x1d\x3d\x5a\x4b\x06\x8e\x8f\x25\x6d\x03\xd5\x8e\x1d\xde\x05\xc9\xcf\x61\xb6\x42\x14\x47\x4f\x8b\x73\xf3\x69\x56\xf5\x0d\xa5\xdc\x54\x82\xb1\xeb\xf8\xb2\x1c\x29\xc1\x2b\x88\x97\xfa\xb1\x85\xfa\xb4\xb8\x9c\x49\x66\x12\x27\x04\xb9\xdb\xa0\x19\x08\xde\xbd\xbd\x7c\x1f\xb8\x21\xa8\x64\x67\x80\x17\x63\x57\x55\xbb\xbe\x46\x78\x26\xc5\xb9\x8b\xfd\x73\xde\x73\xcc\x34\xf9\xf3\x60\xbe\x46\x8b\x1a\xa3\x4b\x54\xe5\x33\xe0\x4f\x9b\xd5\x47\xad\xc6\x52\x2a\x41\x6f\xc6\xe5\x5e\x51\x94\x90\x0f\x58\xcc\x15\x1d\xf6\x2c\xd6\xb4\x59\x86\x9a\x46\x5d\x0e\x23\x6b\x4f\x79\xd0\x8a\x40\x58\x20\x46\xac\x5a\xc7\x68\xa8\x30\xb7\xe8\xf2\xb9\x4c\xc2\x6a\xeb\x81\x25\x01\x33\x5c\xd5\x68\x45\x3c\x4b\x57\x64\x5d\x32\xee\xf6\x4d\x1e\x65\xf5\xea\x63\xe7\xce\xee\xb7\x8e\xaa\x45\x71\x6a\x16\x65\x7c\x82\x51\xfd\xe8\x28\x45\xb7\x84\x1d\x0f\xc8\x97\x89\x16\xa9\x22\x61\xf9\xf1\xde\x94\x07\xb0\x33\x11\x3a\xb7\xc7\xe5\xcd\x29\x9d\x7e\x3e\x42\x5a\x3b\x7b\xeb\x11\x73\xbe\x5f\xa0\x17\xd9\x97\x0d\xee\x49\xce\xa4\x2a\x64\xe0\xfd\x79\x7f\xa5\xb1\xb7\xde\x7d\x8d\xe0\x96\xa5\x78\xce\xba\xf2\xa0\x72\x37\x01\xa4\xe6\xa3\xcd\x60\x0d\xec\xac\x7f\x3b\x3a\x78\x09\x2c\xb3\xd4\x48\x2c\x31\xa2\xfe\x1d\xae\x7d\x7d\x75\xe2\xde\x43\xae\x15\x2a\x96\x2b\x12\xb9\xbd\xb5\x6e\x09\xc2\x7f\xe3\x10\xb1\xa1\xdd\x0d\x46\xdb\xe7\xea\x5d\x84\x29\x33\xf3\x88\x49\xbb\xb8\x68\x4c\x18\x7b\x9f\x24\x18\x56\x4d\x41\xff\x7f\xb1\x58\xa0\x8c\xd0\x52\x23\x6c\xca\x22\x47\xa1\x29\x23\x8d\x7a\x29\xd2\x94\xc1\xfe\xb6\x89\x82\x05\x6c\xc8\x70\xc1\x6b\x21\xe9\x44\xc0\x90\x5c\xd4\x37\x95\x40\xe3\x70\xe7\xab\x06\x91\x76\x73\x69\x93\xd0\xa3\x19\x38\x85\xec\x4b\xaa\x11\xec\x2f\xe0\x68\xee\xbb\xb3\xe8\xaf\xe1\x9e\x22\x79\xf5\xbf\xc1\x3a\x53\x44\x89\x16\xc4\xe2\x5f\x1e\x21\xbc\x28\xd7\xaf\xd1\x82\xf4\x97\x54\x1e\x80\x13\x30\x07\x55\x5b\x96\x83\x40\x5e\x98\xac\xc5\x2f\x4a\x44\x0b\x70\xf7\x62\x6a\x04\x3b\x37\xbc\xc4\x25\x78\x83\xb0\x23\xfb\x90\x75\x02\x4e\xa6\xb6\xe8\x95\x79\xbf\xd8\x54\xd0\xc7\xa6\x14\x3c\xf6\x18\x0b\x73\xf4\x0f\xe6\x99\x2d\x18\x4a\x2c\x0d\xba\x2d\xdc\x7a\x10\x11\xb8\xc1\x04\xfc\xf2\x6d\x78\x39\x99\x82\xc9\xe1\xcc\x78\x35\x35\x9f\x3f\x40\x55\xe3\x4a\x31\x73\xec\xfb\xc8\x83\xca\x9f\x12\xd4\xf9\xdf\xc3\x08\x1a\xa9\xfc\x07\xae\x04\xab\x62\x0d\x09\x8a\xee\xa9\x1f\xcf\x0c\x26\x76\x09\x18\x19\xab\xbe\x82\x02\x5f\xb2\x6c\x5d\x14\xf9\x23\x6c\x67\xd8\x19\xbb\x23\x46\x0b\x4a\xb1\x6a\x1a\xb1\xa8\x38\x4c\x76\x55\xad\x8e\x67\xf6\x5b\x84\xd8\x31\xfb\x85\x4b\x32\x9e\x2d\xd1\x51\x4f\x1d\x44\xe5\xce\x3c\xd4\xa0\xe5\x84\xe3\x70\x44\xa2\x74\xa5\xa8\x16\x7a\x85\x49\xaf\x65\x78\x8e\xb0\x4e\xf7\xcf\xf4\x1f\x66\x79\x63\x80\xe7\x5c\xec\xe0\x99\x63\xd7\x53\x9a\x1f\x9c\x9c\x0d\x86\x2a\xe7\x59\xdb\x15\xcc\x3f\xb6\x0d\x79\xc6\x2e\x9e\xac\x63\xd7\xbd\xb9\xf7\xa5\xa8\x30\xac\x94\xd6\x9b\x76\x6f\x20\x6e\xd0\xab\x8a\xf4\xbe\x2d\xe8\x0b\x31\x2a\xc3\x38\xee\x53\x70\x05\xb2\xb3\x4b\x15\x72\x67\x6f\xca\x56\x4e\x2e\xe9\xd3\x6f\xa5\x24\xba\xe1\x8c\x7c\xcc\xf5\xc6\x6e\x20\xb9\xad\xe4\x31\xfb\xdf\xdb\xf5\xa6\xa8\x96\xe6\x1a\x8b\x1a\x83\x88\x5d\x72\x38\x32\x6b\xba\x6b\x9c\x82\x02\x9c\xe9\x95\x15\xaf\xec\x4f\x41\x31\x99\xf8\x2f\xcd\x85\x21\x32\x4f\x2d\xfc\x65\xa6\xe5\x8c\xaa\x29\x1c\x7c\x5a\x9e\xdd\x65\x7c\x49\xeb\x54\x83\x02\x4f\xc1\xf9\xb8\x3b\x25\xff\x65\xae\xd9\x78\x72\xe1\x39\x2d\x77\x2b\x83\x86\x3e\xce\x59\xf3\xb6\x9b\x3a\xb0\xf1\x78\x88\xf0\xee\x2d\xa3\xf7\x54\x0f\x62\x2d\x1e\xfc\x40\x06\x7d\x07\x69\x43\x97\x94\x94\x98\xc8\xb6\x52\xf0\x18\x9c\xc4\xbd\x01\x1f\xa6\x77\xd1\xe0\xf0\xe3\x74\xce\x09\xf8\xc6\xfa\xe6\x48\x7f\xac\xae\x39\x0d\x87\xea\x79\xe7\xf2\x7d\xae\xed\xbe\x7d\x21\xef\x1a\x17\xc0\x97\x2f\x66\xdf\x10\xbb\x4d\xe3\x3d\x02\x9c\x76\xdf\x8d\x9a\xd9\x4b\x71\x80\xb8\xbe\x42\x54\xbe\xd5\x5d\x82\xda\x73\x56\xe7\x43\x35\xd6\x9a\xbf\x03\x17\x2e\x3b\xf6\x6c\x05\x4a\x6b\x6b\xba\xc1\x35\xa9\xc9\xdd\x06\xf5\x77\xc6\xda\xc6\x60\x9e\x1e\xea\xb7\xfc\x8e\x03\x36\x3d\xb5\xb0\x43\xc6\xd9\x5c\xbb\x76\x77\x75\xcd\x8c\xdc\x75\xc0\x01\x0d\x0a\x3a\xd9\x53\xe7\xf5\xb4\x7a\x01\xed\xeb\x0f\xd8\x23\x41\x79\x45\xfe\x15\x22\x7c\x6c\x8a\x70\x0a\xce\x7f\xbc\xc4\x9c\xa1\xff\x7b\x49\xf1\x7d\x6d\xd5\x0b\xf2\x1c\xde\x3c\xcb\xd6\x8e\x22\xdf\xb4\x6b\x5b\x7c\xdd\x29\x0e\xad\xae\x8f\x8f\xbb\x29\x67\x36\x4f\xd6\x91\x9c\xcd\xcb\x9e\x33\x79\x37\x47\x3c\x30\x7e\x07\x9e\xe6\xb6\xf9\x7c\xf9\xa2\x70\x38\x55\x7f\x9e\x3b\xb4\x68\x72\xec\x69\x74\xb1\xe8\xd3\x2d\xc2\x79\x77\x70\xc4\xde\x25\x60\x6c\x99\xe2\x84\xf7\x75\x25\xf8\xba\x18\xdc\x05\xde\x6e\x40\x37\x4a\x26\xfd\x7f\xe5\x78\xfb\x4c\x46\x28\x87\xb7\xba\x8c\x50\x8c\xb1\x25\x0e\x29\x27\x6b\x31\x46\x15\xb1\x94\xe3\xe8\xa8\xf0\xee\x44\x43\xf8\xe9\xce\xff\x2b\x6a\x1a\xb8\x44\x1a\xfe\x75\xb3\xd4\x4f\x22\x42\x79\x96\x1b\x26\xea\x47\x13\xe2\x26\x94\x82\xf7\xb2\x52\xc6\xb5\xd4\x62\x88\x10\xba\x79\xbb\x08\x51\xa9\x50\xf1\x7a\x5a\xd4\xf7\xf1\xca\x1a\xad\x2d\x33\xaf\x74\x33\xe7\xb6\x23\xbb\xb2\x05\x80\x76\x59\xbc\x8f\x93\xaf\x59\x86\x59\xf7\x18\x76\xc4\x4c\xd7\x32\x5d\xfb\xb8\x59\xd0\xd2\x99\xf5\x02\x08\x30\xea\xa1\x41\x7d\xfd\x11\x65\x24\xb0\x76\x55\x8e\x40\xf8\x79\xd5\xae\x53\xf1\x46\xdf\x32\x3b\x4c\x1d\x98\xf8\xeb\xf2\x4f\xde\xa4\x68\x11\x06\xba\xce\x23\xdd\x63\x2b\x1e\x5c\x62\xd3\x4b\xa5\x27\x85\x0c\x53\x18\xef\xcb\x54\x47\x63\xd6\x7c\x97\x21\x0f\xec\x7d\x6e\x40\x25\x8b\xe2\x96\xdf\x32\x0e\x66\x3f\x2b\x09\x32\x35\x5a\x76\xba\x6b\x69\x9d\x60\xff\x2d\xb3\x8c\x77\xea\xc7\x44\xfc\xac\x53\x3f\xea\xec\x67\x68\xd0\xfd\x57\x16\x56\xa3\x99\xa9\x1e\x41\xf3\x64\xde\xb5\x88\x69\x77\xaa\x76\x77\x98\xbd\x98\xb8\xa1\x95\x98\xc0\x9f\xcd\x88\xe1\xbb\xd3\xed\x66\xfc\x32\xd5\xdc\x82\x7d\x7d\x23\x9b\x6a\x77\xa7\x0a\xf5\x47\x92\xfc\xa3\x74\x51\xa5\x4d\xaf\x2b\x3d\xc6\x21\xb2\xaa\x73\x53\x3b\xa2\x2f\x02\xe2\x25\xeb\x4e\x6d\x74\x69\xe3\x2d\x98\x83\xb6\xca\xd1\xa2\xa8\xe4\x67\x6a\xa0\xff\xe0\xe5\xed\xf5\xc7\x46\xea\x6f\x8f\x44\xe9\x8c\x9b\xe2\x33\xe8\x25\xca\xfb\x53\x14\x6a\xcd\x8e\x6d\xc5\x81\x39\xed\xec\x42\x91\xfb\x6f\x48\xf7\xd2\x9f\xc5\x6b\xfa\xef\x4d\xf1\xd9\xd7\x2a\xd0\x7f\x96\xd7\x75\x7f\xdc\xef\x12\x4b\x58\x69\x8e\x16\xb0\x2d\x49\x93\x80\x1e\xef\xbd\x79\xc3\x20\x09\xf3\x2d\x48\x1f\xce\x67\x85\x6e\xb4\x6f\x0a\x05\xdf\xfd\x47\x85\xee\xa6\x18\xbf\x78\x12\x8a\xf8\xe1\x07\x17\x8a\x38\x9d\xee\xfc\x3b\xe7\xfa\x0f\x16\x25\xa5\x22\xad\x38\x29\x1f\x66\x19\x83\x78\x52\xb8\xd9\x94\x77\xd1\x4d\xf1\x39\x01\x4f\x31\x86\x77\x6a\x30\x2f\x8b\x0c\xf1\x03\x5c\xde\x83\x73\xe2\x6a\xb8\x01\xfd\x6e\x8f\xb7\x0e\xbe\x87\x3e\x11\x38\xe2\xdf\x26\x45\xe1\xaf\x5c\x97\x21\x98\x48\xb5\x4e\x40\x08\xf2\x1a\x35\xa0\xaa\x09\x40\xb7\x45\x43\x40\x5d\x81\x8f\xff\x68\x11\xbe\x4b\x07\xec\xd1\x21\x6b\x67\x1c\x60\x9d\x5b\x5b\x30\x9f\x2b\xae\xe3\x49\xed\x84\x0f\xed\xb9\xf9\x71\xc8\x40\x2b\x42\xbc\x96\xac\x35\x0e\xca\xe4\x6c\x06\xa6\x7d\x43\x9b\xd6\xb4\xce\x3f\xbe\xea\x07\xf5\x6e\xe9\x19\xdf\xaa\xfb\x61\xf3\xbe\x7f\x26\x1a\x1d\x7a\x88\xbe\xcd\x73\xc6\xae\xe5\xad\x11\xd6\x4d\x69\x2e\xdb\x97\xb3\xd6\x92\xf6\x89\x93\x05\xe2\x3c\x57\xb1\x11\x75\x1f\xae\xcd\xc0\xef\x7f\xf4\xef\xbb\x8f\x3f\x67\x20\xa4\x7f\x42\x63\xe8\x5d\xf7\x59\x67\x28\xff\x35\x41\x5e\x8a\xef\x31\x43\xfe\x8f\x32\x6c\xde\x1e\x58\x54\x29\x0d\x47\xa6\xc0\xfa\x7b\x0f\x7b\x44\xae\x48\xdf\x4b\xbb\xd8\xc5\x11\xb7\xe8\xf8\xf4\xbf\x01\x00\x00\xff\xff\x55\x39\x2c\xd8\xe2\x3c\x00\x00"

func assetsVendorsJquerySmartWizardJsJquerySmartwizardJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsVendorsJquerySmartWizardJsJquerySmartwizardJs,
		"assets/vendors/jQuery-Smart-Wizard/js/jquery.smartWizard.js",
	)
}

func assetsVendorsJquerySmartWizardJsJquerySmartwizardJs() (*asset, error) {
	bytes, err := assetsVendorsJquerySmartWizardJsJquerySmartwizardJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/vendors/jQuery-Smart-Wizard/js/jquery.smartWizard.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesOtaMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xcd\x8a\xd4\x40\x14\x85\x4f\xb4\xdd\x04\x15\x71\xed\xe2\xba\x70\xd0\x45\x8d\x49\xeb\x42\xaa\xbb\xba\xfd\x61\x06\xc4\x69\x94\x26\xe3\xca\x4d\xd9\xa9\xc9\x04\x93\xaa\x58\x55\x11\x85\x59\x88\x5b\xc5\x9d\x2b\x41\x7c\x05\x05\x71\x40\xf4\x19\xaa\xd7\x82\xbe\x80\x0f\x21\x49\x46\xc5\xbb\x3a\xdf\x3d\xe7\xfe\xfc\x38\x3b\x7a\x03\x00\x23\x00\xe7\x00\x4c\x01\x9c\x00\xf0\x00\x43\x35\x00\x4e\x03\x78\x0c\xe0\x14\x80\xe7\x00\x4e\x02\x78\x0d\x60\x1e\x01\x6f\x01\x1c\x07\xf0\x3d\x1a\xfa\x3f\x23\xe0\x0c\x80\x5f\x11\x10\x1d\x79\xc7\x8e\x76\x75\x37\xb0\x32\x7a\xaf\x2c\x98\x97\x0f\x47\xc6\x4b\xd4\x4a\xb7\xa3\xa5\xaa\x94\x74\xca\x0d\xb4\xdb\x14\x56\xe6\x0a\x4b\xd5\x18\xeb\xd9\xc2\x15\x65\xce\x6e\xb6\x85\x63\x99\xe1\x94\xab\x27\xd7\x1f\x95\xfb\xb2\x36\x9b\xb6\x8d\x77\xa4\xf3\x2c\xb3\x52\xbb\x4a\x7a\x63\x39\xdd\xe9\x2d\x5a\xb4\x56\xd6\x26\x37\x34\xfd\x2f\x3f\x8b\x77\xa4\x2e\x5a\x59\x28\x96\x29\x59\x73\xfa\xcb\x9c\x96\xad\x73\xa5\xd4\xf1\xe2\xf6\x62\x8b\xdd\x57\xd6\x95\x46\x73\x4a\x37\x93\xf8\x96\xd1\x5e\x69\xcf\xb2\x67\x8d\xe2\xe4\xd5\x53\x7f\xb9\xa9\x64\xa9\x27\xb4\xda\x97\xd6\x29\x2f\x76\xb3\x6d\x76\xed\x5f\xae\xfb\x67\x4f\x59\xb6\xa5\x57\x26\x2f\x75\xc1\x29\xbe\x57\xb5\x56\x56\x6c\xdb\xd8\xda\x71\xd2\x4d\x8f\x4e\x5c\x99\xd0\x20\x85\xbe\x90\x26\x42\xa4\xb4\xb1\x41\x9d\x4c\xce\x8b\x34\xa5\x39\x25\xc4\x7b\x9e\x89\xf1\x1f\x6b\x2a\xae\x76\xf2\x62\x1f\x9b\xa6\x09\x1d\x1c\x0c\x23\x33\x31\x4e\x2e\xd1\x9c\x52\xe2\x34\x9e\xe0\x6e\x76\x03\xe1\x7d\xf8\x14\xbe\x84\xc3\xf0\x79\xfd\x12\xe1\x5d\xf8\x10\xbe\x86\x6f\xe1\x63\x38\x5c\xbf\x58\xbf\xc2\xef\x00\x00\x00\xff\xff\xcf\xe7\x6b\x25\xfd\x01\x00\x00"

func localesRuLc_messagesOtaMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesOtaMo,
		"locales/ru/LC_MESSAGES/ota.mo",
	)
}

func localesRuLc_messagesOtaMo() (*asset, error) {
	bytes, err := localesRuLc_messagesOtaMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/ota.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesReleasesMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x3f\x68\x14\x4d\x18\xc6\x9f\xdd\x2f\x5f\xbe\x7c\x87\xff\xb0\x10\x0b\x85\x11\x34\x98\x62\xe3\x6d\xb4\xd0\x4d\x36\x31\xc6\x04\xc4\x1c\x84\x78\xda\x0f\x7b\xe3\xdd\x92\xbb\x99\x63\x76\x36\x1a\x49\x91\xdc\x21\xa2\x08\x8a\x68\xad\xc1\xc2\xf6\x08\x06\x93\x78\x8d\xad\xd5\x3b\xa5\x8d\xa5\xb5\x62\x65\x27\x7b\xbb\x2a\x4e\xf3\x3c\xbf\x77\xde\xbf\x9f\x8f\x0e\xbd\x00\x80\x12\x80\x13\x00\x9a\x00\x0e\x02\xe8\x23\x7f\x5f\x01\xfc\x07\xe0\x1b\x80\x03\x00\x7e\x00\x18\x01\x30\xec\xe4\x7a\xd8\x01\x86\x00\x1c\x77\x80\x61\x00\x27\x0b\x3e\xed\xe4\x75\x63\x85\xfa\x0e\x30\xe3\x00\x97\x1c\xe0\x08\x80\x35\x17\x38\x06\xe0\x91\x9b\xf3\x96\x0b\x1c\x02\xb0\xed\xe6\x7d\x3f\x14\xfc\xd1\xcd\xe7\x7e\x2a\xf4\x4b\x11\xff\xee\x02\x0e\x80\x7f\x00\xfc\x5f\xec\x3a\x54\xe8\x48\xa1\x6e\x71\xd7\x70\x71\xc3\xbf\x59\x70\x36\x32\xb1\x92\x09\x66\x75\xd4\x88\x8d\x88\x4c\xaa\x05\xe6\x1a\x22\x5a\x49\xd2\x16\xae\xaa\x3b\xb2\xa9\x78\x0d\x4b\xdc\x34\xb0\x2c\x5a\x6a\x55\xe0\x46\x7c\x4f\xe0\x96\xd0\x49\xac\x24\xa2\x54\x6b\x21\x0d\x96\x45\x5b\x69\xe3\x55\x92\x7a\x5c\xf3\xae\xa4\xf5\xc4\xab\xaa\x80\xd5\xc4\xea\xe5\x95\xb8\xc1\x5b\x6a\x5c\xa7\xa5\x45\x9e\x18\xaf\xaa\xb9\x4c\x9a\xdc\x28\x1d\xb0\xeb\x83\x2f\x56\x49\x35\x6f\xa9\x9a\x62\x53\x7f\xe5\x4f\x97\x16\xb9\xac\xa7\xbc\x2e\xbc\xaa\xe0\xad\x80\xfd\xe6\x80\x2d\xa7\x49\x12\x73\x59\xaa\x5c\xab\xcc\x7b\xc5\x2e\x01\xf3\xc7\xcb\xa5\x39\x25\x8d\x90\xc6\xab\xae\xb5\x45\xc0\x8c\xb8\x6b\xce\xb5\x9b\x3c\x96\x93\x2c\x6a\x70\x9d\x08\x13\xde\xac\x2e\x78\x17\xff\xe4\x65\xfb\xdc\x16\xda\x9b\x97\x91\xaa\xc5\xb2\x1e\xb0\xd2\x52\x33\xd5\xbc\xe9\x2d\x28\xdd\x4a\x02\x26\xdb\x03\x4c\xc2\xf3\x93\x2c\xb7\xa1\x3c\xe3\x97\xc3\xd0\x67\xa3\xa3\x2c\xb3\xe5\x53\xa1\xef\xb3\x19\x56\x66\xc1\x80\xa7\xc3\x89\x5f\x5f\x53\xe1\x85\xcc\x9e\x1d\xa4\x4d\xf9\x65\xb6\xbe\x9e\x97\x4c\x87\x13\xe5\x31\x36\xc3\x7c\x16\xb0\x89\x49\xd0\x73\xda\xa1\x3d\xbb\x69\x3b\xb4\x4d\xbb\xf6\x09\xe8\xa9\xdd\xb0\xf7\x69\xd7\x76\x68\x87\xf6\x6d\xc7\x76\xed\x06\xf5\x40\x6f\x06\xb8\x69\xbb\xd4\xa7\x7e\x16\xd8\xa2\x7d\xea\xd9\x07\xd4\xb3\x1d\xfb\x18\xf4\xd2\x76\x73\xf3\x9a\xde\x52\x8f\xde\x67\x1d\x32\x7c\x45\x3d\x7a\x47\x7d\xda\xb1\x1b\xa0\x67\x99\xd8\xcd\xc1\xa0\x62\x40\xd7\x3e\xa4\x5d\xda\xc3\xcf\x00\x00\x00\xff\xff\xe1\xfa\x3b\xe9\x02\x03\x00\x00"

func localesRuLc_messagesReleasesMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesReleasesMo,
		"locales/ru/LC_MESSAGES/releases.mo",
	)
}

func localesRuLc_messagesReleasesMo() (*asset, error) {
	bytes, err := localesRuLc_messagesReleasesMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/releases.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localesRuLc_messagesUpdateMo = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x4f\x6f\xd3\x58\x14\xc5\x8f\x9b\xce\x4c\x27\x9a\xd1\x48\xed\xac\x80\xc5\xed\xa2\x15\x20\xb9\xc4\x69\x90\x90\x5b\xb7\x88\xaa\x95\x10\x8d\x84\x4a\x5a\xb1\x7d\xd4\x2f\xa9\x85\x63\x5b\xcf\x36\xa2\x52\x17\xa1\x65\xc9\x16\xb1\xa3\x5b\x36\x48\xe9\x9f\x90\x40\x69\xfa\x15\xae\xbf\x00\x62\xcb\x0e\xd8\xb2\x41\xb1\x9d\x22\x04\xde\xfc\xce\xbd\xf7\xdc\xfb\x8e\x3f\x8c\x8f\x3e\x07\x80\x22\x80\x4b\x00\x5c\x00\xff\x02\x78\x8f\xec\xfb\x0c\x60\x02\xc0\x17\x00\x7f\x02\xf8\x43\xcb\xf8\x4f\xce\x89\x9c\x17\xb4\xcc\x37\xa9\x01\xff\x01\xb8\xae\x01\xe3\x00\x96\x35\xe0\x7f\x00\xf7\x35\x60\x51\x03\x9a\x1a\x50\x06\xf0\x7a\x04\x18\x03\xf0\x31\xe7\xa7\x9c\x5f\x73\x7e\x1b\x01\xa6\x00\x8c\x16\x80\x8b\x00\xae\x16\x80\x19\x00\x2b\x05\xa0\x02\x20\x2e\x00\x5a\x9e\xf1\x6f\x00\x23\xf9\x3f\xfc\x95\xf7\xc6\x72\x16\x06\x37\x06\xb9\xf3\xfc\x58\xf2\xbd\xba\xa3\x9a\x24\x3c\x9b\x94\x0c\x23\xa1\x22\xdc\x8b\x64\x40\x46\x86\x72\x86\xd9\x0c\x15\xac\x07\x0d\x25\x6c\x49\x22\x08\x5c\x67\x53\x44\x8e\xef\x9d\xf7\x94\x74\xa5\x08\x25\xd6\x03\xd7\x17\x36\x3d\x70\x3c\xa1\xb6\xa9\xee\xb8\x12\x1b\x52\x39\xf5\x6d\x8a\xd3\x89\xb4\xb3\xe6\x9a\x0c\x7c\x15\xe9\xd5\xb0\xe1\xd8\xfa\xad\xb8\x11\xea\x35\xdf\x24\x5b\x3e\xba\xf9\xd0\xd9\x12\x4d\x7f\x46\xc5\xc5\x55\x11\x46\x7a\x4d\x09\x2f\x74\x45\xe4\x2b\x93\xee\xa4\x23\xaa\xc6\x4a\x34\x7d\xdb\xa7\xf9\x9f\xfc\x0b\xc5\x55\xe1\x35\x62\xd1\x90\x7a\x4d\x8a\xa6\x49\xe7\xb5\x49\x6b\x71\x18\x3a\xc2\x2b\x56\x6f\x57\x97\xf5\x0d\xa9\x42\xc7\xf7\x4c\x32\x66\x4a\xc5\x25\xdf\x8b\xa4\x17\xe9\xb5\xed\x40\x9a\x14\xc9\xc7\xd1\xb5\xc0\x15\x8e\x37\x47\x9b\x5b\x42\x85\x32\xb2\xd6\x6b\x2b\xfa\x8d\x1f\xbe\x41\x9e\xba\x54\xfa\xb2\xb7\xe9\xdb\x8e\xd7\x30\xa9\x78\xd7\x8d\x95\x70\xf5\x15\x5f\x35\x43\x93\xbc\x20\x2d\x43\x6b\x76\x8e\x32\x69\x79\x53\x46\xc9\xb2\x0c\x9a\x9e\xa6\x81\x2c\x4d\x5a\x86\x41\x8b\x54\x22\x33\xad\x17\xac\xf2\x70\x34\x6f\x55\x06\xf2\x72\x6a\x9b\x37\x4a\xb4\xb3\x93\xad\x2c\x58\xe5\xd2\x15\x5a\x24\x83\x4c\x2a\xcf\x81\xf7\xb9\xcf\xc7\x7c\xc8\x9d\xa4\xc5\xc7\xdc\x4b\x76\x93\x67\xc4\x3d\xe2\xb3\xb4\xd3\xe1\x2e\xb7\xf9\x2c\xd9\x4b\x9e\x24\xbb\xd9\x14\xfc\x8a\xdb\x7c\x44\xc6\x50\x94\x87\x62\x76\x28\x2a\xe0\x97\x7c\xc0\xa7\xdc\xe7\xc3\xe1\xc9\xb3\xa4\xc5\x3d\x3e\xe1\x3e\xbf\xe1\x0e\x9f\x72\x8f\x3b\xbf\xba\xd2\x17\x4f\xb8\xc7\x5d\xf0\x8b\xc1\xa9\xa4\x95\xec\x71\x97\xdf\x71\x9b\xf8\x80\x7b\x7c\xca\xed\xa4\x95\xae\x1c\x71\x9f\x92\xa7\xdc\xe6\xb7\x7c\xc2\x6d\xf0\x7e\xd2\x4a\x0f\x0d\x52\xa7\xf6\xee\xf9\x7e\xf6\xe0\x6f\x96\xbe\x07\x00\x00\xff\xff\x1e\x7a\x2f\x1a\xaa\x03\x00\x00"

func localesRuLc_messagesUpdateMoBytes() ([]byte, error) {
	return bindataRead(
		_localesRuLc_messagesUpdateMo,
		"locales/ru/LC_MESSAGES/update.mo",
	)
}

func localesRuLc_messagesUpdateMo() (*asset, error) {
	bytes, err := localesRuLc_messagesUpdateMoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "locales/ru/LC_MESSAGES/update.mo", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/views/releases.html":                               templatesViewsReleasesHtml,
	"templates/views/update.html":                                 templatesViewsUpdateHtml,
	"assets/vendors/jQuery-Smart-Wizard/js/jquery.smartWizard.js": assetsVendorsJquerySmartWizardJsJquerySmartwizardJs,
	"locales/ru/LC_MESSAGES/ota.mo":                               localesRuLc_messagesOtaMo,
	"locales/ru/LC_MESSAGES/releases.mo":                          localesRuLc_messagesReleasesMo,
	"locales/ru/LC_MESSAGES/update.mo":                            localesRuLc_messagesUpdateMo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"vendors": &bintree{nil, map[string]*bintree{
			"jQuery-Smart-Wizard": &bintree{nil, map[string]*bintree{
				"js": &bintree{nil, map[string]*bintree{
					"jquery.smartWizard.js": &bintree{assetsVendorsJquerySmartWizardJsJquerySmartwizardJs, map[string]*bintree{}},
				}},
			}},
		}},
	}},
	"locales": &bintree{nil, map[string]*bintree{
		"ru": &bintree{nil, map[string]*bintree{
			"LC_MESSAGES": &bintree{nil, map[string]*bintree{
				"ota.mo":      &bintree{localesRuLc_messagesOtaMo, map[string]*bintree{}},
				"releases.mo": &bintree{localesRuLc_messagesReleasesMo, map[string]*bintree{}},
				"update.mo":   &bintree{localesRuLc_messagesUpdateMo, map[string]*bintree{}},
			}},
		}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"views": &bintree{nil, map[string]*bintree{
			"releases.html": &bintree{templatesViewsReleasesHtml, map[string]*bintree{}},
			"update.html":   &bintree{templatesViewsUpdateHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
