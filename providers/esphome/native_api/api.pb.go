// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package nativeapi

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LegacyCoverState int32

const (
	LegacyCoverState_LEGACY_COVER_STATE_OPEN   LegacyCoverState = 0
	LegacyCoverState_LEGACY_COVER_STATE_CLOSED LegacyCoverState = 1
)

var LegacyCoverState_name = map[int32]string{
	0: "LEGACY_COVER_STATE_OPEN",
	1: "LEGACY_COVER_STATE_CLOSED",
}

var LegacyCoverState_value = map[string]int32{
	"LEGACY_COVER_STATE_OPEN":   0,
	"LEGACY_COVER_STATE_CLOSED": 1,
}

func (x LegacyCoverState) String() string {
	return proto.EnumName(LegacyCoverState_name, int32(x))
}

func (LegacyCoverState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type CoverOperation int32

const (
	CoverOperation_COVER_OPERATION_IDLE       CoverOperation = 0
	CoverOperation_COVER_OPERATION_IS_OPENING CoverOperation = 1
	CoverOperation_COVER_OPERATION_IS_CLOSING CoverOperation = 2
)

var CoverOperation_name = map[int32]string{
	0: "COVER_OPERATION_IDLE",
	1: "COVER_OPERATION_IS_OPENING",
	2: "COVER_OPERATION_IS_CLOSING",
}

var CoverOperation_value = map[string]int32{
	"COVER_OPERATION_IDLE":       0,
	"COVER_OPERATION_IS_OPENING": 1,
	"COVER_OPERATION_IS_CLOSING": 2,
}

func (x CoverOperation) String() string {
	return proto.EnumName(CoverOperation_name, int32(x))
}

func (CoverOperation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

type LegacyCoverCommand int32

const (
	LegacyCoverCommand_LEGACY_COVER_COMMAND_OPEN  LegacyCoverCommand = 0
	LegacyCoverCommand_LEGACY_COVER_COMMAND_CLOSE LegacyCoverCommand = 1
	LegacyCoverCommand_LEGACY_COVER_COMMAND_STOP  LegacyCoverCommand = 2
)

var LegacyCoverCommand_name = map[int32]string{
	0: "LEGACY_COVER_COMMAND_OPEN",
	1: "LEGACY_COVER_COMMAND_CLOSE",
	2: "LEGACY_COVER_COMMAND_STOP",
}

var LegacyCoverCommand_value = map[string]int32{
	"LEGACY_COVER_COMMAND_OPEN":  0,
	"LEGACY_COVER_COMMAND_CLOSE": 1,
	"LEGACY_COVER_COMMAND_STOP":  2,
}

func (x LegacyCoverCommand) String() string {
	return proto.EnumName(LegacyCoverCommand_name, int32(x))
}

func (LegacyCoverCommand) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

type FanSpeed int32

const (
	FanSpeed_FAN_SPEED_LOW    FanSpeed = 0
	FanSpeed_FAN_SPEED_MEDIUM FanSpeed = 1
	FanSpeed_FAN_SPEED_HIGH   FanSpeed = 2
)

var FanSpeed_name = map[int32]string{
	0: "FAN_SPEED_LOW",
	1: "FAN_SPEED_MEDIUM",
	2: "FAN_SPEED_HIGH",
}

var FanSpeed_value = map[string]int32{
	"FAN_SPEED_LOW":    0,
	"FAN_SPEED_MEDIUM": 1,
	"FAN_SPEED_HIGH":   2,
}

func (x FanSpeed) String() string {
	return proto.EnumName(FanSpeed_name, int32(x))
}

func (FanSpeed) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

type FanDirection int32

const (
	FanDirection_FAN_DIRECTION_FORWARD FanDirection = 0
	FanDirection_FAN_DIRECTION_REVERSE FanDirection = 1
)

var FanDirection_name = map[int32]string{
	0: "FAN_DIRECTION_FORWARD",
	1: "FAN_DIRECTION_REVERSE",
}

var FanDirection_value = map[string]int32{
	"FAN_DIRECTION_FORWARD": 0,
	"FAN_DIRECTION_REVERSE": 1,
}

func (x FanDirection) String() string {
	return proto.EnumName(FanDirection_name, int32(x))
}

func (FanDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

// ==================== SENSOR ====================
type SensorStateClass int32

const (
	SensorStateClass_STATE_CLASS_NONE        SensorStateClass = 0
	SensorStateClass_STATE_CLASS_MEASUREMENT SensorStateClass = 1
)

var SensorStateClass_name = map[int32]string{
	0: "STATE_CLASS_NONE",
	1: "STATE_CLASS_MEASUREMENT",
}

var SensorStateClass_value = map[string]int32{
	"STATE_CLASS_NONE":        0,
	"STATE_CLASS_MEASUREMENT": 1,
}

func (x SensorStateClass) String() string {
	return proto.EnumName(SensorStateClass_name, int32(x))
}

func (SensorStateClass) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

// ==================== SUBSCRIBE LOGS ====================
type LogLevel int32

const (
	LogLevel_LOG_LEVEL_NONE         LogLevel = 0
	LogLevel_LOG_LEVEL_ERROR        LogLevel = 1
	LogLevel_LOG_LEVEL_WARN         LogLevel = 2
	LogLevel_LOG_LEVEL_INFO         LogLevel = 3
	LogLevel_LOG_LEVEL_DEBUG        LogLevel = 4
	LogLevel_LOG_LEVEL_VERBOSE      LogLevel = 5
	LogLevel_LOG_LEVEL_VERY_VERBOSE LogLevel = 6
)

var LogLevel_name = map[int32]string{
	0: "LOG_LEVEL_NONE",
	1: "LOG_LEVEL_ERROR",
	2: "LOG_LEVEL_WARN",
	3: "LOG_LEVEL_INFO",
	4: "LOG_LEVEL_DEBUG",
	5: "LOG_LEVEL_VERBOSE",
	6: "LOG_LEVEL_VERY_VERBOSE",
}

var LogLevel_value = map[string]int32{
	"LOG_LEVEL_NONE":         0,
	"LOG_LEVEL_ERROR":        1,
	"LOG_LEVEL_WARN":         2,
	"LOG_LEVEL_INFO":         3,
	"LOG_LEVEL_DEBUG":        4,
	"LOG_LEVEL_VERBOSE":      5,
	"LOG_LEVEL_VERY_VERBOSE": 6,
}

func (x LogLevel) String() string {
	return proto.EnumName(LogLevel_name, int32(x))
}

func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

// ==================== USER-DEFINES SERVICES ====================
type ServiceArgType int32

const (
	ServiceArgType_SERVICE_ARG_TYPE_BOOL         ServiceArgType = 0
	ServiceArgType_SERVICE_ARG_TYPE_INT          ServiceArgType = 1
	ServiceArgType_SERVICE_ARG_TYPE_FLOAT        ServiceArgType = 2
	ServiceArgType_SERVICE_ARG_TYPE_STRING       ServiceArgType = 3
	ServiceArgType_SERVICE_ARG_TYPE_BOOL_ARRAY   ServiceArgType = 4
	ServiceArgType_SERVICE_ARG_TYPE_INT_ARRAY    ServiceArgType = 5
	ServiceArgType_SERVICE_ARG_TYPE_FLOAT_ARRAY  ServiceArgType = 6
	ServiceArgType_SERVICE_ARG_TYPE_STRING_ARRAY ServiceArgType = 7
)

var ServiceArgType_name = map[int32]string{
	0: "SERVICE_ARG_TYPE_BOOL",
	1: "SERVICE_ARG_TYPE_INT",
	2: "SERVICE_ARG_TYPE_FLOAT",
	3: "SERVICE_ARG_TYPE_STRING",
	4: "SERVICE_ARG_TYPE_BOOL_ARRAY",
	5: "SERVICE_ARG_TYPE_INT_ARRAY",
	6: "SERVICE_ARG_TYPE_FLOAT_ARRAY",
	7: "SERVICE_ARG_TYPE_STRING_ARRAY",
}

var ServiceArgType_value = map[string]int32{
	"SERVICE_ARG_TYPE_BOOL":         0,
	"SERVICE_ARG_TYPE_INT":          1,
	"SERVICE_ARG_TYPE_FLOAT":        2,
	"SERVICE_ARG_TYPE_STRING":       3,
	"SERVICE_ARG_TYPE_BOOL_ARRAY":   4,
	"SERVICE_ARG_TYPE_INT_ARRAY":    5,
	"SERVICE_ARG_TYPE_FLOAT_ARRAY":  6,
	"SERVICE_ARG_TYPE_STRING_ARRAY": 7,
}

func (x ServiceArgType) String() string {
	return proto.EnumName(ServiceArgType_name, int32(x))
}

func (ServiceArgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

// ==================== CLIMATE ====================
type ClimateMode int32

const (
	ClimateMode_CLIMATE_MODE_OFF       ClimateMode = 0
	ClimateMode_CLIMATE_MODE_HEAT_COOL ClimateMode = 1
	ClimateMode_CLIMATE_MODE_COOL      ClimateMode = 2
	ClimateMode_CLIMATE_MODE_HEAT      ClimateMode = 3
	ClimateMode_CLIMATE_MODE_FAN_ONLY  ClimateMode = 4
	ClimateMode_CLIMATE_MODE_DRY       ClimateMode = 5
	ClimateMode_CLIMATE_MODE_AUTO      ClimateMode = 6
)

var ClimateMode_name = map[int32]string{
	0: "CLIMATE_MODE_OFF",
	1: "CLIMATE_MODE_HEAT_COOL",
	2: "CLIMATE_MODE_COOL",
	3: "CLIMATE_MODE_HEAT",
	4: "CLIMATE_MODE_FAN_ONLY",
	5: "CLIMATE_MODE_DRY",
	6: "CLIMATE_MODE_AUTO",
}

var ClimateMode_value = map[string]int32{
	"CLIMATE_MODE_OFF":       0,
	"CLIMATE_MODE_HEAT_COOL": 1,
	"CLIMATE_MODE_COOL":      2,
	"CLIMATE_MODE_HEAT":      3,
	"CLIMATE_MODE_FAN_ONLY":  4,
	"CLIMATE_MODE_DRY":       5,
	"CLIMATE_MODE_AUTO":      6,
}

func (x ClimateMode) String() string {
	return proto.EnumName(ClimateMode_name, int32(x))
}

func (ClimateMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

type ClimateFanMode int32

const (
	ClimateFanMode_CLIMATE_FAN_ON      ClimateFanMode = 0
	ClimateFanMode_CLIMATE_FAN_OFF     ClimateFanMode = 1
	ClimateFanMode_CLIMATE_FAN_AUTO    ClimateFanMode = 2
	ClimateFanMode_CLIMATE_FAN_LOW     ClimateFanMode = 3
	ClimateFanMode_CLIMATE_FAN_MEDIUM  ClimateFanMode = 4
	ClimateFanMode_CLIMATE_FAN_HIGH    ClimateFanMode = 5
	ClimateFanMode_CLIMATE_FAN_MIDDLE  ClimateFanMode = 6
	ClimateFanMode_CLIMATE_FAN_FOCUS   ClimateFanMode = 7
	ClimateFanMode_CLIMATE_FAN_DIFFUSE ClimateFanMode = 8
)

var ClimateFanMode_name = map[int32]string{
	0: "CLIMATE_FAN_ON",
	1: "CLIMATE_FAN_OFF",
	2: "CLIMATE_FAN_AUTO",
	3: "CLIMATE_FAN_LOW",
	4: "CLIMATE_FAN_MEDIUM",
	5: "CLIMATE_FAN_HIGH",
	6: "CLIMATE_FAN_MIDDLE",
	7: "CLIMATE_FAN_FOCUS",
	8: "CLIMATE_FAN_DIFFUSE",
}

var ClimateFanMode_value = map[string]int32{
	"CLIMATE_FAN_ON":      0,
	"CLIMATE_FAN_OFF":     1,
	"CLIMATE_FAN_AUTO":    2,
	"CLIMATE_FAN_LOW":     3,
	"CLIMATE_FAN_MEDIUM":  4,
	"CLIMATE_FAN_HIGH":    5,
	"CLIMATE_FAN_MIDDLE":  6,
	"CLIMATE_FAN_FOCUS":   7,
	"CLIMATE_FAN_DIFFUSE": 8,
}

func (x ClimateFanMode) String() string {
	return proto.EnumName(ClimateFanMode_name, int32(x))
}

func (ClimateFanMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

type ClimateSwingMode int32

const (
	ClimateSwingMode_CLIMATE_SWING_OFF        ClimateSwingMode = 0
	ClimateSwingMode_CLIMATE_SWING_BOTH       ClimateSwingMode = 1
	ClimateSwingMode_CLIMATE_SWING_VERTICAL   ClimateSwingMode = 2
	ClimateSwingMode_CLIMATE_SWING_HORIZONTAL ClimateSwingMode = 3
)

var ClimateSwingMode_name = map[int32]string{
	0: "CLIMATE_SWING_OFF",
	1: "CLIMATE_SWING_BOTH",
	2: "CLIMATE_SWING_VERTICAL",
	3: "CLIMATE_SWING_HORIZONTAL",
}

var ClimateSwingMode_value = map[string]int32{
	"CLIMATE_SWING_OFF":        0,
	"CLIMATE_SWING_BOTH":       1,
	"CLIMATE_SWING_VERTICAL":   2,
	"CLIMATE_SWING_HORIZONTAL": 3,
}

func (x ClimateSwingMode) String() string {
	return proto.EnumName(ClimateSwingMode_name, int32(x))
}

func (ClimateSwingMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

type ClimateAction int32

const (
	ClimateAction_CLIMATE_ACTION_OFF ClimateAction = 0
	// values same as mode for readability
	ClimateAction_CLIMATE_ACTION_COOLING ClimateAction = 2
	ClimateAction_CLIMATE_ACTION_HEATING ClimateAction = 3
	ClimateAction_CLIMATE_ACTION_IDLE    ClimateAction = 4
	ClimateAction_CLIMATE_ACTION_DRYING  ClimateAction = 5
	ClimateAction_CLIMATE_ACTION_FAN     ClimateAction = 6
)

var ClimateAction_name = map[int32]string{
	0: "CLIMATE_ACTION_OFF",
	2: "CLIMATE_ACTION_COOLING",
	3: "CLIMATE_ACTION_HEATING",
	4: "CLIMATE_ACTION_IDLE",
	5: "CLIMATE_ACTION_DRYING",
	6: "CLIMATE_ACTION_FAN",
}

var ClimateAction_value = map[string]int32{
	"CLIMATE_ACTION_OFF":     0,
	"CLIMATE_ACTION_COOLING": 2,
	"CLIMATE_ACTION_HEATING": 3,
	"CLIMATE_ACTION_IDLE":    4,
	"CLIMATE_ACTION_DRYING":  5,
	"CLIMATE_ACTION_FAN":     6,
}

func (x ClimateAction) String() string {
	return proto.EnumName(ClimateAction_name, int32(x))
}

func (ClimateAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

type ClimatePreset int32

const (
	ClimatePreset_CLIMATE_PRESET_NONE     ClimatePreset = 0
	ClimatePreset_CLIMATE_PRESET_HOME     ClimatePreset = 1
	ClimatePreset_CLIMATE_PRESET_AWAY     ClimatePreset = 2
	ClimatePreset_CLIMATE_PRESET_BOOST    ClimatePreset = 3
	ClimatePreset_CLIMATE_PRESET_COMFORT  ClimatePreset = 4
	ClimatePreset_CLIMATE_PRESET_ECO      ClimatePreset = 5
	ClimatePreset_CLIMATE_PRESET_SLEEP    ClimatePreset = 6
	ClimatePreset_CLIMATE_PRESET_ACTIVITY ClimatePreset = 7
)

var ClimatePreset_name = map[int32]string{
	0: "CLIMATE_PRESET_NONE",
	1: "CLIMATE_PRESET_HOME",
	2: "CLIMATE_PRESET_AWAY",
	3: "CLIMATE_PRESET_BOOST",
	4: "CLIMATE_PRESET_COMFORT",
	5: "CLIMATE_PRESET_ECO",
	6: "CLIMATE_PRESET_SLEEP",
	7: "CLIMATE_PRESET_ACTIVITY",
}

var ClimatePreset_value = map[string]int32{
	"CLIMATE_PRESET_NONE":     0,
	"CLIMATE_PRESET_HOME":     1,
	"CLIMATE_PRESET_AWAY":     2,
	"CLIMATE_PRESET_BOOST":    3,
	"CLIMATE_PRESET_COMFORT":  4,
	"CLIMATE_PRESET_ECO":      5,
	"CLIMATE_PRESET_SLEEP":    6,
	"CLIMATE_PRESET_ACTIVITY": 7,
}

func (x ClimatePreset) String() string {
	return proto.EnumName(ClimatePreset_name, int32(x))
}

func (ClimatePreset) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

// Message sent at the beginning of each connection
// Can only be sent by the client and only at the beginning of the connection
type HelloRequest struct {
	// Description of client (like User Agent)
	// For example "Home Assistant"
	// Not strictly necessary to send but nice for debugging
	// purposes.
	ClientInfo           string   `protobuf:"bytes,1,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetClientInfo() string {
	if m != nil {
		return m.ClientInfo
	}
	return ""
}

// Confirmation of successful connection request.
// Can only be sent by the server and only at the beginning of the connection
type HelloResponse struct {
	// The version of the API to use. The _client_ (for example Home Assistant) needs to check
	// for compatibility and if necessary adopt to an older API.
	// Major is for breaking changes in the base protocol - a mismatch will lead to immediate disconnect_client_
	// Minor is for breaking changes in individual messages - a mismatch will lead to a warning message
	ApiVersionMajor uint32 `protobuf:"varint,1,opt,name=api_version_major,json=apiVersionMajor,proto3" json:"api_version_major,omitempty"`
	ApiVersionMinor uint32 `protobuf:"varint,2,opt,name=api_version_minor,json=apiVersionMinor,proto3" json:"api_version_minor,omitempty"`
	// A string identifying the server (ESP); like client info this may be empty
	// and only exists for debugging/logging purposes.
	// For example "ESPHome v1.10.0 on ESP8266"
	ServerInfo           string   `protobuf:"bytes,3,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloResponse) Reset()         { *m = HelloResponse{} }
func (m *HelloResponse) String() string { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()    {}
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *HelloResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloResponse.Unmarshal(m, b)
}
func (m *HelloResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloResponse.Marshal(b, m, deterministic)
}
func (m *HelloResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloResponse.Merge(m, src)
}
func (m *HelloResponse) XXX_Size() int {
	return xxx_messageInfo_HelloResponse.Size(m)
}
func (m *HelloResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloResponse proto.InternalMessageInfo

func (m *HelloResponse) GetApiVersionMajor() uint32 {
	if m != nil {
		return m.ApiVersionMajor
	}
	return 0
}

func (m *HelloResponse) GetApiVersionMinor() uint32 {
	if m != nil {
		return m.ApiVersionMinor
	}
	return 0
}

func (m *HelloResponse) GetServerInfo() string {
	if m != nil {
		return m.ServerInfo
	}
	return ""
}

// Message sent at the beginning of each connection to authenticate the client
// Can only be sent by the client and only at the beginning of the connection
type ConnectRequest struct {
	// The password to log in with
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// Confirmation of successful connection. After this the connection is available for all traffic.
// Can only be sent by the server and only at the beginning of the connection
type ConnectResponse struct {
	InvalidPassword      bool     `protobuf:"varint,1,opt,name=invalid_password,json=invalidPassword,proto3" json:"invalid_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectResponse) Reset()         { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()    {}
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *ConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResponse.Unmarshal(m, b)
}
func (m *ConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResponse.Marshal(b, m, deterministic)
}
func (m *ConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponse.Merge(m, src)
}
func (m *ConnectResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectResponse.Size(m)
}
func (m *ConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponse proto.InternalMessageInfo

func (m *ConnectResponse) GetInvalidPassword() bool {
	if m != nil {
		return m.InvalidPassword
	}
	return false
}

// Request to close the connection.
// Can be sent by both the client and server
type DisconnectRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectRequest) Reset()         { *m = DisconnectRequest{} }
func (m *DisconnectRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectRequest) ProtoMessage()    {}
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *DisconnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectRequest.Unmarshal(m, b)
}
func (m *DisconnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectRequest.Marshal(b, m, deterministic)
}
func (m *DisconnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectRequest.Merge(m, src)
}
func (m *DisconnectRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectRequest.Size(m)
}
func (m *DisconnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectRequest proto.InternalMessageInfo

type DisconnectResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectResponse) Reset()         { *m = DisconnectResponse{} }
func (m *DisconnectResponse) String() string { return proto.CompactTextString(m) }
func (*DisconnectResponse) ProtoMessage()    {}
func (*DisconnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *DisconnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectResponse.Unmarshal(m, b)
}
func (m *DisconnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectResponse.Marshal(b, m, deterministic)
}
func (m *DisconnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectResponse.Merge(m, src)
}
func (m *DisconnectResponse) XXX_Size() int {
	return xxx_messageInfo_DisconnectResponse.Size(m)
}
func (m *DisconnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectResponse proto.InternalMessageInfo

type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

type PingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

type DeviceInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceInfoRequest) Reset()         { *m = DeviceInfoRequest{} }
func (m *DeviceInfoRequest) String() string { return proto.CompactTextString(m) }
func (*DeviceInfoRequest) ProtoMessage()    {}
func (*DeviceInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *DeviceInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceInfoRequest.Unmarshal(m, b)
}
func (m *DeviceInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceInfoRequest.Marshal(b, m, deterministic)
}
func (m *DeviceInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceInfoRequest.Merge(m, src)
}
func (m *DeviceInfoRequest) XXX_Size() int {
	return xxx_messageInfo_DeviceInfoRequest.Size(m)
}
func (m *DeviceInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceInfoRequest proto.InternalMessageInfo

type DeviceInfoResponse struct {
	UsesPassword bool `protobuf:"varint,1,opt,name=uses_password,json=usesPassword,proto3" json:"uses_password,omitempty"`
	// The name of the node, given by "App.set_name()"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The mac address of the device. For example "AC:BC:32:89:0E:A9"
	MacAddress string `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// A string describing the ESPHome version. For example "1.10.0"
	EsphomeVersion string `protobuf:"bytes,4,opt,name=esphome_version,json=esphomeVersion,proto3" json:"esphome_version,omitempty"`
	// A string describing the date of compilation, this is generated by the compiler
	// and therefore may not be in the same format all the time.
	// If the user isn't using ESPHome, this will also not be set.
	CompilationTime string `protobuf:"bytes,5,opt,name=compilation_time,json=compilationTime,proto3" json:"compilation_time,omitempty"`
	// The model of the board. For example NodeMCU
	Model        string `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`
	HasDeepSleep bool   `protobuf:"varint,7,opt,name=has_deep_sleep,json=hasDeepSleep,proto3" json:"has_deep_sleep,omitempty"`
	// The esphome project details if set
	ProjectName          string   `protobuf:"bytes,8,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	ProjectVersion       string   `protobuf:"bytes,9,opt,name=project_version,json=projectVersion,proto3" json:"project_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceInfoResponse) Reset()         { *m = DeviceInfoResponse{} }
func (m *DeviceInfoResponse) String() string { return proto.CompactTextString(m) }
func (*DeviceInfoResponse) ProtoMessage()    {}
func (*DeviceInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *DeviceInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceInfoResponse.Unmarshal(m, b)
}
func (m *DeviceInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceInfoResponse.Marshal(b, m, deterministic)
}
func (m *DeviceInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceInfoResponse.Merge(m, src)
}
func (m *DeviceInfoResponse) XXX_Size() int {
	return xxx_messageInfo_DeviceInfoResponse.Size(m)
}
func (m *DeviceInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceInfoResponse proto.InternalMessageInfo

func (m *DeviceInfoResponse) GetUsesPassword() bool {
	if m != nil {
		return m.UsesPassword
	}
	return false
}

func (m *DeviceInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceInfoResponse) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *DeviceInfoResponse) GetEsphomeVersion() string {
	if m != nil {
		return m.EsphomeVersion
	}
	return ""
}

func (m *DeviceInfoResponse) GetCompilationTime() string {
	if m != nil {
		return m.CompilationTime
	}
	return ""
}

func (m *DeviceInfoResponse) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *DeviceInfoResponse) GetHasDeepSleep() bool {
	if m != nil {
		return m.HasDeepSleep
	}
	return false
}

func (m *DeviceInfoResponse) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

func (m *DeviceInfoResponse) GetProjectVersion() string {
	if m != nil {
		return m.ProjectVersion
	}
	return ""
}

type ListEntitiesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEntitiesRequest) Reset()         { *m = ListEntitiesRequest{} }
func (m *ListEntitiesRequest) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesRequest) ProtoMessage()    {}
func (*ListEntitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *ListEntitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesRequest.Unmarshal(m, b)
}
func (m *ListEntitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesRequest.Marshal(b, m, deterministic)
}
func (m *ListEntitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesRequest.Merge(m, src)
}
func (m *ListEntitiesRequest) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesRequest.Size(m)
}
func (m *ListEntitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesRequest proto.InternalMessageInfo

type ListEntitiesDoneResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEntitiesDoneResponse) Reset()         { *m = ListEntitiesDoneResponse{} }
func (m *ListEntitiesDoneResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesDoneResponse) ProtoMessage()    {}
func (*ListEntitiesDoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *ListEntitiesDoneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesDoneResponse.Unmarshal(m, b)
}
func (m *ListEntitiesDoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesDoneResponse.Marshal(b, m, deterministic)
}
func (m *ListEntitiesDoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesDoneResponse.Merge(m, src)
}
func (m *ListEntitiesDoneResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesDoneResponse.Size(m)
}
func (m *ListEntitiesDoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesDoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesDoneResponse proto.InternalMessageInfo

type SubscribeStatesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeStatesRequest) Reset()         { *m = SubscribeStatesRequest{} }
func (m *SubscribeStatesRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeStatesRequest) ProtoMessage()    {}
func (*SubscribeStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *SubscribeStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeStatesRequest.Unmarshal(m, b)
}
func (m *SubscribeStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeStatesRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeStatesRequest.Merge(m, src)
}
func (m *SubscribeStatesRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeStatesRequest.Size(m)
}
func (m *SubscribeStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeStatesRequest proto.InternalMessageInfo

// ==================== BINARY SENSOR ====================
type ListEntitiesBinarySensorResponse struct {
	ObjectId             string   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Key                  uint32   `protobuf:"fixed32,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	UniqueId             string   `protobuf:"bytes,4,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	DeviceClass          string   `protobuf:"bytes,5,opt,name=device_class,json=deviceClass,proto3" json:"device_class,omitempty"`
	IsStatusBinarySensor bool     `protobuf:"varint,6,opt,name=is_status_binary_sensor,json=isStatusBinarySensor,proto3" json:"is_status_binary_sensor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEntitiesBinarySensorResponse) Reset()         { *m = ListEntitiesBinarySensorResponse{} }
func (m *ListEntitiesBinarySensorResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesBinarySensorResponse) ProtoMessage()    {}
func (*ListEntitiesBinarySensorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *ListEntitiesBinarySensorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesBinarySensorResponse.Unmarshal(m, b)
}
func (m *ListEntitiesBinarySensorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesBinarySensorResponse.Marshal(b, m, deterministic)
}
func (m *ListEntitiesBinarySensorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesBinarySensorResponse.Merge(m, src)
}
func (m *ListEntitiesBinarySensorResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesBinarySensorResponse.Size(m)
}
func (m *ListEntitiesBinarySensorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesBinarySensorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesBinarySensorResponse proto.InternalMessageInfo

func (m *ListEntitiesBinarySensorResponse) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *ListEntitiesBinarySensorResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ListEntitiesBinarySensorResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListEntitiesBinarySensorResponse) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *ListEntitiesBinarySensorResponse) GetDeviceClass() string {
	if m != nil {
		return m.DeviceClass
	}
	return ""
}

func (m *ListEntitiesBinarySensorResponse) GetIsStatusBinarySensor() bool {
	if m != nil {
		return m.IsStatusBinarySensor
	}
	return false
}

type BinarySensorStateResponse struct {
	Key   uint32 `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	State bool   `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	// If the binary sensor does not have a valid state yet.
	// Equivalent to `!obj->has_state()` - inverse logic to make state packets smaller
	MissingState         bool     `protobuf:"varint,3,opt,name=missing_state,json=missingState,proto3" json:"missing_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BinarySensorStateResponse) Reset()         { *m = BinarySensorStateResponse{} }
func (m *BinarySensorStateResponse) String() string { return proto.CompactTextString(m) }
func (*BinarySensorStateResponse) ProtoMessage()    {}
func (*BinarySensorStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *BinarySensorStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinarySensorStateResponse.Unmarshal(m, b)
}
func (m *BinarySensorStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinarySensorStateResponse.Marshal(b, m, deterministic)
}
func (m *BinarySensorStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinarySensorStateResponse.Merge(m, src)
}
func (m *BinarySensorStateResponse) XXX_Size() int {
	return xxx_messageInfo_BinarySensorStateResponse.Size(m)
}
func (m *BinarySensorStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BinarySensorStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BinarySensorStateResponse proto.InternalMessageInfo

func (m *BinarySensorStateResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *BinarySensorStateResponse) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

func (m *BinarySensorStateResponse) GetMissingState() bool {
	if m != nil {
		return m.MissingState
	}
	return false
}

// ==================== COVER ====================
type ListEntitiesCoverResponse struct {
	ObjectId             string   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Key                  uint32   `protobuf:"fixed32,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	UniqueId             string   `protobuf:"bytes,4,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	AssumedState         bool     `protobuf:"varint,5,opt,name=assumed_state,json=assumedState,proto3" json:"assumed_state,omitempty"`
	SupportsPosition     bool     `protobuf:"varint,6,opt,name=supports_position,json=supportsPosition,proto3" json:"supports_position,omitempty"`
	SupportsTilt         bool     `protobuf:"varint,7,opt,name=supports_tilt,json=supportsTilt,proto3" json:"supports_tilt,omitempty"`
	DeviceClass          string   `protobuf:"bytes,8,opt,name=device_class,json=deviceClass,proto3" json:"device_class,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEntitiesCoverResponse) Reset()         { *m = ListEntitiesCoverResponse{} }
func (m *ListEntitiesCoverResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesCoverResponse) ProtoMessage()    {}
func (*ListEntitiesCoverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *ListEntitiesCoverResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesCoverResponse.Unmarshal(m, b)
}
func (m *ListEntitiesCoverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesCoverResponse.Marshal(b, m, deterministic)
}
func (m *ListEntitiesCoverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesCoverResponse.Merge(m, src)
}
func (m *ListEntitiesCoverResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesCoverResponse.Size(m)
}
func (m *ListEntitiesCoverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesCoverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesCoverResponse proto.InternalMessageInfo

func (m *ListEntitiesCoverResponse) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *ListEntitiesCoverResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ListEntitiesCoverResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListEntitiesCoverResponse) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *ListEntitiesCoverResponse) GetAssumedState() bool {
	if m != nil {
		return m.AssumedState
	}
	return false
}

func (m *ListEntitiesCoverResponse) GetSupportsPosition() bool {
	if m != nil {
		return m.SupportsPosition
	}
	return false
}

func (m *ListEntitiesCoverResponse) GetSupportsTilt() bool {
	if m != nil {
		return m.SupportsTilt
	}
	return false
}

func (m *ListEntitiesCoverResponse) GetDeviceClass() string {
	if m != nil {
		return m.DeviceClass
	}
	return ""
}

type CoverStateResponse struct {
	Key uint32 `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	// legacy: state has been removed in 1.13
	// clients/servers must still send/accept it until the next protocol change
	LegacyState          LegacyCoverState `protobuf:"varint,2,opt,name=legacy_state,json=legacyState,proto3,enum=nativeapi.LegacyCoverState" json:"legacy_state,omitempty"`
	Position             float32          `protobuf:"fixed32,3,opt,name=position,proto3" json:"position,omitempty"`
	Tilt                 float32          `protobuf:"fixed32,4,opt,name=tilt,proto3" json:"tilt,omitempty"`
	CurrentOperation     CoverOperation   `protobuf:"varint,5,opt,name=current_operation,json=currentOperation,proto3,enum=nativeapi.CoverOperation" json:"current_operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CoverStateResponse) Reset()         { *m = CoverStateResponse{} }
func (m *CoverStateResponse) String() string { return proto.CompactTextString(m) }
func (*CoverStateResponse) ProtoMessage()    {}
func (*CoverStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *CoverStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoverStateResponse.Unmarshal(m, b)
}
func (m *CoverStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoverStateResponse.Marshal(b, m, deterministic)
}
func (m *CoverStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoverStateResponse.Merge(m, src)
}
func (m *CoverStateResponse) XXX_Size() int {
	return xxx_messageInfo_CoverStateResponse.Size(m)
}
func (m *CoverStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoverStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoverStateResponse proto.InternalMessageInfo

func (m *CoverStateResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *CoverStateResponse) GetLegacyState() LegacyCoverState {
	if m != nil {
		return m.LegacyState
	}
	return LegacyCoverState_LEGACY_COVER_STATE_OPEN
}

func (m *CoverStateResponse) GetPosition() float32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *CoverStateResponse) GetTilt() float32 {
	if m != nil {
		return m.Tilt
	}
	return 0
}

func (m *CoverStateResponse) GetCurrentOperation() CoverOperation {
	if m != nil {
		return m.CurrentOperation
	}
	return CoverOperation_COVER_OPERATION_IDLE
}

type CoverCommandRequest struct {
	Key uint32 `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	// legacy: command has been removed in 1.13
	// clients/servers must still send/accept it until the next protocol change
	HasLegacyCommand     bool               `protobuf:"varint,2,opt,name=has_legacy_command,json=hasLegacyCommand,proto3" json:"has_legacy_command,omitempty"`
	LegacyCommand        LegacyCoverCommand `protobuf:"varint,3,opt,name=legacy_command,json=legacyCommand,proto3,enum=nativeapi.LegacyCoverCommand" json:"legacy_command,omitempty"`
	HasPosition          bool               `protobuf:"varint,4,opt,name=has_position,json=hasPosition,proto3" json:"has_position,omitempty"`
	Position             float32            `protobuf:"fixed32,5,opt,name=position,proto3" json:"position,omitempty"`
	HasTilt              bool               `protobuf:"varint,6,opt,name=has_tilt,json=hasTilt,proto3" json:"has_tilt,omitempty"`
	Tilt                 float32            `protobuf:"fixed32,7,opt,name=tilt,proto3" json:"tilt,omitempty"`
	Stop                 bool               `protobuf:"varint,8,opt,name=stop,proto3" json:"stop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CoverCommandRequest) Reset()         { *m = CoverCommandRequest{} }
func (m *CoverCommandRequest) String() string { return proto.CompactTextString(m) }
func (*CoverCommandRequest) ProtoMessage()    {}
func (*CoverCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}

func (m *CoverCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoverCommandRequest.Unmarshal(m, b)
}
func (m *CoverCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoverCommandRequest.Marshal(b, m, deterministic)
}
func (m *CoverCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoverCommandRequest.Merge(m, src)
}
func (m *CoverCommandRequest) XXX_Size() int {
	return xxx_messageInfo_CoverCommandRequest.Size(m)
}
func (m *CoverCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CoverCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CoverCommandRequest proto.InternalMessageInfo

func (m *CoverCommandRequest) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *CoverCommandRequest) GetHasLegacyCommand() bool {
	if m != nil {
		return m.HasLegacyCommand
	}
	return false
}

func (m *CoverCommandRequest) GetLegacyCommand() LegacyCoverCommand {
	if m != nil {
		return m.LegacyCommand
	}
	return LegacyCoverCommand_LEGACY_COVER_COMMAND_OPEN
}

func (m *CoverCommandRequest) GetHasPosition() bool {
	if m != nil {
		return m.HasPosition
	}
	return false
}

func (m *CoverCommandRequest) GetPosition() float32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *CoverCommandRequest) GetHasTilt() bool {
	if m != nil {
		return m.HasTilt
	}
	return false
}

func (m *CoverCommandRequest) GetTilt() float32 {
	if m != nil {
		return m.Tilt
	}
	return 0
}

func (m *CoverCommandRequest) GetStop() bool {
	if m != nil {
		return m.Stop
	}
	return false
}

// ==================== FAN ====================
type ListEntitiesFanResponse struct {
	ObjectId             string   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Key                  uint32   `protobuf:"fixed32,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	UniqueId             string   `protobuf:"bytes,4,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	SupportsOscillation  bool     `protobuf:"varint,5,opt,name=supports_oscillation,json=supportsOscillation,proto3" json:"supports_oscillation,omitempty"`
	SupportsSpeed        bool     `protobuf:"varint,6,opt,name=supports_speed,json=supportsSpeed,proto3" json:"supports_speed,omitempty"`
	SupportsDirection    bool     `protobuf:"varint,7,opt,name=supports_direction,json=supportsDirection,proto3" json:"supports_direction,omitempty"`
	SupportedSpeedCount  int32    `protobuf:"varint,8,opt,name=supported_speed_count,json=supportedSpeedCount,proto3" json:"supported_speed_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEntitiesFanResponse) Reset()         { *m = ListEntitiesFanResponse{} }
func (m *ListEntitiesFanResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesFanResponse) ProtoMessage()    {}
func (*ListEntitiesFanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}

func (m *ListEntitiesFanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesFanResponse.Unmarshal(m, b)
}
func (m *ListEntitiesFanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesFanResponse.Marshal(b, m, deterministic)
}
func (m *ListEntitiesFanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesFanResponse.Merge(m, src)
}
func (m *ListEntitiesFanResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesFanResponse.Size(m)
}
func (m *ListEntitiesFanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesFanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesFanResponse proto.InternalMessageInfo

func (m *ListEntitiesFanResponse) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *ListEntitiesFanResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ListEntitiesFanResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListEntitiesFanResponse) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *ListEntitiesFanResponse) GetSupportsOscillation() bool {
	if m != nil {
		return m.SupportsOscillation
	}
	return false
}

func (m *ListEntitiesFanResponse) GetSupportsSpeed() bool {
	if m != nil {
		return m.SupportsSpeed
	}
	return false
}

func (m *ListEntitiesFanResponse) GetSupportsDirection() bool {
	if m != nil {
		return m.SupportsDirection
	}
	return false
}

func (m *ListEntitiesFanResponse) GetSupportedSpeedCount() int32 {
	if m != nil {
		return m.SupportedSpeedCount
	}
	return 0
}

type FanStateResponse struct {
	Key                  uint32       `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	State                bool         `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Oscillating          bool         `protobuf:"varint,3,opt,name=oscillating,proto3" json:"oscillating,omitempty"`
	Speed                FanSpeed     `protobuf:"varint,4,opt,name=speed,proto3,enum=nativeapi.FanSpeed" json:"speed,omitempty"` // Deprecated: Do not use.
	Direction            FanDirection `protobuf:"varint,5,opt,name=direction,proto3,enum=nativeapi.FanDirection" json:"direction,omitempty"`
	SpeedLevel           int32        `protobuf:"varint,6,opt,name=speed_level,json=speedLevel,proto3" json:"speed_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FanStateResponse) Reset()         { *m = FanStateResponse{} }
func (m *FanStateResponse) String() string { return proto.CompactTextString(m) }
func (*FanStateResponse) ProtoMessage()    {}
func (*FanStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}

func (m *FanStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FanStateResponse.Unmarshal(m, b)
}
func (m *FanStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FanStateResponse.Marshal(b, m, deterministic)
}
func (m *FanStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FanStateResponse.Merge(m, src)
}
func (m *FanStateResponse) XXX_Size() int {
	return xxx_messageInfo_FanStateResponse.Size(m)
}
func (m *FanStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FanStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FanStateResponse proto.InternalMessageInfo

func (m *FanStateResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *FanStateResponse) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

func (m *FanStateResponse) GetOscillating() bool {
	if m != nil {
		return m.Oscillating
	}
	return false
}

// Deprecated: Do not use.
func (m *FanStateResponse) GetSpeed() FanSpeed {
	if m != nil {
		return m.Speed
	}
	return FanSpeed_FAN_SPEED_LOW
}

func (m *FanStateResponse) GetDirection() FanDirection {
	if m != nil {
		return m.Direction
	}
	return FanDirection_FAN_DIRECTION_FORWARD
}

func (m *FanStateResponse) GetSpeedLevel() int32 {
	if m != nil {
		return m.SpeedLevel
	}
	return 0
}

type FanCommandRequest struct {
	Key                  uint32       `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	HasState             bool         `protobuf:"varint,2,opt,name=has_state,json=hasState,proto3" json:"has_state,omitempty"`
	State                bool         `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	HasSpeed             bool         `protobuf:"varint,4,opt,name=has_speed,json=hasSpeed,proto3" json:"has_speed,omitempty"`   // Deprecated: Do not use.
	Speed                FanSpeed     `protobuf:"varint,5,opt,name=speed,proto3,enum=nativeapi.FanSpeed" json:"speed,omitempty"` // Deprecated: Do not use.
	HasOscillating       bool         `protobuf:"varint,6,opt,name=has_oscillating,json=hasOscillating,proto3" json:"has_oscillating,omitempty"`
	Oscillating          bool         `protobuf:"varint,7,opt,name=oscillating,proto3" json:"oscillating,omitempty"`
	HasDirection         bool         `protobuf:"varint,8,opt,name=has_direction,json=hasDirection,proto3" json:"has_direction,omitempty"`
	Direction            FanDirection `protobuf:"varint,9,opt,name=direction,proto3,enum=nativeapi.FanDirection" json:"direction,omitempty"`
	HasSpeedLevel        bool         `protobuf:"varint,10,opt,name=has_speed_level,json=hasSpeedLevel,proto3" json:"has_speed_level,omitempty"`
	SpeedLevel           int32        `protobuf:"varint,11,opt,name=speed_level,json=speedLevel,proto3" json:"speed_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FanCommandRequest) Reset()         { *m = FanCommandRequest{} }
func (m *FanCommandRequest) String() string { return proto.CompactTextString(m) }
func (*FanCommandRequest) ProtoMessage()    {}
func (*FanCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}

func (m *FanCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FanCommandRequest.Unmarshal(m, b)
}
func (m *FanCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FanCommandRequest.Marshal(b, m, deterministic)
}
func (m *FanCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FanCommandRequest.Merge(m, src)
}
func (m *FanCommandRequest) XXX_Size() int {
	return xxx_messageInfo_FanCommandRequest.Size(m)
}
func (m *FanCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FanCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FanCommandRequest proto.InternalMessageInfo

func (m *FanCommandRequest) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *FanCommandRequest) GetHasState() bool {
	if m != nil {
		return m.HasState
	}
	return false
}

func (m *FanCommandRequest) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

// Deprecated: Do not use.
func (m *FanCommandRequest) GetHasSpeed() bool {
	if m != nil {
		return m.HasSpeed
	}
	return false
}

// Deprecated: Do not use.
func (m *FanCommandRequest) GetSpeed() FanSpeed {
	if m != nil {
		return m.Speed
	}
	return FanSpeed_FAN_SPEED_LOW
}

func (m *FanCommandRequest) GetHasOscillating() bool {
	if m != nil {
		return m.HasOscillating
	}
	return false
}

func (m *FanCommandRequest) GetOscillating() bool {
	if m != nil {
		return m.Oscillating
	}
	return false
}

func (m *FanCommandRequest) GetHasDirection() bool {
	if m != nil {
		return m.HasDirection
	}
	return false
}

func (m *FanCommandRequest) GetDirection() FanDirection {
	if m != nil {
		return m.Direction
	}
	return FanDirection_FAN_DIRECTION_FORWARD
}

func (m *FanCommandRequest) GetHasSpeedLevel() bool {
	if m != nil {
		return m.HasSpeedLevel
	}
	return false
}

func (m *FanCommandRequest) GetSpeedLevel() int32 {
	if m != nil {
		return m.SpeedLevel
	}
	return 0
}

// ==================== LIGHT ====================
type ListEntitiesLightResponse struct {
	ObjectId                 string   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Key                      uint32   `protobuf:"fixed32,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                     string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	UniqueId                 string   `protobuf:"bytes,4,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	SupportsBrightness       bool     `protobuf:"varint,5,opt,name=supports_brightness,json=supportsBrightness,proto3" json:"supports_brightness,omitempty"`
	SupportsRgb              bool     `protobuf:"varint,6,opt,name=supports_rgb,json=supportsRgb,proto3" json:"supports_rgb,omitempty"`
	SupportsWhiteValue       bool     `protobuf:"varint,7,opt,name=supports_white_value,json=supportsWhiteValue,proto3" json:"supports_white_value,omitempty"`
	SupportsColorTemperature bool     `protobuf:"varint,8,opt,name=supports_color_temperature,json=supportsColorTemperature,proto3" json:"supports_color_temperature,omitempty"`
	MinMireds                float32  `protobuf:"fixed32,9,opt,name=min_mireds,json=minMireds,proto3" json:"min_mireds,omitempty"`
	MaxMireds                float32  `protobuf:"fixed32,10,opt,name=max_mireds,json=maxMireds,proto3" json:"max_mireds,omitempty"`
	Effects                  []string `protobuf:"bytes,11,rep,name=effects,proto3" json:"effects,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *ListEntitiesLightResponse) Reset()         { *m = ListEntitiesLightResponse{} }
func (m *ListEntitiesLightResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesLightResponse) ProtoMessage()    {}
func (*ListEntitiesLightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}

func (m *ListEntitiesLightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesLightResponse.Unmarshal(m, b)
}
func (m *ListEntitiesLightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesLightResponse.Marshal(b, m, deterministic)
}
func (m *ListEntitiesLightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesLightResponse.Merge(m, src)
}
func (m *ListEntitiesLightResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesLightResponse.Size(m)
}
func (m *ListEntitiesLightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesLightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesLightResponse proto.InternalMessageInfo

func (m *ListEntitiesLightResponse) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *ListEntitiesLightResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ListEntitiesLightResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListEntitiesLightResponse) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *ListEntitiesLightResponse) GetSupportsBrightness() bool {
	if m != nil {
		return m.SupportsBrightness
	}
	return false
}

func (m *ListEntitiesLightResponse) GetSupportsRgb() bool {
	if m != nil {
		return m.SupportsRgb
	}
	return false
}

func (m *ListEntitiesLightResponse) GetSupportsWhiteValue() bool {
	if m != nil {
		return m.SupportsWhiteValue
	}
	return false
}

func (m *ListEntitiesLightResponse) GetSupportsColorTemperature() bool {
	if m != nil {
		return m.SupportsColorTemperature
	}
	return false
}

func (m *ListEntitiesLightResponse) GetMinMireds() float32 {
	if m != nil {
		return m.MinMireds
	}
	return 0
}

func (m *ListEntitiesLightResponse) GetMaxMireds() float32 {
	if m != nil {
		return m.MaxMireds
	}
	return 0
}

func (m *ListEntitiesLightResponse) GetEffects() []string {
	if m != nil {
		return m.Effects
	}
	return nil
}

type LightStateResponse struct {
	Key                  uint32   `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	State                bool     `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Brightness           float32  `protobuf:"fixed32,3,opt,name=brightness,proto3" json:"brightness,omitempty"`
	Red                  float32  `protobuf:"fixed32,4,opt,name=red,proto3" json:"red,omitempty"`
	Green                float32  `protobuf:"fixed32,5,opt,name=green,proto3" json:"green,omitempty"`
	Blue                 float32  `protobuf:"fixed32,6,opt,name=blue,proto3" json:"blue,omitempty"`
	White                float32  `protobuf:"fixed32,7,opt,name=white,proto3" json:"white,omitempty"`
	ColorTemperature     float32  `protobuf:"fixed32,8,opt,name=color_temperature,json=colorTemperature,proto3" json:"color_temperature,omitempty"`
	Effect               string   `protobuf:"bytes,9,opt,name=effect,proto3" json:"effect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LightStateResponse) Reset()         { *m = LightStateResponse{} }
func (m *LightStateResponse) String() string { return proto.CompactTextString(m) }
func (*LightStateResponse) ProtoMessage()    {}
func (*LightStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}

func (m *LightStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LightStateResponse.Unmarshal(m, b)
}
func (m *LightStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LightStateResponse.Marshal(b, m, deterministic)
}
func (m *LightStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LightStateResponse.Merge(m, src)
}
func (m *LightStateResponse) XXX_Size() int {
	return xxx_messageInfo_LightStateResponse.Size(m)
}
func (m *LightStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LightStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LightStateResponse proto.InternalMessageInfo

func (m *LightStateResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *LightStateResponse) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

func (m *LightStateResponse) GetBrightness() float32 {
	if m != nil {
		return m.Brightness
	}
	return 0
}

func (m *LightStateResponse) GetRed() float32 {
	if m != nil {
		return m.Red
	}
	return 0
}

func (m *LightStateResponse) GetGreen() float32 {
	if m != nil {
		return m.Green
	}
	return 0
}

func (m *LightStateResponse) GetBlue() float32 {
	if m != nil {
		return m.Blue
	}
	return 0
}

func (m *LightStateResponse) GetWhite() float32 {
	if m != nil {
		return m.White
	}
	return 0
}

func (m *LightStateResponse) GetColorTemperature() float32 {
	if m != nil {
		return m.ColorTemperature
	}
	return 0
}

func (m *LightStateResponse) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

type LightCommandRequest struct {
	Key                  uint32   `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	HasState             bool     `protobuf:"varint,2,opt,name=has_state,json=hasState,proto3" json:"has_state,omitempty"`
	State                bool     `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	HasBrightness        bool     `protobuf:"varint,4,opt,name=has_brightness,json=hasBrightness,proto3" json:"has_brightness,omitempty"`
	Brightness           float32  `protobuf:"fixed32,5,opt,name=brightness,proto3" json:"brightness,omitempty"`
	HasRgb               bool     `protobuf:"varint,6,opt,name=has_rgb,json=hasRgb,proto3" json:"has_rgb,omitempty"`
	Red                  float32  `protobuf:"fixed32,7,opt,name=red,proto3" json:"red,omitempty"`
	Green                float32  `protobuf:"fixed32,8,opt,name=green,proto3" json:"green,omitempty"`
	Blue                 float32  `protobuf:"fixed32,9,opt,name=blue,proto3" json:"blue,omitempty"`
	HasWhite             bool     `protobuf:"varint,10,opt,name=has_white,json=hasWhite,proto3" json:"has_white,omitempty"`
	White                float32  `protobuf:"fixed32,11,opt,name=white,proto3" json:"white,omitempty"`
	HasColorTemperature  bool     `protobuf:"varint,12,opt,name=has_color_temperature,json=hasColorTemperature,proto3" json:"has_color_temperature,omitempty"`
	ColorTemperature     float32  `protobuf:"fixed32,13,opt,name=color_temperature,json=colorTemperature,proto3" json:"color_temperature,omitempty"`
	HasTransitionLength  bool     `protobuf:"varint,14,opt,name=has_transition_length,json=hasTransitionLength,proto3" json:"has_transition_length,omitempty"`
	TransitionLength     uint32   `protobuf:"varint,15,opt,name=transition_length,json=transitionLength,proto3" json:"transition_length,omitempty"`
	HasFlashLength       bool     `protobuf:"varint,16,opt,name=has_flash_length,json=hasFlashLength,proto3" json:"has_flash_length,omitempty"`
	FlashLength          uint32   `protobuf:"varint,17,opt,name=flash_length,json=flashLength,proto3" json:"flash_length,omitempty"`
	HasEffect            bool     `protobuf:"varint,18,opt,name=has_effect,json=hasEffect,proto3" json:"has_effect,omitempty"`
	Effect               string   `protobuf:"bytes,19,opt,name=effect,proto3" json:"effect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LightCommandRequest) Reset()         { *m = LightCommandRequest{} }
func (m *LightCommandRequest) String() string { return proto.CompactTextString(m) }
func (*LightCommandRequest) ProtoMessage()    {}
func (*LightCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}

func (m *LightCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LightCommandRequest.Unmarshal(m, b)
}
func (m *LightCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LightCommandRequest.Marshal(b, m, deterministic)
}
func (m *LightCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LightCommandRequest.Merge(m, src)
}
func (m *LightCommandRequest) XXX_Size() int {
	return xxx_messageInfo_LightCommandRequest.Size(m)
}
func (m *LightCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LightCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LightCommandRequest proto.InternalMessageInfo

func (m *LightCommandRequest) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *LightCommandRequest) GetHasState() bool {
	if m != nil {
		return m.HasState
	}
	return false
}

func (m *LightCommandRequest) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

func (m *LightCommandRequest) GetHasBrightness() bool {
	if m != nil {
		return m.HasBrightness
	}
	return false
}

func (m *LightCommandRequest) GetBrightness() float32 {
	if m != nil {
		return m.Brightness
	}
	return 0
}

func (m *LightCommandRequest) GetHasRgb() bool {
	if m != nil {
		return m.HasRgb
	}
	return false
}

func (m *LightCommandRequest) GetRed() float32 {
	if m != nil {
		return m.Red
	}
	return 0
}

func (m *LightCommandRequest) GetGreen() float32 {
	if m != nil {
		return m.Green
	}
	return 0
}

func (m *LightCommandRequest) GetBlue() float32 {
	if m != nil {
		return m.Blue
	}
	return 0
}

func (m *LightCommandRequest) GetHasWhite() bool {
	if m != nil {
		return m.HasWhite
	}
	return false
}

func (m *LightCommandRequest) GetWhite() float32 {
	if m != nil {
		return m.White
	}
	return 0
}

func (m *LightCommandRequest) GetHasColorTemperature() bool {
	if m != nil {
		return m.HasColorTemperature
	}
	return false
}

func (m *LightCommandRequest) GetColorTemperature() float32 {
	if m != nil {
		return m.ColorTemperature
	}
	return 0
}

func (m *LightCommandRequest) GetHasTransitionLength() bool {
	if m != nil {
		return m.HasTransitionLength
	}
	return false
}

func (m *LightCommandRequest) GetTransitionLength() uint32 {
	if m != nil {
		return m.TransitionLength
	}
	return 0
}

func (m *LightCommandRequest) GetHasFlashLength() bool {
	if m != nil {
		return m.HasFlashLength
	}
	return false
}

func (m *LightCommandRequest) GetFlashLength() uint32 {
	if m != nil {
		return m.FlashLength
	}
	return 0
}

func (m *LightCommandRequest) GetHasEffect() bool {
	if m != nil {
		return m.HasEffect
	}
	return false
}

func (m *LightCommandRequest) GetEffect() string {
	if m != nil {
		return m.Effect
	}
	return ""
}

type ListEntitiesSensorResponse struct {
	ObjectId             string           `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Key                  uint32           `protobuf:"fixed32,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	UniqueId             string           `protobuf:"bytes,4,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	Icon                 string           `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	UnitOfMeasurement    string           `protobuf:"bytes,6,opt,name=unit_of_measurement,json=unitOfMeasurement,proto3" json:"unit_of_measurement,omitempty"`
	AccuracyDecimals     int32            `protobuf:"varint,7,opt,name=accuracy_decimals,json=accuracyDecimals,proto3" json:"accuracy_decimals,omitempty"`
	ForceUpdate          bool             `protobuf:"varint,8,opt,name=force_update,json=forceUpdate,proto3" json:"force_update,omitempty"`
	DeviceClass          string           `protobuf:"bytes,9,opt,name=device_class,json=deviceClass,proto3" json:"device_class,omitempty"`
	StateClass           SensorStateClass `protobuf:"varint,10,opt,name=state_class,json=stateClass,proto3,enum=nativeapi.SensorStateClass" json:"state_class,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListEntitiesSensorResponse) Reset()         { *m = ListEntitiesSensorResponse{} }
func (m *ListEntitiesSensorResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesSensorResponse) ProtoMessage()    {}
func (*ListEntitiesSensorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}

func (m *ListEntitiesSensorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesSensorResponse.Unmarshal(m, b)
}
func (m *ListEntitiesSensorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesSensorResponse.Marshal(b, m, deterministic)
}
func (m *ListEntitiesSensorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesSensorResponse.Merge(m, src)
}
func (m *ListEntitiesSensorResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesSensorResponse.Size(m)
}
func (m *ListEntitiesSensorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesSensorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesSensorResponse proto.InternalMessageInfo

func (m *ListEntitiesSensorResponse) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *ListEntitiesSensorResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ListEntitiesSensorResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListEntitiesSensorResponse) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *ListEntitiesSensorResponse) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ListEntitiesSensorResponse) GetUnitOfMeasurement() string {
	if m != nil {
		return m.UnitOfMeasurement
	}
	return ""
}

func (m *ListEntitiesSensorResponse) GetAccuracyDecimals() int32 {
	if m != nil {
		return m.AccuracyDecimals
	}
	return 0
}

func (m *ListEntitiesSensorResponse) GetForceUpdate() bool {
	if m != nil {
		return m.ForceUpdate
	}
	return false
}

func (m *ListEntitiesSensorResponse) GetDeviceClass() string {
	if m != nil {
		return m.DeviceClass
	}
	return ""
}

func (m *ListEntitiesSensorResponse) GetStateClass() SensorStateClass {
	if m != nil {
		return m.StateClass
	}
	return SensorStateClass_STATE_CLASS_NONE
}

type SensorStateResponse struct {
	Key   uint32  `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	State float32 `protobuf:"fixed32,2,opt,name=state,proto3" json:"state,omitempty"`
	// If the sensor does not have a valid state yet.
	// Equivalent to `!obj->has_state()` - inverse logic to make state packets smaller
	MissingState         bool     `protobuf:"varint,3,opt,name=missing_state,json=missingState,proto3" json:"missing_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SensorStateResponse) Reset()         { *m = SensorStateResponse{} }
func (m *SensorStateResponse) String() string { return proto.CompactTextString(m) }
func (*SensorStateResponse) ProtoMessage()    {}
func (*SensorStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25}
}

func (m *SensorStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorStateResponse.Unmarshal(m, b)
}
func (m *SensorStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorStateResponse.Marshal(b, m, deterministic)
}
func (m *SensorStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorStateResponse.Merge(m, src)
}
func (m *SensorStateResponse) XXX_Size() int {
	return xxx_messageInfo_SensorStateResponse.Size(m)
}
func (m *SensorStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SensorStateResponse proto.InternalMessageInfo

func (m *SensorStateResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *SensorStateResponse) GetState() float32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *SensorStateResponse) GetMissingState() bool {
	if m != nil {
		return m.MissingState
	}
	return false
}

// ==================== SWITCH ====================
type ListEntitiesSwitchResponse struct {
	ObjectId             string   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Key                  uint32   `protobuf:"fixed32,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	UniqueId             string   `protobuf:"bytes,4,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	Icon                 string   `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	AssumedState         bool     `protobuf:"varint,6,opt,name=assumed_state,json=assumedState,proto3" json:"assumed_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEntitiesSwitchResponse) Reset()         { *m = ListEntitiesSwitchResponse{} }
func (m *ListEntitiesSwitchResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesSwitchResponse) ProtoMessage()    {}
func (*ListEntitiesSwitchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{26}
}

func (m *ListEntitiesSwitchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesSwitchResponse.Unmarshal(m, b)
}
func (m *ListEntitiesSwitchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesSwitchResponse.Marshal(b, m, deterministic)
}
func (m *ListEntitiesSwitchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesSwitchResponse.Merge(m, src)
}
func (m *ListEntitiesSwitchResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesSwitchResponse.Size(m)
}
func (m *ListEntitiesSwitchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesSwitchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesSwitchResponse proto.InternalMessageInfo

func (m *ListEntitiesSwitchResponse) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *ListEntitiesSwitchResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ListEntitiesSwitchResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListEntitiesSwitchResponse) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *ListEntitiesSwitchResponse) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ListEntitiesSwitchResponse) GetAssumedState() bool {
	if m != nil {
		return m.AssumedState
	}
	return false
}

type SwitchStateResponse struct {
	Key                  uint32   `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	State                bool     `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SwitchStateResponse) Reset()         { *m = SwitchStateResponse{} }
func (m *SwitchStateResponse) String() string { return proto.CompactTextString(m) }
func (*SwitchStateResponse) ProtoMessage()    {}
func (*SwitchStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{27}
}

func (m *SwitchStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchStateResponse.Unmarshal(m, b)
}
func (m *SwitchStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchStateResponse.Marshal(b, m, deterministic)
}
func (m *SwitchStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchStateResponse.Merge(m, src)
}
func (m *SwitchStateResponse) XXX_Size() int {
	return xxx_messageInfo_SwitchStateResponse.Size(m)
}
func (m *SwitchStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchStateResponse proto.InternalMessageInfo

func (m *SwitchStateResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *SwitchStateResponse) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

type SwitchCommandRequest struct {
	Key                  uint32   `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	State                bool     `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SwitchCommandRequest) Reset()         { *m = SwitchCommandRequest{} }
func (m *SwitchCommandRequest) String() string { return proto.CompactTextString(m) }
func (*SwitchCommandRequest) ProtoMessage()    {}
func (*SwitchCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{28}
}

func (m *SwitchCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwitchCommandRequest.Unmarshal(m, b)
}
func (m *SwitchCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwitchCommandRequest.Marshal(b, m, deterministic)
}
func (m *SwitchCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwitchCommandRequest.Merge(m, src)
}
func (m *SwitchCommandRequest) XXX_Size() int {
	return xxx_messageInfo_SwitchCommandRequest.Size(m)
}
func (m *SwitchCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SwitchCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SwitchCommandRequest proto.InternalMessageInfo

func (m *SwitchCommandRequest) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *SwitchCommandRequest) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

// ==================== TEXT SENSOR ====================
type ListEntitiesTextSensorResponse struct {
	ObjectId             string   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Key                  uint32   `protobuf:"fixed32,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	UniqueId             string   `protobuf:"bytes,4,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	Icon                 string   `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEntitiesTextSensorResponse) Reset()         { *m = ListEntitiesTextSensorResponse{} }
func (m *ListEntitiesTextSensorResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesTextSensorResponse) ProtoMessage()    {}
func (*ListEntitiesTextSensorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{29}
}

func (m *ListEntitiesTextSensorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesTextSensorResponse.Unmarshal(m, b)
}
func (m *ListEntitiesTextSensorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesTextSensorResponse.Marshal(b, m, deterministic)
}
func (m *ListEntitiesTextSensorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesTextSensorResponse.Merge(m, src)
}
func (m *ListEntitiesTextSensorResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesTextSensorResponse.Size(m)
}
func (m *ListEntitiesTextSensorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesTextSensorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesTextSensorResponse proto.InternalMessageInfo

func (m *ListEntitiesTextSensorResponse) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *ListEntitiesTextSensorResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ListEntitiesTextSensorResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListEntitiesTextSensorResponse) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *ListEntitiesTextSensorResponse) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

type TextSensorStateResponse struct {
	Key   uint32 `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	// If the text sensor does not have a valid state yet.
	// Equivalent to `!obj->has_state()` - inverse logic to make state packets smaller
	MissingState         bool     `protobuf:"varint,3,opt,name=missing_state,json=missingState,proto3" json:"missing_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextSensorStateResponse) Reset()         { *m = TextSensorStateResponse{} }
func (m *TextSensorStateResponse) String() string { return proto.CompactTextString(m) }
func (*TextSensorStateResponse) ProtoMessage()    {}
func (*TextSensorStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{30}
}

func (m *TextSensorStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextSensorStateResponse.Unmarshal(m, b)
}
func (m *TextSensorStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextSensorStateResponse.Marshal(b, m, deterministic)
}
func (m *TextSensorStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextSensorStateResponse.Merge(m, src)
}
func (m *TextSensorStateResponse) XXX_Size() int {
	return xxx_messageInfo_TextSensorStateResponse.Size(m)
}
func (m *TextSensorStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TextSensorStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TextSensorStateResponse proto.InternalMessageInfo

func (m *TextSensorStateResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *TextSensorStateResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *TextSensorStateResponse) GetMissingState() bool {
	if m != nil {
		return m.MissingState
	}
	return false
}

type SubscribeLogsRequest struct {
	Level                LogLevel `protobuf:"varint,1,opt,name=level,proto3,enum=nativeapi.LogLevel" json:"level,omitempty"`
	DumpConfig           bool     `protobuf:"varint,2,opt,name=dump_config,json=dumpConfig,proto3" json:"dump_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeLogsRequest) Reset()         { *m = SubscribeLogsRequest{} }
func (m *SubscribeLogsRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeLogsRequest) ProtoMessage()    {}
func (*SubscribeLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{31}
}

func (m *SubscribeLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeLogsRequest.Unmarshal(m, b)
}
func (m *SubscribeLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeLogsRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeLogsRequest.Merge(m, src)
}
func (m *SubscribeLogsRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeLogsRequest.Size(m)
}
func (m *SubscribeLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeLogsRequest proto.InternalMessageInfo

func (m *SubscribeLogsRequest) GetLevel() LogLevel {
	if m != nil {
		return m.Level
	}
	return LogLevel_LOG_LEVEL_NONE
}

func (m *SubscribeLogsRequest) GetDumpConfig() bool {
	if m != nil {
		return m.DumpConfig
	}
	return false
}

type SubscribeLogsResponse struct {
	Level                LogLevel `protobuf:"varint,1,opt,name=level,proto3,enum=nativeapi.LogLevel" json:"level,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	SendFailed           bool     `protobuf:"varint,4,opt,name=send_failed,json=sendFailed,proto3" json:"send_failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeLogsResponse) Reset()         { *m = SubscribeLogsResponse{} }
func (m *SubscribeLogsResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeLogsResponse) ProtoMessage()    {}
func (*SubscribeLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{32}
}

func (m *SubscribeLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeLogsResponse.Unmarshal(m, b)
}
func (m *SubscribeLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeLogsResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeLogsResponse.Merge(m, src)
}
func (m *SubscribeLogsResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeLogsResponse.Size(m)
}
func (m *SubscribeLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeLogsResponse proto.InternalMessageInfo

func (m *SubscribeLogsResponse) GetLevel() LogLevel {
	if m != nil {
		return m.Level
	}
	return LogLevel_LOG_LEVEL_NONE
}

func (m *SubscribeLogsResponse) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *SubscribeLogsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *SubscribeLogsResponse) GetSendFailed() bool {
	if m != nil {
		return m.SendFailed
	}
	return false
}

// ==================== HOMEASSISTANT.SERVICE ====================
type SubscribeHomeassistantServicesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeHomeassistantServicesRequest) Reset()         { *m = SubscribeHomeassistantServicesRequest{} }
func (m *SubscribeHomeassistantServicesRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeHomeassistantServicesRequest) ProtoMessage()    {}
func (*SubscribeHomeassistantServicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{33}
}

func (m *SubscribeHomeassistantServicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeHomeassistantServicesRequest.Unmarshal(m, b)
}
func (m *SubscribeHomeassistantServicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeHomeassistantServicesRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeHomeassistantServicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeHomeassistantServicesRequest.Merge(m, src)
}
func (m *SubscribeHomeassistantServicesRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeHomeassistantServicesRequest.Size(m)
}
func (m *SubscribeHomeassistantServicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeHomeassistantServicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeHomeassistantServicesRequest proto.InternalMessageInfo

type HomeassistantServiceMap struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HomeassistantServiceMap) Reset()         { *m = HomeassistantServiceMap{} }
func (m *HomeassistantServiceMap) String() string { return proto.CompactTextString(m) }
func (*HomeassistantServiceMap) ProtoMessage()    {}
func (*HomeassistantServiceMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{34}
}

func (m *HomeassistantServiceMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HomeassistantServiceMap.Unmarshal(m, b)
}
func (m *HomeassistantServiceMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HomeassistantServiceMap.Marshal(b, m, deterministic)
}
func (m *HomeassistantServiceMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HomeassistantServiceMap.Merge(m, src)
}
func (m *HomeassistantServiceMap) XXX_Size() int {
	return xxx_messageInfo_HomeassistantServiceMap.Size(m)
}
func (m *HomeassistantServiceMap) XXX_DiscardUnknown() {
	xxx_messageInfo_HomeassistantServiceMap.DiscardUnknown(m)
}

var xxx_messageInfo_HomeassistantServiceMap proto.InternalMessageInfo

func (m *HomeassistantServiceMap) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HomeassistantServiceMap) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type HomeassistantServiceResponse struct {
	Service              string                     `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Data                 []*HomeassistantServiceMap `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	DataTemplate         []*HomeassistantServiceMap `protobuf:"bytes,3,rep,name=data_template,json=dataTemplate,proto3" json:"data_template,omitempty"`
	Variables            []*HomeassistantServiceMap `protobuf:"bytes,4,rep,name=variables,proto3" json:"variables,omitempty"`
	IsEvent              bool                       `protobuf:"varint,5,opt,name=is_event,json=isEvent,proto3" json:"is_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *HomeassistantServiceResponse) Reset()         { *m = HomeassistantServiceResponse{} }
func (m *HomeassistantServiceResponse) String() string { return proto.CompactTextString(m) }
func (*HomeassistantServiceResponse) ProtoMessage()    {}
func (*HomeassistantServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{35}
}

func (m *HomeassistantServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HomeassistantServiceResponse.Unmarshal(m, b)
}
func (m *HomeassistantServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HomeassistantServiceResponse.Marshal(b, m, deterministic)
}
func (m *HomeassistantServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HomeassistantServiceResponse.Merge(m, src)
}
func (m *HomeassistantServiceResponse) XXX_Size() int {
	return xxx_messageInfo_HomeassistantServiceResponse.Size(m)
}
func (m *HomeassistantServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HomeassistantServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HomeassistantServiceResponse proto.InternalMessageInfo

func (m *HomeassistantServiceResponse) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *HomeassistantServiceResponse) GetData() []*HomeassistantServiceMap {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *HomeassistantServiceResponse) GetDataTemplate() []*HomeassistantServiceMap {
	if m != nil {
		return m.DataTemplate
	}
	return nil
}

func (m *HomeassistantServiceResponse) GetVariables() []*HomeassistantServiceMap {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *HomeassistantServiceResponse) GetIsEvent() bool {
	if m != nil {
		return m.IsEvent
	}
	return false
}

// ==================== IMPORT HOME ASSISTANT STATES ====================
// 1. Client sends SubscribeHomeAssistantStatesRequest
// 2. Server responds with zero or more SubscribeHomeAssistantStateResponse (async)
// 3. Client sends HomeAssistantStateResponse for state changes.
type SubscribeHomeAssistantStatesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeHomeAssistantStatesRequest) Reset()         { *m = SubscribeHomeAssistantStatesRequest{} }
func (m *SubscribeHomeAssistantStatesRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeHomeAssistantStatesRequest) ProtoMessage()    {}
func (*SubscribeHomeAssistantStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{36}
}

func (m *SubscribeHomeAssistantStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeHomeAssistantStatesRequest.Unmarshal(m, b)
}
func (m *SubscribeHomeAssistantStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeHomeAssistantStatesRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeHomeAssistantStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeHomeAssistantStatesRequest.Merge(m, src)
}
func (m *SubscribeHomeAssistantStatesRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeHomeAssistantStatesRequest.Size(m)
}
func (m *SubscribeHomeAssistantStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeHomeAssistantStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeHomeAssistantStatesRequest proto.InternalMessageInfo

type SubscribeHomeAssistantStateResponse struct {
	EntityId             string   `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Attribute            string   `protobuf:"bytes,2,opt,name=attribute,proto3" json:"attribute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeHomeAssistantStateResponse) Reset()         { *m = SubscribeHomeAssistantStateResponse{} }
func (m *SubscribeHomeAssistantStateResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeHomeAssistantStateResponse) ProtoMessage()    {}
func (*SubscribeHomeAssistantStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{37}
}

func (m *SubscribeHomeAssistantStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeHomeAssistantStateResponse.Unmarshal(m, b)
}
func (m *SubscribeHomeAssistantStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeHomeAssistantStateResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeHomeAssistantStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeHomeAssistantStateResponse.Merge(m, src)
}
func (m *SubscribeHomeAssistantStateResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeHomeAssistantStateResponse.Size(m)
}
func (m *SubscribeHomeAssistantStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeHomeAssistantStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeHomeAssistantStateResponse proto.InternalMessageInfo

func (m *SubscribeHomeAssistantStateResponse) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

func (m *SubscribeHomeAssistantStateResponse) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

type HomeAssistantStateResponse struct {
	EntityId             string   `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Attribute            string   `protobuf:"bytes,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HomeAssistantStateResponse) Reset()         { *m = HomeAssistantStateResponse{} }
func (m *HomeAssistantStateResponse) String() string { return proto.CompactTextString(m) }
func (*HomeAssistantStateResponse) ProtoMessage()    {}
func (*HomeAssistantStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{38}
}

func (m *HomeAssistantStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HomeAssistantStateResponse.Unmarshal(m, b)
}
func (m *HomeAssistantStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HomeAssistantStateResponse.Marshal(b, m, deterministic)
}
func (m *HomeAssistantStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HomeAssistantStateResponse.Merge(m, src)
}
func (m *HomeAssistantStateResponse) XXX_Size() int {
	return xxx_messageInfo_HomeAssistantStateResponse.Size(m)
}
func (m *HomeAssistantStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HomeAssistantStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HomeAssistantStateResponse proto.InternalMessageInfo

func (m *HomeAssistantStateResponse) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

func (m *HomeAssistantStateResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *HomeAssistantStateResponse) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

// ==================== IMPORT TIME ====================
type GetTimeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTimeRequest) Reset()         { *m = GetTimeRequest{} }
func (m *GetTimeRequest) String() string { return proto.CompactTextString(m) }
func (*GetTimeRequest) ProtoMessage()    {}
func (*GetTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{39}
}

func (m *GetTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTimeRequest.Unmarshal(m, b)
}
func (m *GetTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTimeRequest.Marshal(b, m, deterministic)
}
func (m *GetTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTimeRequest.Merge(m, src)
}
func (m *GetTimeRequest) XXX_Size() int {
	return xxx_messageInfo_GetTimeRequest.Size(m)
}
func (m *GetTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTimeRequest proto.InternalMessageInfo

type GetTimeResponse struct {
	EpochSeconds         uint32   `protobuf:"fixed32,1,opt,name=epoch_seconds,json=epochSeconds,proto3" json:"epoch_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTimeResponse) Reset()         { *m = GetTimeResponse{} }
func (m *GetTimeResponse) String() string { return proto.CompactTextString(m) }
func (*GetTimeResponse) ProtoMessage()    {}
func (*GetTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{40}
}

func (m *GetTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTimeResponse.Unmarshal(m, b)
}
func (m *GetTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTimeResponse.Marshal(b, m, deterministic)
}
func (m *GetTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTimeResponse.Merge(m, src)
}
func (m *GetTimeResponse) XXX_Size() int {
	return xxx_messageInfo_GetTimeResponse.Size(m)
}
func (m *GetTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTimeResponse proto.InternalMessageInfo

func (m *GetTimeResponse) GetEpochSeconds() uint32 {
	if m != nil {
		return m.EpochSeconds
	}
	return 0
}

type ListEntitiesServicesArgument struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 ServiceArgType `protobuf:"varint,2,opt,name=type,proto3,enum=nativeapi.ServiceArgType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListEntitiesServicesArgument) Reset()         { *m = ListEntitiesServicesArgument{} }
func (m *ListEntitiesServicesArgument) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesServicesArgument) ProtoMessage()    {}
func (*ListEntitiesServicesArgument) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{41}
}

func (m *ListEntitiesServicesArgument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesServicesArgument.Unmarshal(m, b)
}
func (m *ListEntitiesServicesArgument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesServicesArgument.Marshal(b, m, deterministic)
}
func (m *ListEntitiesServicesArgument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesServicesArgument.Merge(m, src)
}
func (m *ListEntitiesServicesArgument) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesServicesArgument.Size(m)
}
func (m *ListEntitiesServicesArgument) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesServicesArgument.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesServicesArgument proto.InternalMessageInfo

func (m *ListEntitiesServicesArgument) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListEntitiesServicesArgument) GetType() ServiceArgType {
	if m != nil {
		return m.Type
	}
	return ServiceArgType_SERVICE_ARG_TYPE_BOOL
}

type ListEntitiesServicesResponse struct {
	Name                 string                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key                  uint32                          `protobuf:"fixed32,2,opt,name=key,proto3" json:"key,omitempty"`
	Args                 []*ListEntitiesServicesArgument `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ListEntitiesServicesResponse) Reset()         { *m = ListEntitiesServicesResponse{} }
func (m *ListEntitiesServicesResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesServicesResponse) ProtoMessage()    {}
func (*ListEntitiesServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{42}
}

func (m *ListEntitiesServicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesServicesResponse.Unmarshal(m, b)
}
func (m *ListEntitiesServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesServicesResponse.Marshal(b, m, deterministic)
}
func (m *ListEntitiesServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesServicesResponse.Merge(m, src)
}
func (m *ListEntitiesServicesResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesServicesResponse.Size(m)
}
func (m *ListEntitiesServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesServicesResponse proto.InternalMessageInfo

func (m *ListEntitiesServicesResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListEntitiesServicesResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ListEntitiesServicesResponse) GetArgs() []*ListEntitiesServicesArgument {
	if m != nil {
		return m.Args
	}
	return nil
}

type ExecuteServiceArgument struct {
	Bool_     bool    `protobuf:"varint,1,opt,name=bool_,json=bool,proto3" json:"bool_,omitempty"`
	LegacyInt int32   `protobuf:"varint,2,opt,name=legacy_int,json=legacyInt,proto3" json:"legacy_int,omitempty"`
	Float_    float32 `protobuf:"fixed32,3,opt,name=float_,json=float,proto3" json:"float_,omitempty"`
	String_   string  `protobuf:"bytes,4,opt,name=string_,json=string,proto3" json:"string_,omitempty"`
	// ESPHome 1.14 (api v1.3) make int a signed value
	Int_                 int32     `protobuf:"zigzag32,5,opt,name=int_,json=int,proto3" json:"int_,omitempty"`
	BoolArray            []bool    `protobuf:"varint,6,rep,name=bool_array,json=boolArray,proto3" json:"bool_array,omitempty"`
	IntArray             []int32   `protobuf:"zigzag32,7,rep,name=int_array,json=intArray,proto3" json:"int_array,omitempty"`
	FloatArray           []float32 `protobuf:"fixed32,8,rep,name=float_array,json=floatArray,proto3" json:"float_array,omitempty"`
	StringArray          []string  `protobuf:"bytes,9,rep,name=string_array,json=stringArray,proto3" json:"string_array,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ExecuteServiceArgument) Reset()         { *m = ExecuteServiceArgument{} }
func (m *ExecuteServiceArgument) String() string { return proto.CompactTextString(m) }
func (*ExecuteServiceArgument) ProtoMessage()    {}
func (*ExecuteServiceArgument) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{43}
}

func (m *ExecuteServiceArgument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteServiceArgument.Unmarshal(m, b)
}
func (m *ExecuteServiceArgument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteServiceArgument.Marshal(b, m, deterministic)
}
func (m *ExecuteServiceArgument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteServiceArgument.Merge(m, src)
}
func (m *ExecuteServiceArgument) XXX_Size() int {
	return xxx_messageInfo_ExecuteServiceArgument.Size(m)
}
func (m *ExecuteServiceArgument) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteServiceArgument.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteServiceArgument proto.InternalMessageInfo

func (m *ExecuteServiceArgument) GetBool_() bool {
	if m != nil {
		return m.Bool_
	}
	return false
}

func (m *ExecuteServiceArgument) GetLegacyInt() int32 {
	if m != nil {
		return m.LegacyInt
	}
	return 0
}

func (m *ExecuteServiceArgument) GetFloat_() float32 {
	if m != nil {
		return m.Float_
	}
	return 0
}

func (m *ExecuteServiceArgument) GetString_() string {
	if m != nil {
		return m.String_
	}
	return ""
}

func (m *ExecuteServiceArgument) GetInt_() int32 {
	if m != nil {
		return m.Int_
	}
	return 0
}

func (m *ExecuteServiceArgument) GetBoolArray() []bool {
	if m != nil {
		return m.BoolArray
	}
	return nil
}

func (m *ExecuteServiceArgument) GetIntArray() []int32 {
	if m != nil {
		return m.IntArray
	}
	return nil
}

func (m *ExecuteServiceArgument) GetFloatArray() []float32 {
	if m != nil {
		return m.FloatArray
	}
	return nil
}

func (m *ExecuteServiceArgument) GetStringArray() []string {
	if m != nil {
		return m.StringArray
	}
	return nil
}

type ExecuteServiceRequest struct {
	Key                  uint32                    `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	Args                 []*ExecuteServiceArgument `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ExecuteServiceRequest) Reset()         { *m = ExecuteServiceRequest{} }
func (m *ExecuteServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteServiceRequest) ProtoMessage()    {}
func (*ExecuteServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{44}
}

func (m *ExecuteServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteServiceRequest.Unmarshal(m, b)
}
func (m *ExecuteServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteServiceRequest.Marshal(b, m, deterministic)
}
func (m *ExecuteServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteServiceRequest.Merge(m, src)
}
func (m *ExecuteServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ExecuteServiceRequest.Size(m)
}
func (m *ExecuteServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteServiceRequest proto.InternalMessageInfo

func (m *ExecuteServiceRequest) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ExecuteServiceRequest) GetArgs() []*ExecuteServiceArgument {
	if m != nil {
		return m.Args
	}
	return nil
}

// ==================== CAMERA ====================
type ListEntitiesCameraResponse struct {
	ObjectId             string   `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Key                  uint32   `protobuf:"fixed32,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	UniqueId             string   `protobuf:"bytes,4,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEntitiesCameraResponse) Reset()         { *m = ListEntitiesCameraResponse{} }
func (m *ListEntitiesCameraResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesCameraResponse) ProtoMessage()    {}
func (*ListEntitiesCameraResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{45}
}

func (m *ListEntitiesCameraResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesCameraResponse.Unmarshal(m, b)
}
func (m *ListEntitiesCameraResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesCameraResponse.Marshal(b, m, deterministic)
}
func (m *ListEntitiesCameraResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesCameraResponse.Merge(m, src)
}
func (m *ListEntitiesCameraResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesCameraResponse.Size(m)
}
func (m *ListEntitiesCameraResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesCameraResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesCameraResponse proto.InternalMessageInfo

func (m *ListEntitiesCameraResponse) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *ListEntitiesCameraResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ListEntitiesCameraResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListEntitiesCameraResponse) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

type CameraImageResponse struct {
	Key                  uint32   `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Done                 bool     `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CameraImageResponse) Reset()         { *m = CameraImageResponse{} }
func (m *CameraImageResponse) String() string { return proto.CompactTextString(m) }
func (*CameraImageResponse) ProtoMessage()    {}
func (*CameraImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{46}
}

func (m *CameraImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CameraImageResponse.Unmarshal(m, b)
}
func (m *CameraImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CameraImageResponse.Marshal(b, m, deterministic)
}
func (m *CameraImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CameraImageResponse.Merge(m, src)
}
func (m *CameraImageResponse) XXX_Size() int {
	return xxx_messageInfo_CameraImageResponse.Size(m)
}
func (m *CameraImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CameraImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CameraImageResponse proto.InternalMessageInfo

func (m *CameraImageResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *CameraImageResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CameraImageResponse) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type CameraImageRequest struct {
	Single               bool     `protobuf:"varint,1,opt,name=single,proto3" json:"single,omitempty"`
	Stream               bool     `protobuf:"varint,2,opt,name=stream,proto3" json:"stream,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CameraImageRequest) Reset()         { *m = CameraImageRequest{} }
func (m *CameraImageRequest) String() string { return proto.CompactTextString(m) }
func (*CameraImageRequest) ProtoMessage()    {}
func (*CameraImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{47}
}

func (m *CameraImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CameraImageRequest.Unmarshal(m, b)
}
func (m *CameraImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CameraImageRequest.Marshal(b, m, deterministic)
}
func (m *CameraImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CameraImageRequest.Merge(m, src)
}
func (m *CameraImageRequest) XXX_Size() int {
	return xxx_messageInfo_CameraImageRequest.Size(m)
}
func (m *CameraImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CameraImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CameraImageRequest proto.InternalMessageInfo

func (m *CameraImageRequest) GetSingle() bool {
	if m != nil {
		return m.Single
	}
	return false
}

func (m *CameraImageRequest) GetStream() bool {
	if m != nil {
		return m.Stream
	}
	return false
}

type ListEntitiesClimateResponse struct {
	ObjectId                          string        `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Key                               uint32        `protobuf:"fixed32,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                              string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	UniqueId                          string        `protobuf:"bytes,4,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	SupportsCurrentTemperature        bool          `protobuf:"varint,5,opt,name=supports_current_temperature,json=supportsCurrentTemperature,proto3" json:"supports_current_temperature,omitempty"`
	SupportsTwoPointTargetTemperature bool          `protobuf:"varint,6,opt,name=supports_two_point_target_temperature,json=supportsTwoPointTargetTemperature,proto3" json:"supports_two_point_target_temperature,omitempty"`
	SupportedModes                    []ClimateMode `protobuf:"varint,7,rep,packed,name=supported_modes,json=supportedModes,proto3,enum=nativeapi.ClimateMode" json:"supported_modes,omitempty"`
	VisualMinTemperature              float32       `protobuf:"fixed32,8,opt,name=visual_min_temperature,json=visualMinTemperature,proto3" json:"visual_min_temperature,omitempty"`
	VisualMaxTemperature              float32       `protobuf:"fixed32,9,opt,name=visual_max_temperature,json=visualMaxTemperature,proto3" json:"visual_max_temperature,omitempty"`
	VisualTemperatureStep             float32       `protobuf:"fixed32,10,opt,name=visual_temperature_step,json=visualTemperatureStep,proto3" json:"visual_temperature_step,omitempty"`
	// for older peer versions - in new system this
	// is if CLIMATE_PRESET_AWAY exists is supported_presets
	LegacySupportsAway      bool               `protobuf:"varint,11,opt,name=legacy_supports_away,json=legacySupportsAway,proto3" json:"legacy_supports_away,omitempty"`
	SupportsAction          bool               `protobuf:"varint,12,opt,name=supports_action,json=supportsAction,proto3" json:"supports_action,omitempty"`
	SupportedFanModes       []ClimateFanMode   `protobuf:"varint,13,rep,packed,name=supported_fan_modes,json=supportedFanModes,proto3,enum=nativeapi.ClimateFanMode" json:"supported_fan_modes,omitempty"`
	SupportedSwingModes     []ClimateSwingMode `protobuf:"varint,14,rep,packed,name=supported_swing_modes,json=supportedSwingModes,proto3,enum=nativeapi.ClimateSwingMode" json:"supported_swing_modes,omitempty"`
	SupportedCustomFanModes []string           `protobuf:"bytes,15,rep,name=supported_custom_fan_modes,json=supportedCustomFanModes,proto3" json:"supported_custom_fan_modes,omitempty"`
	SupportedPresets        []ClimatePreset    `protobuf:"varint,16,rep,packed,name=supported_presets,json=supportedPresets,proto3,enum=nativeapi.ClimatePreset" json:"supported_presets,omitempty"`
	SupportedCustomPresets  []string           `protobuf:"bytes,17,rep,name=supported_custom_presets,json=supportedCustomPresets,proto3" json:"supported_custom_presets,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}           `json:"-"`
	XXX_unrecognized        []byte             `json:"-"`
	XXX_sizecache           int32              `json:"-"`
}

func (m *ListEntitiesClimateResponse) Reset()         { *m = ListEntitiesClimateResponse{} }
func (m *ListEntitiesClimateResponse) String() string { return proto.CompactTextString(m) }
func (*ListEntitiesClimateResponse) ProtoMessage()    {}
func (*ListEntitiesClimateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{48}
}

func (m *ListEntitiesClimateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEntitiesClimateResponse.Unmarshal(m, b)
}
func (m *ListEntitiesClimateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEntitiesClimateResponse.Marshal(b, m, deterministic)
}
func (m *ListEntitiesClimateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEntitiesClimateResponse.Merge(m, src)
}
func (m *ListEntitiesClimateResponse) XXX_Size() int {
	return xxx_messageInfo_ListEntitiesClimateResponse.Size(m)
}
func (m *ListEntitiesClimateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEntitiesClimateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEntitiesClimateResponse proto.InternalMessageInfo

func (m *ListEntitiesClimateResponse) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *ListEntitiesClimateResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ListEntitiesClimateResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListEntitiesClimateResponse) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *ListEntitiesClimateResponse) GetSupportsCurrentTemperature() bool {
	if m != nil {
		return m.SupportsCurrentTemperature
	}
	return false
}

func (m *ListEntitiesClimateResponse) GetSupportsTwoPointTargetTemperature() bool {
	if m != nil {
		return m.SupportsTwoPointTargetTemperature
	}
	return false
}

func (m *ListEntitiesClimateResponse) GetSupportedModes() []ClimateMode {
	if m != nil {
		return m.SupportedModes
	}
	return nil
}

func (m *ListEntitiesClimateResponse) GetVisualMinTemperature() float32 {
	if m != nil {
		return m.VisualMinTemperature
	}
	return 0
}

func (m *ListEntitiesClimateResponse) GetVisualMaxTemperature() float32 {
	if m != nil {
		return m.VisualMaxTemperature
	}
	return 0
}

func (m *ListEntitiesClimateResponse) GetVisualTemperatureStep() float32 {
	if m != nil {
		return m.VisualTemperatureStep
	}
	return 0
}

func (m *ListEntitiesClimateResponse) GetLegacySupportsAway() bool {
	if m != nil {
		return m.LegacySupportsAway
	}
	return false
}

func (m *ListEntitiesClimateResponse) GetSupportsAction() bool {
	if m != nil {
		return m.SupportsAction
	}
	return false
}

func (m *ListEntitiesClimateResponse) GetSupportedFanModes() []ClimateFanMode {
	if m != nil {
		return m.SupportedFanModes
	}
	return nil
}

func (m *ListEntitiesClimateResponse) GetSupportedSwingModes() []ClimateSwingMode {
	if m != nil {
		return m.SupportedSwingModes
	}
	return nil
}

func (m *ListEntitiesClimateResponse) GetSupportedCustomFanModes() []string {
	if m != nil {
		return m.SupportedCustomFanModes
	}
	return nil
}

func (m *ListEntitiesClimateResponse) GetSupportedPresets() []ClimatePreset {
	if m != nil {
		return m.SupportedPresets
	}
	return nil
}

func (m *ListEntitiesClimateResponse) GetSupportedCustomPresets() []string {
	if m != nil {
		return m.SupportedCustomPresets
	}
	return nil
}

type ClimateStateResponse struct {
	Key                   uint32      `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	Mode                  ClimateMode `protobuf:"varint,2,opt,name=mode,proto3,enum=nativeapi.ClimateMode" json:"mode,omitempty"`
	CurrentTemperature    float32     `protobuf:"fixed32,3,opt,name=current_temperature,json=currentTemperature,proto3" json:"current_temperature,omitempty"`
	TargetTemperature     float32     `protobuf:"fixed32,4,opt,name=target_temperature,json=targetTemperature,proto3" json:"target_temperature,omitempty"`
	TargetTemperatureLow  float32     `protobuf:"fixed32,5,opt,name=target_temperature_low,json=targetTemperatureLow,proto3" json:"target_temperature_low,omitempty"`
	TargetTemperatureHigh float32     `protobuf:"fixed32,6,opt,name=target_temperature_high,json=targetTemperatureHigh,proto3" json:"target_temperature_high,omitempty"`
	// For older peers, equal to preset == CLIMATE_PRESET_AWAY
	LegacyAway           bool             `protobuf:"varint,7,opt,name=legacy_away,json=legacyAway,proto3" json:"legacy_away,omitempty"`
	Action               ClimateAction    `protobuf:"varint,8,opt,name=action,proto3,enum=nativeapi.ClimateAction" json:"action,omitempty"`
	FanMode              ClimateFanMode   `protobuf:"varint,9,opt,name=fan_mode,json=fanMode,proto3,enum=nativeapi.ClimateFanMode" json:"fan_mode,omitempty"`
	SwingMode            ClimateSwingMode `protobuf:"varint,10,opt,name=swing_mode,json=swingMode,proto3,enum=nativeapi.ClimateSwingMode" json:"swing_mode,omitempty"`
	CustomFanMode        string           `protobuf:"bytes,11,opt,name=custom_fan_mode,json=customFanMode,proto3" json:"custom_fan_mode,omitempty"`
	Preset               ClimatePreset    `protobuf:"varint,12,opt,name=preset,proto3,enum=nativeapi.ClimatePreset" json:"preset,omitempty"`
	CustomPreset         string           `protobuf:"bytes,13,opt,name=custom_preset,json=customPreset,proto3" json:"custom_preset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ClimateStateResponse) Reset()         { *m = ClimateStateResponse{} }
func (m *ClimateStateResponse) String() string { return proto.CompactTextString(m) }
func (*ClimateStateResponse) ProtoMessage()    {}
func (*ClimateStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{49}
}

func (m *ClimateStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClimateStateResponse.Unmarshal(m, b)
}
func (m *ClimateStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClimateStateResponse.Marshal(b, m, deterministic)
}
func (m *ClimateStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClimateStateResponse.Merge(m, src)
}
func (m *ClimateStateResponse) XXX_Size() int {
	return xxx_messageInfo_ClimateStateResponse.Size(m)
}
func (m *ClimateStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClimateStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClimateStateResponse proto.InternalMessageInfo

func (m *ClimateStateResponse) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ClimateStateResponse) GetMode() ClimateMode {
	if m != nil {
		return m.Mode
	}
	return ClimateMode_CLIMATE_MODE_OFF
}

func (m *ClimateStateResponse) GetCurrentTemperature() float32 {
	if m != nil {
		return m.CurrentTemperature
	}
	return 0
}

func (m *ClimateStateResponse) GetTargetTemperature() float32 {
	if m != nil {
		return m.TargetTemperature
	}
	return 0
}

func (m *ClimateStateResponse) GetTargetTemperatureLow() float32 {
	if m != nil {
		return m.TargetTemperatureLow
	}
	return 0
}

func (m *ClimateStateResponse) GetTargetTemperatureHigh() float32 {
	if m != nil {
		return m.TargetTemperatureHigh
	}
	return 0
}

func (m *ClimateStateResponse) GetLegacyAway() bool {
	if m != nil {
		return m.LegacyAway
	}
	return false
}

func (m *ClimateStateResponse) GetAction() ClimateAction {
	if m != nil {
		return m.Action
	}
	return ClimateAction_CLIMATE_ACTION_OFF
}

func (m *ClimateStateResponse) GetFanMode() ClimateFanMode {
	if m != nil {
		return m.FanMode
	}
	return ClimateFanMode_CLIMATE_FAN_ON
}

func (m *ClimateStateResponse) GetSwingMode() ClimateSwingMode {
	if m != nil {
		return m.SwingMode
	}
	return ClimateSwingMode_CLIMATE_SWING_OFF
}

func (m *ClimateStateResponse) GetCustomFanMode() string {
	if m != nil {
		return m.CustomFanMode
	}
	return ""
}

func (m *ClimateStateResponse) GetPreset() ClimatePreset {
	if m != nil {
		return m.Preset
	}
	return ClimatePreset_CLIMATE_PRESET_NONE
}

func (m *ClimateStateResponse) GetCustomPreset() string {
	if m != nil {
		return m.CustomPreset
	}
	return ""
}

type ClimateCommandRequest struct {
	Key                      uint32      `protobuf:"fixed32,1,opt,name=key,proto3" json:"key,omitempty"`
	HasMode                  bool        `protobuf:"varint,2,opt,name=has_mode,json=hasMode,proto3" json:"has_mode,omitempty"`
	Mode                     ClimateMode `protobuf:"varint,3,opt,name=mode,proto3,enum=nativeapi.ClimateMode" json:"mode,omitempty"`
	HasTargetTemperature     bool        `protobuf:"varint,4,opt,name=has_target_temperature,json=hasTargetTemperature,proto3" json:"has_target_temperature,omitempty"`
	TargetTemperature        float32     `protobuf:"fixed32,5,opt,name=target_temperature,json=targetTemperature,proto3" json:"target_temperature,omitempty"`
	HasTargetTemperatureLow  bool        `protobuf:"varint,6,opt,name=has_target_temperature_low,json=hasTargetTemperatureLow,proto3" json:"has_target_temperature_low,omitempty"`
	TargetTemperatureLow     float32     `protobuf:"fixed32,7,opt,name=target_temperature_low,json=targetTemperatureLow,proto3" json:"target_temperature_low,omitempty"`
	HasTargetTemperatureHigh bool        `protobuf:"varint,8,opt,name=has_target_temperature_high,json=hasTargetTemperatureHigh,proto3" json:"has_target_temperature_high,omitempty"`
	TargetTemperatureHigh    float32     `protobuf:"fixed32,9,opt,name=target_temperature_high,json=targetTemperatureHigh,proto3" json:"target_temperature_high,omitempty"`
	// legacy, for older peers, newer ones should use CLIMATE_PRESET_AWAY in preset
	HasLegacyAway        bool             `protobuf:"varint,10,opt,name=has_legacy_away,json=hasLegacyAway,proto3" json:"has_legacy_away,omitempty"`
	LegacyAway           bool             `protobuf:"varint,11,opt,name=legacy_away,json=legacyAway,proto3" json:"legacy_away,omitempty"`
	HasFanMode           bool             `protobuf:"varint,12,opt,name=has_fan_mode,json=hasFanMode,proto3" json:"has_fan_mode,omitempty"`
	FanMode              ClimateFanMode   `protobuf:"varint,13,opt,name=fan_mode,json=fanMode,proto3,enum=nativeapi.ClimateFanMode" json:"fan_mode,omitempty"`
	HasSwingMode         bool             `protobuf:"varint,14,opt,name=has_swing_mode,json=hasSwingMode,proto3" json:"has_swing_mode,omitempty"`
	SwingMode            ClimateSwingMode `protobuf:"varint,15,opt,name=swing_mode,json=swingMode,proto3,enum=nativeapi.ClimateSwingMode" json:"swing_mode,omitempty"`
	HasCustomFanMode     bool             `protobuf:"varint,16,opt,name=has_custom_fan_mode,json=hasCustomFanMode,proto3" json:"has_custom_fan_mode,omitempty"`
	CustomFanMode        string           `protobuf:"bytes,17,opt,name=custom_fan_mode,json=customFanMode,proto3" json:"custom_fan_mode,omitempty"`
	HasPreset            bool             `protobuf:"varint,18,opt,name=has_preset,json=hasPreset,proto3" json:"has_preset,omitempty"`
	Preset               ClimatePreset    `protobuf:"varint,19,opt,name=preset,proto3,enum=nativeapi.ClimatePreset" json:"preset,omitempty"`
	HasCustomPreset      bool             `protobuf:"varint,20,opt,name=has_custom_preset,json=hasCustomPreset,proto3" json:"has_custom_preset,omitempty"`
	CustomPreset         string           `protobuf:"bytes,21,opt,name=custom_preset,json=customPreset,proto3" json:"custom_preset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ClimateCommandRequest) Reset()         { *m = ClimateCommandRequest{} }
func (m *ClimateCommandRequest) String() string { return proto.CompactTextString(m) }
func (*ClimateCommandRequest) ProtoMessage()    {}
func (*ClimateCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{50}
}

func (m *ClimateCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClimateCommandRequest.Unmarshal(m, b)
}
func (m *ClimateCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClimateCommandRequest.Marshal(b, m, deterministic)
}
func (m *ClimateCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClimateCommandRequest.Merge(m, src)
}
func (m *ClimateCommandRequest) XXX_Size() int {
	return xxx_messageInfo_ClimateCommandRequest.Size(m)
}
func (m *ClimateCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClimateCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClimateCommandRequest proto.InternalMessageInfo

func (m *ClimateCommandRequest) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ClimateCommandRequest) GetHasMode() bool {
	if m != nil {
		return m.HasMode
	}
	return false
}

func (m *ClimateCommandRequest) GetMode() ClimateMode {
	if m != nil {
		return m.Mode
	}
	return ClimateMode_CLIMATE_MODE_OFF
}

func (m *ClimateCommandRequest) GetHasTargetTemperature() bool {
	if m != nil {
		return m.HasTargetTemperature
	}
	return false
}

func (m *ClimateCommandRequest) GetTargetTemperature() float32 {
	if m != nil {
		return m.TargetTemperature
	}
	return 0
}

func (m *ClimateCommandRequest) GetHasTargetTemperatureLow() bool {
	if m != nil {
		return m.HasTargetTemperatureLow
	}
	return false
}

func (m *ClimateCommandRequest) GetTargetTemperatureLow() float32 {
	if m != nil {
		return m.TargetTemperatureLow
	}
	return 0
}

func (m *ClimateCommandRequest) GetHasTargetTemperatureHigh() bool {
	if m != nil {
		return m.HasTargetTemperatureHigh
	}
	return false
}

func (m *ClimateCommandRequest) GetTargetTemperatureHigh() float32 {
	if m != nil {
		return m.TargetTemperatureHigh
	}
	return 0
}

func (m *ClimateCommandRequest) GetHasLegacyAway() bool {
	if m != nil {
		return m.HasLegacyAway
	}
	return false
}

func (m *ClimateCommandRequest) GetLegacyAway() bool {
	if m != nil {
		return m.LegacyAway
	}
	return false
}

func (m *ClimateCommandRequest) GetHasFanMode() bool {
	if m != nil {
		return m.HasFanMode
	}
	return false
}

func (m *ClimateCommandRequest) GetFanMode() ClimateFanMode {
	if m != nil {
		return m.FanMode
	}
	return ClimateFanMode_CLIMATE_FAN_ON
}

func (m *ClimateCommandRequest) GetHasSwingMode() bool {
	if m != nil {
		return m.HasSwingMode
	}
	return false
}

func (m *ClimateCommandRequest) GetSwingMode() ClimateSwingMode {
	if m != nil {
		return m.SwingMode
	}
	return ClimateSwingMode_CLIMATE_SWING_OFF
}

func (m *ClimateCommandRequest) GetHasCustomFanMode() bool {
	if m != nil {
		return m.HasCustomFanMode
	}
	return false
}

func (m *ClimateCommandRequest) GetCustomFanMode() string {
	if m != nil {
		return m.CustomFanMode
	}
	return ""
}

func (m *ClimateCommandRequest) GetHasPreset() bool {
	if m != nil {
		return m.HasPreset
	}
	return false
}

func (m *ClimateCommandRequest) GetPreset() ClimatePreset {
	if m != nil {
		return m.Preset
	}
	return ClimatePreset_CLIMATE_PRESET_NONE
}

func (m *ClimateCommandRequest) GetHasCustomPreset() bool {
	if m != nil {
		return m.HasCustomPreset
	}
	return false
}

func (m *ClimateCommandRequest) GetCustomPreset() string {
	if m != nil {
		return m.CustomPreset
	}
	return ""
}

func init() {
	proto.RegisterEnum("nativeapi.LegacyCoverState", LegacyCoverState_name, LegacyCoverState_value)
	proto.RegisterEnum("nativeapi.CoverOperation", CoverOperation_name, CoverOperation_value)
	proto.RegisterEnum("nativeapi.LegacyCoverCommand", LegacyCoverCommand_name, LegacyCoverCommand_value)
	proto.RegisterEnum("nativeapi.FanSpeed", FanSpeed_name, FanSpeed_value)
	proto.RegisterEnum("nativeapi.FanDirection", FanDirection_name, FanDirection_value)
	proto.RegisterEnum("nativeapi.SensorStateClass", SensorStateClass_name, SensorStateClass_value)
	proto.RegisterEnum("nativeapi.LogLevel", LogLevel_name, LogLevel_value)
	proto.RegisterEnum("nativeapi.ServiceArgType", ServiceArgType_name, ServiceArgType_value)
	proto.RegisterEnum("nativeapi.ClimateMode", ClimateMode_name, ClimateMode_value)
	proto.RegisterEnum("nativeapi.ClimateFanMode", ClimateFanMode_name, ClimateFanMode_value)
	proto.RegisterEnum("nativeapi.ClimateSwingMode", ClimateSwingMode_name, ClimateSwingMode_value)
	proto.RegisterEnum("nativeapi.ClimateAction", ClimateAction_name, ClimateAction_value)
	proto.RegisterEnum("nativeapi.ClimatePreset", ClimatePreset_name, ClimatePreset_value)
	proto.RegisterType((*HelloRequest)(nil), "nativeapi.HelloRequest")
	proto.RegisterType((*HelloResponse)(nil), "nativeapi.HelloResponse")
	proto.RegisterType((*ConnectRequest)(nil), "nativeapi.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "nativeapi.ConnectResponse")
	proto.RegisterType((*DisconnectRequest)(nil), "nativeapi.DisconnectRequest")
	proto.RegisterType((*DisconnectResponse)(nil), "nativeapi.DisconnectResponse")
	proto.RegisterType((*PingRequest)(nil), "nativeapi.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "nativeapi.PingResponse")
	proto.RegisterType((*DeviceInfoRequest)(nil), "nativeapi.DeviceInfoRequest")
	proto.RegisterType((*DeviceInfoResponse)(nil), "nativeapi.DeviceInfoResponse")
	proto.RegisterType((*ListEntitiesRequest)(nil), "nativeapi.ListEntitiesRequest")
	proto.RegisterType((*ListEntitiesDoneResponse)(nil), "nativeapi.ListEntitiesDoneResponse")
	proto.RegisterType((*SubscribeStatesRequest)(nil), "nativeapi.SubscribeStatesRequest")
	proto.RegisterType((*ListEntitiesBinarySensorResponse)(nil), "nativeapi.ListEntitiesBinarySensorResponse")
	proto.RegisterType((*BinarySensorStateResponse)(nil), "nativeapi.BinarySensorStateResponse")
	proto.RegisterType((*ListEntitiesCoverResponse)(nil), "nativeapi.ListEntitiesCoverResponse")
	proto.RegisterType((*CoverStateResponse)(nil), "nativeapi.CoverStateResponse")
	proto.RegisterType((*CoverCommandRequest)(nil), "nativeapi.CoverCommandRequest")
	proto.RegisterType((*ListEntitiesFanResponse)(nil), "nativeapi.ListEntitiesFanResponse")
	proto.RegisterType((*FanStateResponse)(nil), "nativeapi.FanStateResponse")
	proto.RegisterType((*FanCommandRequest)(nil), "nativeapi.FanCommandRequest")
	proto.RegisterType((*ListEntitiesLightResponse)(nil), "nativeapi.ListEntitiesLightResponse")
	proto.RegisterType((*LightStateResponse)(nil), "nativeapi.LightStateResponse")
	proto.RegisterType((*LightCommandRequest)(nil), "nativeapi.LightCommandRequest")
	proto.RegisterType((*ListEntitiesSensorResponse)(nil), "nativeapi.ListEntitiesSensorResponse")
	proto.RegisterType((*SensorStateResponse)(nil), "nativeapi.SensorStateResponse")
	proto.RegisterType((*ListEntitiesSwitchResponse)(nil), "nativeapi.ListEntitiesSwitchResponse")
	proto.RegisterType((*SwitchStateResponse)(nil), "nativeapi.SwitchStateResponse")
	proto.RegisterType((*SwitchCommandRequest)(nil), "nativeapi.SwitchCommandRequest")
	proto.RegisterType((*ListEntitiesTextSensorResponse)(nil), "nativeapi.ListEntitiesTextSensorResponse")
	proto.RegisterType((*TextSensorStateResponse)(nil), "nativeapi.TextSensorStateResponse")
	proto.RegisterType((*SubscribeLogsRequest)(nil), "nativeapi.SubscribeLogsRequest")
	proto.RegisterType((*SubscribeLogsResponse)(nil), "nativeapi.SubscribeLogsResponse")
	proto.RegisterType((*SubscribeHomeassistantServicesRequest)(nil), "nativeapi.SubscribeHomeassistantServicesRequest")
	proto.RegisterType((*HomeassistantServiceMap)(nil), "nativeapi.HomeassistantServiceMap")
	proto.RegisterType((*HomeassistantServiceResponse)(nil), "nativeapi.HomeassistantServiceResponse")
	proto.RegisterType((*SubscribeHomeAssistantStatesRequest)(nil), "nativeapi.SubscribeHomeAssistantStatesRequest")
	proto.RegisterType((*SubscribeHomeAssistantStateResponse)(nil), "nativeapi.SubscribeHomeAssistantStateResponse")
	proto.RegisterType((*HomeAssistantStateResponse)(nil), "nativeapi.HomeAssistantStateResponse")
	proto.RegisterType((*GetTimeRequest)(nil), "nativeapi.GetTimeRequest")
	proto.RegisterType((*GetTimeResponse)(nil), "nativeapi.GetTimeResponse")
	proto.RegisterType((*ListEntitiesServicesArgument)(nil), "nativeapi.ListEntitiesServicesArgument")
	proto.RegisterType((*ListEntitiesServicesResponse)(nil), "nativeapi.ListEntitiesServicesResponse")
	proto.RegisterType((*ExecuteServiceArgument)(nil), "nativeapi.ExecuteServiceArgument")
	proto.RegisterType((*ExecuteServiceRequest)(nil), "nativeapi.ExecuteServiceRequest")
	proto.RegisterType((*ListEntitiesCameraResponse)(nil), "nativeapi.ListEntitiesCameraResponse")
	proto.RegisterType((*CameraImageResponse)(nil), "nativeapi.CameraImageResponse")
	proto.RegisterType((*CameraImageRequest)(nil), "nativeapi.CameraImageRequest")
	proto.RegisterType((*ListEntitiesClimateResponse)(nil), "nativeapi.ListEntitiesClimateResponse")
	proto.RegisterType((*ClimateStateResponse)(nil), "nativeapi.ClimateStateResponse")
	proto.RegisterType((*ClimateCommandRequest)(nil), "nativeapi.ClimateCommandRequest")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 4464 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x5b, 0xcd, 0x6f, 0x1b, 0x49,
	0x76, 0x17, 0x3f, 0x45, 0x3e, 0xea, 0xa3, 0x55, 0xfa, 0xa2, 0x24, 0x7f, 0xc8, 0xf4, 0x7a, 0xec,
	0xd1, 0xae, 0x3d, 0x13, 0xef, 0xcc, 0x26, 0xd0, 0x6c, 0x76, 0x49, 0x91, 0x4d, 0x89, 0x00, 0x25,
	0x2a, 0x4d, 0xda, 0x8e, 0x73, 0x69, 0xb4, 0xc8, 0x12, 0xd9, 0xb3, 0x64, 0x37, 0xb7, 0xbb, 0x29,
	0xdb, 0xc9, 0x65, 0x81, 0x04, 0x09, 0x92, 0x6b, 0x0e, 0x39, 0x04, 0x39, 0x04, 0x39, 0x05, 0x8b,
	0xe4, 0x94, 0xfc, 0x01, 0xb9, 0x05, 0x01, 0x72, 0x09, 0x72, 0xca, 0x25, 0x3c, 0xea, 0x18, 0x04,
	0x08, 0x30, 0xb7, 0x2c, 0x5e, 0x55, 0x75, 0xb3, 0x9a, 0xdd, 0x92, 0x3d, 0x03, 0xac, 0xf7, 0x24,
	0xf6, 0x7b, 0xaf, 0x5e, 0xbd, 0x8f, 0xdf, 0xab, 0x6f, 0x41, 0xde, 0x18, 0x9b, 0xcf, 0xc6, 0x8e,
	0xed, 0xd9, 0x24, 0x6f, 0x19, 0x9e, 0x79, 0x45, 0x8d, 0xb1, 0xb9, 0xbb, 0x66, 0x8c, 0x4d, 0xdd,
	0x1e, 0x7b, 0xa6, 0x6d, 0xb9, 0x9c, 0x5b, 0x3a, 0x84, 0xa5, 0x13, 0x3a, 0x1c, 0xda, 0x1a, 0xfd,
	0xf9, 0x84, 0xba, 0x1e, 0xb9, 0x0f, 0x85, 0xee, 0xd0, 0xa4, 0x96, 0xa7, 0x9b, 0xd6, 0xa5, 0x5d,
	0x4c, 0xec, 0x27, 0x9e, 0xe4, 0x35, 0xe0, 0xa4, 0x86, 0x75, 0x69, 0x1f, 0xe6, 0xa7, 0xe5, 0xc4,
	0x75, 0x39, 0xf9, 0x8b, 0x4a, 0xa2, 0xf4, 0x97, 0x09, 0x58, 0x16, 0x8d, 0xdd, 0xb1, 0x6d, 0xb9,
	0x94, 0x1c, 0x00, 0xeb, 0xe2, 0x8a, 0x3a, 0xae, 0x69, 0x5b, 0xfa, 0xc8, 0xf8, 0xda, 0x76, 0x98,
	0x8e, 0x65, 0x6d, 0xd5, 0x18, 0x9b, 0x2f, 0x39, 0xfd, 0x14, 0xc9, 0x11, 0x59, 0xd3, 0xb2, 0x9d,
	0x62, 0x32, 0x22, 0x8b, 0x64, 0xb4, 0xca, 0xa5, 0xce, 0x15, 0x75, 0xb8, 0x55, 0x29, 0x6e, 0x15,
	0x27, 0xf9, 0x56, 0x25, 0xaf, 0xcb, 0x09, 0xb4, 0xea, 0xb7, 0x61, 0xa5, 0x6a, 0x5b, 0x16, 0xed,
	0x7a, 0xbe, 0x4f, 0xbb, 0x90, 0x1b, 0x1b, 0xae, 0xfb, 0xc6, 0x76, 0x7a, 0xc2, 0xa1, 0xe0, 0x1b,
	0x1b, 0xa6, 0x84, 0x3b, 0xc7, 0xb0, 0x1a, 0x34, 0x14, 0xfe, 0x7c, 0x0a, 0x8a, 0x69, 0x5d, 0x19,
	0x43, 0xb3, 0xa7, 0x87, 0x34, 0xe4, 0xb4, 0x55, 0x41, 0x3f, 0x97, 0x14, 0xa5, 0x85, 0x05, 0xf7,
	0x60, 0xad, 0x66, 0xba, 0xdd, 0x90, 0x11, 0xc8, 0xcf, 0x5c, 0x97, 0x17, 0x90, 0x7f, 0x1f, 0x88,
	0xcc, 0xe7, 0x7d, 0xa1, 0x40, 0x56, 0x08, 0x6c, 0x42, 0xe1, 0xdc, 0xb4, 0xfa, 0x7e, 0xd3, 0xec,
	0xb4, 0xbc, 0x78, 0x5d, 0x5e, 0x28, 0x6d, 0xc1, 0x12, 0x27, 0x8b, 0x16, 0xd9, 0x69, 0x39, 0x87,
	0xf4, 0x3d, 0x58, 0xab, 0xd1, 0x2b, 0xb3, 0x4b, 0x31, 0x14, 0x52, 0xa3, 0xfc, 0x75, 0x39, 0x59,
	0xfa, 0x8f, 0x24, 0x10, 0x99, 0x2b, 0x3c, 0x7b, 0x08, 0xcb, 0x13, 0x97, 0xba, 0xf3, 0x6e, 0x2d,
	0x21, 0xd1, 0xf7, 0x89, 0x10, 0x48, 0x5b, 0xc6, 0x88, 0xb2, 0xac, 0xe4, 0x35, 0xf6, 0x1b, 0x53,
	0x31, 0x32, 0xba, 0xba, 0xd1, 0xeb, 0x39, 0xd4, 0x75, 0xfd, 0x54, 0x8c, 0x8c, 0x6e, 0x85, 0x53,
	0xc8, 0x63, 0x58, 0xa5, 0xee, 0x78, 0x60, 0x8f, 0xa8, 0x9f, 0xdb, 0x62, 0x9a, 0x09, 0xad, 0x08,
	0xb2, 0xc8, 0x2c, 0x06, 0xb7, 0x6b, 0x8f, 0xc6, 0xe6, 0xd0, 0x40, 0x40, 0xea, 0x9e, 0x39, 0xa2,
	0xc5, 0x0c, 0x93, 0x5c, 0x95, 0xe8, 0x1d, 0x73, 0x44, 0xc9, 0x06, 0x64, 0x46, 0x76, 0x8f, 0x0e,
	0x8b, 0x59, 0xc6, 0xe7, 0x1f, 0xe4, 0x7b, 0xb0, 0x32, 0x30, 0x5c, 0xbd, 0x47, 0xe9, 0x58, 0x77,
	0x87, 0x94, 0x8e, 0x8b, 0x8b, 0xdc, 0x89, 0x81, 0xe1, 0xd6, 0x28, 0x1d, 0xb7, 0x91, 0x46, 0x1e,
	0xc0, 0xd2, 0xd8, 0xb1, 0xbf, 0xa6, 0x5d, 0x4f, 0x67, 0xce, 0xe4, 0x98, 0x8a, 0x82, 0xa0, 0x9d,
	0xa1, 0x4f, 0x8f, 0x61, 0xd5, 0x17, 0xf1, 0x4d, 0xce, 0x73, 0x93, 0x05, 0x59, 0x98, 0x8c, 0x41,
	0x85, 0xeb, 0x72, 0xa2, 0x74, 0x17, 0xd6, 0x9b, 0xa6, 0xeb, 0xa9, 0x96, 0x67, 0x7a, 0x26, 0x75,
	0xa5, 0x98, 0x17, 0x30, 0xe6, 0x8f, 0xa0, 0x28, 0xb3, 0x6b, 0xb6, 0x45, 0xe5, 0x34, 0xaf, 0x0b,
	0x9c, 0xec, 0xc3, 0x56, 0x7b, 0x72, 0xe1, 0x76, 0x1d, 0xf3, 0x82, 0xb6, 0x3d, 0xc3, 0x0b, 0x29,
	0xda, 0x40, 0x45, 0xdf, 0x24, 0x60, 0x5f, 0xd6, 0x74, 0x64, 0x5a, 0x86, 0xf3, 0xae, 0x4d, 0x2d,
	0xd7, 0x76, 0x82, 0x54, 0xee, 0x41, 0xde, 0xbe, 0x60, 0xc6, 0x9b, 0x01, 0xbe, 0x39, 0xa1, 0xd1,
	0x23, 0x0a, 0xa4, 0x7e, 0x46, 0xdf, 0xb1, 0x0c, 0x2e, 0x6a, 0xf8, 0x33, 0x48, 0x6a, 0x4a, 0x4a,
	0xea, 0x1e, 0xe4, 0x27, 0x96, 0xf9, 0xf3, 0x09, 0x45, 0x15, 0x3c, 0x5b, 0x39, 0x4e, 0x68, 0xf4,
	0x30, 0x80, 0x3d, 0x06, 0x20, 0xbd, 0x3b, 0x34, 0x5c, 0x57, 0xe4, 0xa8, 0xc0, 0x69, 0x55, 0x24,
	0x91, 0x2f, 0x61, 0xdb, 0x74, 0x75, 0xd7, 0x33, 0xbc, 0x89, 0xab, 0x5f, 0x30, 0x23, 0x75, 0x97,
	0x59, 0xc9, 0x32, 0x96, 0xd3, 0x36, 0x4c, 0xb7, 0xcd, 0xb8, 0xb2, 0x07, 0x87, 0xbb, 0xd3, 0xf2,
	0xd2, 0x75, 0x39, 0xf1, 0xbf, 0xe5, 0xb5, 0x17, 0x6d, 0x55, 0x3f, 0x6a, 0x9c, 0x55, 0xb4, 0xd7,
	0x7a, 0x5b, 0x3d, 0x6b, 0xb7, 0xb4, 0xd2, 0x9f, 0x25, 0x60, 0x47, 0x16, 0x66, 0x01, 0x0a, 0x7c,
	0x16, 0x6e, 0x25, 0x66, 0x6e, 0x6d, 0x40, 0x06, 0xfb, 0xe7, 0x60, 0xcd, 0x69, 0xfc, 0x03, 0x61,
	0x3e, 0x32, 0x5d, 0xd7, 0xb4, 0xfa, 0x3a, 0xe7, 0xa6, 0x38, 0x42, 0x04, 0x91, 0x29, 0x3d, 0xbc,
	0x3b, 0x2d, 0x6f, 0xde, 0x60, 0x06, 0xa6, 0xe9, 0xef, 0x93, 0xb0, 0x23, 0x27, 0xa1, 0x6a, 0x5f,
	0xd1, 0x8f, 0x17, 0xfd, 0x87, 0xb0, 0x6c, 0xb8, 0xee, 0x64, 0x44, 0x7b, 0xc2, 0x83, 0x0c, 0xf7,
	0x40, 0x10, 0x99, 0x07, 0xe4, 0xfb, 0xb0, 0xe6, 0x4e, 0xc6, 0x63, 0xdb, 0xf1, 0x5c, 0x7d, 0x6c,
	0xbb, 0x26, 0x16, 0x8e, 0x88, 0xbc, 0xe2, 0x33, 0xce, 0x05, 0x1d, 0x35, 0x06, 0xc2, 0x9e, 0x39,
	0xf4, 0xfc, 0xaa, 0xf1, 0x89, 0x1d, 0x73, 0xe8, 0x45, 0x92, 0x9e, 0x8b, 0x24, 0xfd, 0x90, 0x4c,
	0xcb, 0xcb, 0x2c, 0x6c, 0x79, 0x0c, 0x5b, 0xb5, 0xf5, 0x52, 0xd5, 0x4a, 0xff, 0x97, 0x00, 0xc2,
	0xe2, 0xf3, 0xbe, 0x74, 0xfd, 0x04, 0x96, 0x86, 0xb4, 0x6f, 0x74, 0xdf, 0xe9, 0xb3, 0xac, 0xad,
	0x3c, 0xdf, 0x7b, 0x16, 0x4c, 0x56, 0xcf, 0x9a, 0x8c, 0x2d, 0x29, 0x2b, 0xf0, 0x06, 0xdc, 0x63,
	0x1c, 0xd3, 0x7d, 0x47, 0x31, 0x96, 0x49, 0x2d, 0xf8, 0xc6, 0x18, 0x33, 0xbf, 0xd2, 0x8c, 0xce,
	0x7e, 0x93, 0x3a, 0xac, 0x75, 0x27, 0x8e, 0x83, 0x13, 0x9b, 0x3d, 0xa6, 0x0e, 0x1b, 0x5a, 0x58,
	0x28, 0x57, 0x9e, 0xef, 0x48, 0x9d, 0xb2, 0xee, 0x5a, 0xbe, 0x80, 0xa6, 0x88, 0x36, 0x01, 0xe5,
	0x70, 0x73, 0x5a, 0xde, 0x9a, 0x73, 0x1a, 0x31, 0xf2, 0x4f, 0x49, 0x58, 0x67, 0x6d, 0xab, 0xf6,
	0x68, 0x64, 0x58, 0x3d, 0x7f, 0xea, 0x89, 0x3a, 0xfe, 0x03, 0x20, 0x38, 0x68, 0x09, 0xe7, 0xbb,
	0x5c, 0x5c, 0x80, 0x56, 0x19, 0x18, 0xae, 0xef, 0x36, 0xa3, 0x93, 0x1a, 0xac, 0xcc, 0x49, 0xa6,
	0x98, 0xcd, 0x77, 0xe3, 0x03, 0xe5, 0xf7, 0xbe, 0x3c, 0x0c, 0x69, 0x79, 0x00, 0x38, 0x24, 0xce,
	0x90, 0x91, 0x66, 0xbd, 0x15, 0x06, 0xc6, 0x0c, 0x14, 0x72, 0x3c, 0x33, 0x73, 0xf1, 0xdc, 0x81,
	0x1c, 0x36, 0x67, 0x31, 0xe5, 0xa0, 0x5a, 0x1c, 0x18, 0x1c, 0x26, 0x7e, 0xa8, 0x17, 0xa5, 0x50,
	0x13, 0x48, 0xbb, 0x9e, 0x3d, 0x66, 0x90, 0xc9, 0x69, 0xec, 0x37, 0x86, 0xed, 0xde, 0x75, 0x39,
	0x39, 0x1f, 0xb6, 0x7f, 0x4d, 0xc2, 0xb6, 0x5c, 0x5a, 0x75, 0xc3, 0xfa, 0x68, 0x85, 0xf5, 0x5b,
	0xb0, 0x11, 0x94, 0x81, 0xed, 0x76, 0xcd, 0xe1, 0x70, 0x06, 0x8a, 0x9c, 0xb6, 0xee, 0xf3, 0x5a,
	0x33, 0x16, 0x79, 0x04, 0x2b, 0x41, 0x13, 0x77, 0x4c, 0x69, 0x4f, 0x84, 0x23, 0xa8, 0xa7, 0x36,
	0x12, 0xc9, 0x53, 0x20, 0x81, 0x58, 0xcf, 0x74, 0x68, 0x97, 0xe9, 0xe5, 0x55, 0x16, 0xd4, 0x69,
	0xcd, 0x67, 0x90, 0xe7, 0xb0, 0x29, 0x88, 0x58, 0xe3, 0xa8, 0x41, 0xef, 0xda, 0x13, 0xcb, 0x63,
	0x01, 0xcc, 0x04, 0x96, 0xd0, 0x1e, 0xd3, 0x5e, 0x45, 0xd6, 0xa1, 0x32, 0x2d, 0xaf, 0x30, 0x18,
	0x2e, 0x62, 0x3c, 0xeb, 0x95, 0x33, 0x9c, 0x2a, 0x94, 0xba, 0x61, 0x7d, 0xb7, 0x61, 0x72, 0x1f,
	0x0a, 0x41, 0x08, 0xac, 0xbe, 0x18, 0x24, 0x65, 0x12, 0x79, 0x0a, 0x19, 0xee, 0x71, 0x9a, 0xe1,
	0x6f, 0x5d, 0xc2, 0x1f, 0xf6, 0x8a, 0xac, 0xa3, 0x64, 0x31, 0xa1, 0x71, 0x29, 0xf2, 0x25, 0xe4,
	0x67, 0x9e, 0xf3, 0x32, 0xdb, 0x0e, 0x37, 0x09, 0xfc, 0xd7, 0x66, 0x92, 0x6c, 0x9d, 0xc7, 0x02,
	0x30, 0xa4, 0x57, 0x62, 0xb6, 0xcf, 0x68, 0xc0, 0x48, 0x4d, 0xa4, 0x1c, 0xae, 0x4f, 0xcb, 0xdb,
	0x21, 0xbf, 0x11, 0x45, 0xff, 0x90, 0x82, 0xb5, 0xba, 0x61, 0xbd, 0xb7, 0xf4, 0xf6, 0x20, 0x8f,
	0x38, 0x96, 0xfd, 0x47, 0x60, 0xf3, 0x01, 0x25, 0x08, 0x4c, 0x4a, 0x0e, 0xcc, 0x7d, 0xd1, 0x24,
	0x70, 0x3d, 0xc7, 0xbc, 0x64, 0xcd, 0x44, 0xae, 0x45, 0x5c, 0x32, 0x1f, 0x14, 0x97, 0xc7, 0xb0,
	0x8a, 0xfa, 0xe4, 0x60, 0x73, 0x08, 0xe1, 0x4a, 0xa6, 0x25, 0xc5, 0x7b, 0x2e, 0x23, 0x8b, 0xd1,
	0x8c, 0x3c, 0x84, 0x65, 0xb6, 0xfa, 0x09, 0xc2, 0x9c, 0x9b, 0x2d, 0x7e, 0x82, 0x80, 0x86, 0xf2,
	0x90, 0xff, 0xe0, 0x3c, 0x7c, 0xc2, 0xcd, 0x94, 0x73, 0x01, 0x1c, 0xe9, 0xbe, 0xe3, 0x2c, 0x1d,
	0xf3, 0xf9, 0x2a, 0xc4, 0xe5, 0xeb, 0x3e, 0xab, 0x7b, 0x39, 0x5f, 0xbf, 0x4c, 0x85, 0x27, 0xd4,
	0xa6, 0xd9, 0x1f, 0x78, 0x1f, 0xad, 0xee, 0x3f, 0x83, 0xa0, 0xb6, 0xf5, 0x0b, 0x07, 0xbb, 0xb6,
	0xa8, 0x58, 0xd5, 0xe4, 0xb4, 0xa0, 0x70, 0x8f, 0x02, 0x0e, 0x8e, 0x9e, 0x41, 0x03, 0xa7, 0x7f,
	0x21, 0x12, 0x56, 0xf0, 0x69, 0x5a, 0xff, 0x82, 0x7c, 0x2e, 0x8d, 0x25, 0x6f, 0x06, 0xa6, 0x47,
	0xf5, 0x2b, 0x63, 0x38, 0xa1, 0x22, 0x6d, 0x81, 0xd2, 0x57, 0xc8, 0x7a, 0x89, 0x1c, 0xf2, 0x63,
	0xd8, 0x0d, 0x5a, 0x74, 0xed, 0xa1, 0xed, 0xe8, 0x1e, 0x1d, 0xb1, 0x59, 0x66, 0xe2, 0x50, 0x91,
	0xca, 0xa2, 0x2f, 0x51, 0x45, 0x81, 0xce, 0x8c, 0x4f, 0xee, 0x02, 0x8c, 0x4c, 0xdc, 0x33, 0x39,
	0xb4, 0xe7, 0xb2, 0xbc, 0x26, 0xb5, 0xfc, 0xc8, 0xb4, 0x4e, 0x19, 0x81, 0xb1, 0x8d, 0xb7, 0x3e,
	0x1b, 0x04, 0xdb, 0x78, 0x2b, 0xd8, 0x45, 0x58, 0xa4, 0x97, 0x97, 0xb4, 0xeb, 0xb9, 0xc5, 0xc2,
	0x7e, 0xea, 0x49, 0x5e, 0xf3, 0x3f, 0x71, 0x4a, 0x5f, 0x9d, 0xcd, 0x6e, 0xcd, 0xc6, 0xf1, 0x49,
	0xa7, 0xf4, 0x17, 0x49, 0x20, 0x2c, 0x43, 0xdf, 0x6d, 0x68, 0xb9, 0x07, 0x20, 0x45, 0x99, 0x4f,
	0xd5, 0x12, 0x05, 0xf5, 0x38, 0xa2, 0xb6, 0x92, 0x1a, 0xfe, 0x44, 0x3d, 0x7d, 0x87, 0x52, 0x7f,
	0x1e, 0xe2, 0x1f, 0x98, 0xe7, 0x0b, 0x0c, 0x69, 0x96, 0xcf, 0x34, 0xf8, 0x1b, 0x25, 0x59, 0xb4,
	0xc5, 0xf4, 0xc3, 0x3f, 0x70, 0x31, 0x14, 0x1f, 0xd1, 0xa4, 0xa6, 0x74, 0xe7, 0x23, 0xb9, 0x05,
	0x59, 0xee, 0xbc, 0x58, 0xf1, 0x8b, 0x2f, 0x9c, 0xb0, 0x8a, 0x73, 0x91, 0x40, 0xe8, 0xfe, 0x69,
	0x06, 0x57, 0xfe, 0xfd, 0x81, 0xf7, 0xeb, 0x18, 0x6c, 0x1e, 0xf1, 0xfd, 0x8c, 0x14, 0xae, 0x74,
	0x50, 0x74, 0x12, 0x1e, 0xc3, 0x11, 0xcd, 0x44, 0x22, 0xba, 0x0d, 0x38, 0x3d, 0x4b, 0x50, 0xcd,
	0x0e, 0x0c, 0x86, 0x52, 0x11, 0xea, 0xc5, 0x98, 0x50, 0xe7, 0xe2, 0x42, 0x9d, 0x97, 0x42, 0x2d,
	0xdc, 0xe1, 0xe1, 0x86, 0xc0, 0x1d, 0x86, 0xe8, 0x59, 0x1e, 0x0a, 0x72, 0x1e, 0x9e, 0xc3, 0x26,
	0x36, 0x89, 0xe6, 0x62, 0x89, 0xcf, 0xb0, 0x03, 0x23, 0x0a, 0xec, 0xd8, 0xdc, 0x2d, 0xdf, 0x90,
	0x3b, 0xd1, 0x81, 0xe7, 0x18, 0x16, 0x5f, 0xa9, 0xe8, 0x43, 0x6a, 0xf5, 0xbd, 0x41, 0x71, 0x25,
	0xe8, 0xa0, 0x13, 0xf0, 0x9a, 0x8c, 0x85, 0x1d, 0x44, 0xe5, 0x57, 0xd9, 0xa9, 0x83, 0xe2, 0xcd,
	0x0b, 0x3f, 0x01, 0x5c, 0x91, 0xe9, 0x97, 0x43, 0xc3, 0x1d, 0xf8, 0xb2, 0x4a, 0x30, 0x5c, 0xd7,
	0x91, 0x2c, 0x24, 0x1f, 0xc0, 0x52, 0x48, 0x6a, 0x8d, 0x69, 0x2c, 0x5c, 0x4a, 0x22, 0x77, 0x01,
	0x50, 0x99, 0x40, 0x1b, 0x61, 0x6a, 0x30, 0xa6, 0x2a, 0x23, 0x48, 0x40, 0x5c, 0x9f, 0x07, 0xe2,
	0xfe, 0x6c, 0xe5, 0x34, 0x03, 0x62, 0x0a, 0x76, 0xe5, 0x31, 0xf4, 0x23, 0xef, 0x09, 0x09, 0xa4,
	0xcd, 0xae, 0x98, 0xda, 0xf3, 0x1a, 0xfb, 0x4d, 0x9e, 0xc1, 0xfa, 0xc4, 0x32, 0x3d, 0xdd, 0xbe,
	0xd4, 0x47, 0xd4, 0x70, 0x27, 0x0e, 0x1d, 0x51, 0xcb, 0x13, 0x5b, 0xf6, 0x35, 0x64, 0xb5, 0x2e,
	0x4f, 0x67, 0x0c, 0x4c, 0x85, 0xd1, 0xed, 0x4e, 0x1c, 0x5c, 0xdd, 0xf6, 0x68, 0xd7, 0x1c, 0x19,
	0x43, 0x97, 0x81, 0x33, 0xa3, 0x29, 0x3e, 0xa3, 0x26, 0xe8, 0x2c, 0xc0, 0xb6, 0xd3, 0xa5, 0xfa,
	0x64, 0xdc, 0xc3, 0xc2, 0xe1, 0x23, 0x64, 0x81, 0xd1, 0x5e, 0x30, 0x52, 0x64, 0xcb, 0x92, 0x8f,
	0xee, 0x53, 0x7f, 0x0c, 0x05, 0x56, 0x6a, 0x42, 0x02, 0x22, 0x9b, 0x0e, 0x69, 0xaf, 0xc9, 0x5a,
	0x68, 0xe0, 0x06, 0xbf, 0x71, 0x32, 0x53, 0xd8, 0x98, 0x00, 0x98, 0x0a, 0xb1, 0x4f, 0xfd, 0x43,
	0x58, 0xff, 0x0e, 0x1b, 0xd4, 0xe4, 0xb7, 0xda, 0xa0, 0x6e, 0x4d, 0xcb, 0x3b, 0xf3, 0x1d, 0x23,
	0x08, 0xfe, 0x2d, 0x31, 0x07, 0x82, 0x37, 0xa6, 0xd7, 0x1d, 0xfc, 0x46, 0x41, 0x10, 0xd9, 0xae,
	0x66, 0xa3, 0xdb, 0x55, 0x0c, 0xe4, 0x9a, 0xe4, 0xcf, 0xab, 0x46, 0xa7, 0x7a, 0x52, 0x7a, 0x01,
	0xeb, 0xdc, 0xfe, 0xef, 0x34, 0xcf, 0x60, 0x8c, 0x76, 0xe7, 0x75, 0x62, 0x8c, 0x5e, 0xc2, 0x06,
	0x57, 0xfb, 0xde, 0x11, 0xfb, 0x46, 0xbd, 0x0f, 0x58, 0xfd, 0xcd, 0xe9, 0xfd, 0xc7, 0x04, 0xdc,
	0x93, 0x63, 0xdf, 0xa1, 0x6f, 0xbd, 0xdf, 0x7c, 0x11, 0x1e, 0x16, 0xa7, 0x65, 0xc2, 0xc2, 0xb0,
	0x8a, 0xe6, 0x76, 0xd4, 0xdf, 0xef, 0xf8, 0x40, 0xfd, 0xe3, 0x04, 0x6c, 0xcf, 0x8c, 0xfc, 0x56,
	0x41, 0xce, 0x7f, 0x2b, 0xb4, 0xee, 0x4d, 0xcb, 0x7b, 0xb1, 0x26, 0x60, 0xd8, 0xbe, 0x86, 0x8d,
	0xe0, 0xcc, 0xab, 0x69, 0xf7, 0xfd, 0x13, 0x2f, 0xf2, 0x29, 0x64, 0xf8, 0x1a, 0x32, 0x11, 0x59,
	0x47, 0x37, 0xed, 0x3e, 0x5b, 0x4c, 0x6a, 0x5c, 0x02, 0x17, 0x9d, 0xbd, 0xc9, 0x68, 0xac, 0x77,
	0x6d, 0xeb, 0xd2, 0xec, 0x8b, 0x6c, 0x01, 0x92, 0xaa, 0x8c, 0x72, 0x98, 0x9d, 0x96, 0xef, 0x5c,
	0x97, 0x93, 0xa5, 0xbf, 0x49, 0xc0, 0xe6, 0x5c, 0x67, 0xc1, 0xb9, 0xee, 0x07, 0xf7, 0xa6, 0x40,
	0xca, 0x33, 0xfa, 0x22, 0x0c, 0xf8, 0x13, 0x97, 0x4f, 0x23, 0xea, 0xba, 0x46, 0xdf, 0x4f, 0x95,
	0xff, 0xc9, 0x8f, 0xa9, 0xad, 0x9e, 0x7e, 0x69, 0x98, 0x43, 0x7f, 0xbf, 0xa0, 0x01, 0x92, 0xea,
	0x8c, 0x72, 0xb8, 0x34, 0x2d, 0xdf, 0xbd, 0x2e, 0x27, 0xbe, 0x29, 0x2f, 0xfc, 0xa2, 0xb2, 0x50,
	0xfa, 0x0c, 0x1e, 0x05, 0xe6, 0x9d, 0xd8, 0x38, 0x66, 0xba, 0xa6, 0xeb, 0x19, 0x96, 0xd7, 0xa6,
	0x0e, 0x8e, 0x59, 0xf2, 0x71, 0x60, 0x09, 0x1d, 0xaa, 0xc0, 0x76, 0x9c, 0xdc, 0xa9, 0x31, 0x96,
	0x33, 0x98, 0x0f, 0x32, 0xc8, 0x17, 0xa1, 0x22, 0x83, 0xec, 0xa3, 0xf4, 0xb7, 0x49, 0xb8, 0x13,
	0xa7, 0x23, 0x08, 0x4d, 0x11, 0x16, 0x5d, 0x4e, 0x12, 0xca, 0xfc, 0x4f, 0xf2, 0x23, 0x48, 0xf7,
	0x0c, 0xcf, 0x28, 0x26, 0xf7, 0x53, 0x4f, 0x0a, 0xcf, 0x4b, 0x52, 0xcc, 0x6e, 0x30, 0x4a, 0x63,
	0xf2, 0xe4, 0x18, 0x96, 0xf1, 0x2f, 0x9b, 0xd2, 0x87, 0x1c, 0x34, 0x1f, 0xaa, 0x60, 0x09, 0x1b,
	0x76, 0x44, 0x3b, 0x52, 0x86, 0xfc, 0x95, 0xe1, 0x98, 0xc6, 0xc5, 0x90, 0xe2, 0xd2, 0xe8, 0x43,
	0x95, 0xcc, 0x1a, 0x91, 0x1d, 0xc8, 0x99, 0xae, 0x4e, 0xaf, 0x70, 0x5e, 0xe2, 0x0b, 0xfe, 0x45,
	0xd3, 0x55, 0xf1, 0xf3, 0x30, 0x3f, 0x2d, 0x3f, 0x14, 0xe7, 0xb2, 0x4f, 0xe1, 0x61, 0x28, 0x2f,
	0x95, 0x40, 0xe9, 0xfc, 0x21, 0xed, 0x27, 0x98, 0x95, 0xc1, 0xad, 0xe2, 0xf2, 0x68, 0x40, 0x71,
	0xac, 0x78, 0x27, 0x8d, 0x06, 0x9c, 0xd0, 0xe8, 0x91, 0x3b, 0x90, 0x37, 0x3c, 0xcf, 0x31, 0x2f,
	0x26, 0x41, 0xc9, 0xcd, 0x08, 0xd8, 0xd3, 0xe3, 0xeb, 0x72, 0xa2, 0xf4, 0x16, 0x76, 0xbf, 0x6b,
	0x07, 0xf1, 0xf5, 0x1c, 0xea, 0x36, 0x35, 0xdf, 0x6d, 0x7e, 0x5a, 0x7e, 0x22, 0xee, 0x46, 0x8a,
	0xb0, 0x72, 0x4c, 0xbd, 0x8e, 0x39, 0xa2, 0x92, 0xf7, 0xdf, 0xbb, 0x2e, 0x2f, 0x94, 0x2a, 0xb0,
	0x1a, 0x70, 0x66, 0x77, 0x0b, 0x74, 0x6c, 0x77, 0x07, 0xba, 0x4b, 0xbb, 0xb6, 0xd5, 0x73, 0xc5,
	0xb8, 0xb2, 0xc4, 0x88, 0x6d, 0x4e, 0x43, 0xe5, 0x8f, 0xc4, 0x75, 0x87, 0x01, 0x77, 0xc2, 0x4b,
	0x19, 0x8e, 0xfe, 0x8a, 0xd3, 0x9f, 0xb0, 0x85, 0x82, 0x3f, 0x30, 0x26, 0xa4, 0x81, 0xf1, 0x29,
	0xa4, 0xbd, 0x77, 0x63, 0xff, 0xdc, 0x70, 0x27, 0x34, 0x85, 0xb3, 0xe6, 0x15, 0xa7, 0xdf, 0x79,
	0x37, 0xa6, 0x1a, 0x13, 0x2b, 0xfd, 0x79, 0x22, 0xbe, 0x8f, 0xc0, 0xe6, 0xb8, 0x3e, 0xa2, 0x43,
	0xf4, 0x57, 0x90, 0x36, 0x9c, 0xbe, 0x2b, 0x10, 0xfc, 0x58, 0x1e, 0x36, 0x6e, 0x71, 0x40, 0x63,
	0x8d, 0x30, 0x62, 0x9f, 0x62, 0x16, 0xff, 0x3a, 0x09, 0x5b, 0xea, 0x5b, 0xda, 0x9d, 0x78, 0x74,
	0x66, 0x2b, 0xf7, 0x74, 0x1d, 0x32, 0x17, 0xb6, 0x3d, 0xd4, 0xc5, 0x6d, 0x4c, 0x1a, 0x3f, 0x70,
	0xe1, 0x28, 0xce, 0x00, 0x4d, 0xcb, 0x63, 0xd6, 0x64, 0xb4, 0x3c, 0xa7, 0x34, 0x2c, 0x8f, 0x6c,
	0x42, 0xf6, 0x72, 0x68, 0x1b, 0x9e, 0x2e, 0x36, 0x57, 0x19, 0xf6, 0x85, 0xbb, 0x00, 0xd7, 0x73,
	0x70, 0xa4, 0x16, 0xf3, 0x46, 0x96, 0x7f, 0x92, 0x35, 0x48, 0x9b, 0x96, 0xa7, 0x33, 0xfc, 0xaf,
	0x69, 0x29, 0xd3, 0xf2, 0xc8, 0x03, 0x00, 0xd6, 0xad, 0xe1, 0x38, 0xc6, 0xbb, 0x62, 0x76, 0x3f,
	0xf5, 0x24, 0x77, 0x94, 0x54, 0x16, 0xb4, 0x3c, 0x52, 0x2b, 0x48, 0x24, 0xf7, 0x21, 0x8f, 0xad,
	0xb8, 0xc4, 0xe2, 0x7e, 0xea, 0xc9, 0x1a, 0x93, 0xc8, 0x99, 0x96, 0xc7, 0x05, 0x1e, 0x42, 0x81,
	0x9b, 0xc1, 0x45, 0x72, 0xfb, 0xa9, 0x27, 0x49, 0x26, 0x02, 0x8c, 0xcc, 0x85, 0x70, 0x2b, 0xcd,
	0x8d, 0xe2, 0x52, 0x79, 0xb6, 0xfd, 0x2c, 0x70, 0x1a, 0x13, 0x29, 0xfd, 0x0c, 0x36, 0xc3, 0xc1,
	0xb9, 0x79, 0xc2, 0xfe, 0x52, 0x64, 0x83, 0x0f, 0x48, 0x0f, 0xa4, 0x6c, 0xc4, 0x87, 0x57, 0xe4,
	0x21, 0x3f, 0x2d, 0x1f, 0x08, 0x58, 0xff, 0xd5, 0xdc, 0x02, 0xaa, 0x6a, 0x8c, 0xa8, 0x63, 0x7c,
	0xac, 0x09, 0xfc, 0x70, 0x67, 0x5a, 0xfe, 0x3e, 0x9b, 0x29, 0x15, 0x9c, 0x29, 0xd5, 0xf6, 0xf9,
	0x0f, 0x9f, 0xeb, 0xd5, 0xca, 0xa9, 0xaa, 0x55, 0x4a, 0x5f, 0xc3, 0x3a, 0x37, 0xa6, 0x31, 0x32,
	0xfa, 0xb7, 0x4d, 0xd4, 0x24, 0x18, 0x95, 0x13, 0x4f, 0x96, 0xc4, 0x88, 0x8b, 0x34, 0xdb, 0xf2,
	0x67, 0x67, 0xf6, 0x1b, 0xfb, 0xfa, 0xc1, 0x0d, 0x7d, 0x5d, 0x00, 0x09, 0xf5, 0xc5, 0xe3, 0xbd,
	0x05, 0x59, 0x9c, 0xd3, 0x87, 0x54, 0x80, 0x51, 0x7c, 0x31, 0xba, 0xe7, 0x50, 0x63, 0x24, 0x66,
	0x5e, 0xf1, 0x75, 0x78, 0x67, 0x5a, 0x7e, 0xca, 0x16, 0x4a, 0x91, 0x0e, 0x30, 0xd2, 0xff, 0xb2,
	0x08, 0x7b, 0xa1, 0x48, 0x0f, 0xcd, 0xd1, 0xdc, 0xe0, 0xf5, 0x6b, 0x5d, 0x2b, 0x95, 0xe1, 0xce,
	0xec, 0xbc, 0x45, 0x5c, 0x04, 0xc8, 0x7b, 0x4c, 0x3e, 0x1b, 0x04, 0x67, 0x32, 0x55, 0x2e, 0x22,
	0xef, 0x36, 0xcf, 0xe1, 0xd1, 0xec, 0xda, 0xe4, 0x8d, 0xad, 0x8f, 0x6d, 0x2c, 0x08, 0xcf, 0x70,
	0xfa, 0x34, 0xac, 0x8a, 0xaf, 0x78, 0x1f, 0x04, 0xd7, 0x29, 0x6f, 0xec, 0x73, 0x14, 0xed, 0x30,
	0x49, 0x59, 0xe3, 0x4f, 0x61, 0x75, 0x76, 0xf0, 0x3b, 0xb2, 0x7b, 0xd4, 0x65, 0x95, 0xb5, 0xf2,
	0x7c, 0x4b, 0xbe, 0x91, 0xe0, 0x81, 0x3a, 0xb5, 0x7b, 0x54, 0x5b, 0x09, 0xc4, 0xf1, 0xd3, 0x25,
	0x5f, 0xc0, 0xd6, 0x95, 0xe9, 0x4e, 0x8c, 0xa1, 0x3e, 0x32, 0xad, 0x98, 0xe3, 0x8e, 0x0d, 0xce,
	0x3d, 0x35, 0x2d, 0xb9, 0x5b, 0xa9, 0x95, 0xf1, 0x36, 0xd4, 0x2a, 0x1f, 0x6a, 0x65, 0xbc, 0x95,
	0x5b, 0xfd, 0x08, 0xb6, 0x45, 0x2b, 0xa9, 0x85, 0xee, 0x7a, 0x74, 0x2c, 0x0e, 0x98, 0x36, 0x39,
	0x5b, 0x6a, 0xd3, 0xf6, 0xe8, 0x98, 0x7c, 0x0e, 0x1b, 0xfe, 0x45, 0x8f, 0x1f, 0x3d, 0xe3, 0x8d,
	0xf1, 0x8e, 0x1d, 0x15, 0xe4, 0x34, 0x22, 0xee, 0x74, 0x04, 0xab, 0xf2, 0xc6, 0x78, 0x47, 0x1e,
	0x07, 0x61, 0x71, 0x75, 0x83, 0x9f, 0x5c, 0xf2, 0x13, 0x83, 0xe0, 0xf0, 0xbd, 0xc2, 0x4f, 0x29,
	0x1b, 0x30, 0x3b, 0x1b, 0xd7, 0x2f, 0x0d, 0x4b, 0xc4, 0x70, 0x99, 0xc5, 0x70, 0x27, 0x1a, 0xc3,
	0xba, 0x61, 0xb1, 0x30, 0xae, 0x05, 0xad, 0x04, 0xc5, 0x25, 0xad, 0xd0, 0x19, 0xfc, 0x1b, 0x1c,
	0xa1, 0xb8, 0xb2, 0x15, 0xa6, 0x6c, 0x2f, 0xaa, 0xac, 0x8d, 0x42, 0x4c, 0x9d, 0x74, 0x40, 0xef,
	0xd3, 0x5c, 0xf2, 0x55, 0x70, 0xbe, 0x47, 0x7b, 0x7a, 0x77, 0xe2, 0x7a, 0xf6, 0x48, 0x32, 0x71,
	0x95, 0x8d, 0x7b, 0xdb, 0x81, 0x44, 0x95, 0x09, 0x04, 0xd6, 0xa8, 0x30, 0x33, 0x51, 0x1f, 0x3b,
	0xd4, 0xa5, 0x9e, 0x5b, 0x54, 0x98, 0x25, 0xc5, 0xa8, 0x25, 0xe7, 0x4c, 0x20, 0xb8, 0xe8, 0xa3,
	0x3d, 0x4e, 0x70, 0xc9, 0xef, 0x40, 0x31, 0x62, 0x83, 0xaf, 0x6d, 0x8d, 0x59, 0xb0, 0x35, 0x67,
	0x81, 0x68, 0x79, 0xb8, 0x31, 0x2d, 0x3f, 0x63, 0x83, 0x45, 0x81, 0x5d, 0xd7, 0x34, 0x1b, 0xa7,
	0x95, 0x8e, 0x5a, 0xfa, 0xff, 0x34, 0x6c, 0xf8, 0xde, 0xbf, 0x67, 0xfb, 0x70, 0x00, 0x69, 0xf4,
	0x54, 0x4c, 0xcf, 0x37, 0xe1, 0x99, 0xc9, 0x90, 0xcf, 0x60, 0x3d, 0xae, 0x22, 0xf9, 0x6c, 0x46,
	0xba, 0xd1, 0x4a, 0x7c, 0x0a, 0x24, 0xa6, 0xec, 0xf8, 0x09, 0xe2, 0x9a, 0x17, 0x29, 0xb3, 0x2f,
	0x60, 0x2b, 0x2a, 0xae, 0x0f, 0xed, 0x37, 0xe2, 0xec, 0x6c, 0x23, 0xd2, 0xa4, 0x69, 0xbf, 0x41,
	0xbc, 0xc7, 0xb4, 0x1a, 0x98, 0xfd, 0x81, 0x38, 0x82, 0xdc, 0x8c, 0x34, 0x3b, 0x31, 0xfb, 0x03,
	0xdc, 0x03, 0x08, 0xbc, 0x33, 0x98, 0xf3, 0x13, 0x60, 0x31, 0x81, 0x33, 0x78, 0x7f, 0x0e, 0x59,
	0x63, 0x76, 0x60, 0x1f, 0x9b, 0x51, 0x8e, 0x6f, 0x4d, 0xc8, 0x91, 0x2f, 0x20, 0xe7, 0x43, 0x47,
	0x9c, 0xe1, 0xdf, 0x02, 0xee, 0xc5, 0x4b, 0xfe, 0x83, 0x1c, 0x02, 0xcc, 0x80, 0x1c, 0x73, 0xd4,
	0x11, 0xc1, 0x71, 0xde, 0xf5, 0x7f, 0x92, 0x4f, 0x60, 0x75, 0x0e, 0xb3, 0xac, 0x5e, 0xf3, 0xda,
	0x72, 0x57, 0x46, 0x2a, 0xfa, 0xc2, 0x01, 0xc5, 0x2a, 0xf4, 0x36, 0x74, 0x0a, 0x39, 0x5c, 0x1b,
	0x86, 0x90, 0xc8, 0x0e, 0xf7, 0xf2, 0xda, 0x52, 0x57, 0xc2, 0xdf, 0xe1, 0xf6, 0xb4, 0xfc, 0x59,
	0x04, 0x7e, 0x38, 0x8b, 0xfc, 0xe7, 0x22, 0x6c, 0x0a, 0xbd, 0xef, 0xdd, 0xce, 0x8b, 0x5b, 0xcb,
	0x00, 0x86, 0xfc, 0xd6, 0x92, 0x99, 0xed, 0xa3, 0x33, 0xf5, 0x01, 0xe8, 0xfc, 0x02, 0xb6, 0xd8,
	0x21, 0x63, 0x3c, 0xe0, 0x72, 0xda, 0xc6, 0xc0, 0x70, 0xa3, 0x43, 0x7b, 0x3c, 0x44, 0x33, 0x37,
	0x41, 0xf4, 0x2b, 0xd8, 0x8d, 0xef, 0x84, 0xc1, 0x94, 0x4f, 0x28, 0xdb, 0x71, 0x1d, 0x21, 0x52,
	0x6f, 0xc6, 0xf7, 0xe2, 0x2d, 0xf8, 0xfe, 0x5d, 0xd8, 0xbb, 0xa1, 0x4b, 0x86, 0x71, 0x71, 0x03,
	0x11, 0xd7, 0x27, 0x83, 0xf9, 0x2d, 0xe5, 0x91, 0xbf, 0xad, 0x3c, 0xc4, 0xcd, 0x92, 0x5c, 0x22,
	0xb3, 0x9b, 0xa5, 0xe6, 0xac, 0x4a, 0xe6, 0xca, 0xa8, 0x10, 0x29, 0xa3, 0x7d, 0x7e, 0xa7, 0x1d,
	0xe0, 0x93, 0x4f, 0x11, 0x30, 0x30, 0x5c, 0x1f, 0x9c, 0x72, 0xd9, 0x2c, 0x7f, 0x70, 0xd9, 0x88,
	0x47, 0x45, 0x52, 0xe9, 0xac, 0x04, 0xf7, 0x6a, 0x41, 0xad, 0xcc, 0x15, 0xd7, 0xea, 0xb7, 0x2a,
	0xae, 0xa7, 0xb0, 0xce, 0xce, 0xc5, 0xe7, 0x0a, 0x4c, 0x09, 0x9e, 0x00, 0x84, 0x66, 0x83, 0xb8,
	0x5a, 0x5c, 0x8b, 0xab, 0x45, 0x71, 0xbe, 0x2c, 0xca, 0x6a, 0x76, 0xbe, 0xcc, 0x6b, 0x4a, 0x2a,
	0xd5, 0xf5, 0x0f, 0x2c, 0xd5, 0x03, 0x58, 0x93, 0xec, 0x14, 0x8d, 0x37, 0xf8, 0xeb, 0xb7, 0xc0,
	0xca, 0xf3, 0x1b, 0xca, 0x7a, 0x33, 0xbe, 0xac, 0x3f, 0x67, 0x2b, 0xc4, 0xb9, 0xb2, 0x3e, 0x38,
	0x03, 0x65, 0xfe, 0xb5, 0x07, 0xd9, 0x83, 0xed, 0xa6, 0x7a, 0x5c, 0xa9, 0xbe, 0xe6, 0xaf, 0x05,
	0xf4, 0x76, 0xa7, 0xd2, 0x51, 0xf5, 0xd6, 0xb9, 0x7a, 0xa6, 0x2c, 0x90, 0xbb, 0xb0, 0x13, 0xc3,
	0xac, 0x36, 0x5b, 0x6d, 0xb5, 0xa6, 0x24, 0x0e, 0xbe, 0x86, 0x95, 0xf0, 0x43, 0x0e, 0x52, 0x84,
	0x0d, 0x2e, 0xd9, 0x3a, 0x57, 0xb5, 0x4a, 0xa7, 0xd1, 0x3a, 0xd3, 0x1b, 0xb5, 0xa6, 0xaa, 0x2c,
	0x90, 0x7b, 0xb0, 0x1b, 0xe1, 0xb4, 0x59, 0x3f, 0x8d, 0xb3, 0x63, 0x25, 0x71, 0x03, 0x1f, 0xbb,
	0x42, 0x7e, 0xf2, 0xc0, 0x01, 0x12, 0x7d, 0x80, 0x11, 0x31, 0xb0, 0xda, 0x3a, 0x3d, 0xad, 0x9c,
	0xd5, 0x7c, 0xfb, 0xef, 0xc1, 0x6e, 0x2c, 0x9b, 0x79, 0xa0, 0x24, 0x6e, 0x6c, 0xde, 0xee, 0xb4,
	0xce, 0x95, 0xe4, 0xc1, 0x31, 0xe4, 0xfc, 0xcb, 0x65, 0xb2, 0x06, 0xcb, 0xf5, 0xca, 0x99, 0xde,
	0x3e, 0x57, 0xd5, 0x9a, 0xde, 0x6c, 0xbd, 0x52, 0x16, 0xc8, 0x06, 0x28, 0x33, 0xd2, 0xa9, 0x5a,
	0x6b, 0xbc, 0x38, 0x55, 0x12, 0x84, 0xc0, 0xca, 0x8c, 0x7a, 0xd2, 0x38, 0x3e, 0x51, 0x92, 0x07,
	0x35, 0x58, 0x92, 0xaf, 0x80, 0xc9, 0x0e, 0x6c, 0xa2, 0x4c, 0xad, 0xa1, 0xa9, 0x55, 0xe6, 0x6a,
	0xbd, 0xa5, 0xbd, 0xaa, 0x68, 0x35, 0x65, 0x21, 0xca, 0xd2, 0xd4, 0x97, 0xaa, 0x86, 0xd6, 0x1e,
	0xa8, 0xa0, 0xcc, 0x9f, 0x9b, 0xa3, 0x0d, 0x7e, 0x52, 0x2a, 0xed, 0xb6, 0x7e, 0xd6, 0x3a, 0xc3,
	0x60, 0xef, 0xc1, 0xb6, 0x4c, 0x3d, 0x55, 0x2b, 0xed, 0x17, 0x9a, 0x7a, 0xaa, 0x9e, 0x75, 0x94,
	0xc4, 0xc1, 0xdf, 0x25, 0x20, 0xe7, 0x9f, 0xbe, 0xa1, 0xb5, 0xcd, 0xd6, 0xb1, 0xde, 0x54, 0x5f,
	0xaa, 0x4d, 0xbf, 0xf5, 0x3a, 0xac, 0xce, 0x68, 0xaa, 0xa6, 0xb5, 0x34, 0xee, 0xd6, 0x8c, 0xf8,
	0xaa, 0xa2, 0x9d, 0x29, 0xc9, 0x30, 0xad, 0x71, 0x56, 0x6f, 0x29, 0xa9, 0x70, 0xe3, 0x9a, 0x7a,
	0xf4, 0xe2, 0x58, 0x49, 0x93, 0x4d, 0x58, 0x9b, 0x11, 0x5f, 0xaa, 0xda, 0x11, 0x86, 0x3f, 0x43,
	0x76, 0x61, 0x2b, 0x44, 0x7e, 0x1d, 0xf0, 0xb2, 0x07, 0x7f, 0x92, 0x84, 0x95, 0xf0, 0x11, 0x03,
	0x86, 0xa6, 0xad, 0x6a, 0x2f, 0x1b, 0x55, 0x55, 0xaf, 0x68, 0xc7, 0x7a, 0xe7, 0xf5, 0xb9, 0xaa,
	0x1f, 0xb5, 0x5a, 0x4d, 0x65, 0x01, 0x71, 0x17, 0x61, 0x35, 0xd0, 0x5b, 0xec, 0x23, 0xc2, 0xa9,
	0x37, 0x5b, 0x95, 0x8e, 0x92, 0x64, 0x61, 0x9a, 0xe7, 0xb5, 0x3b, 0x1a, 0x02, 0x2e, 0x45, 0xee,
	0xc3, 0x5e, 0x6c, 0x6f, 0x7a, 0x45, 0xd3, 0x2a, 0xaf, 0x95, 0x34, 0x82, 0x2b, 0xae, 0x4f, 0xc1,
	0xcf, 0x90, 0x7d, 0xb8, 0x13, 0xdf, 0xb3, 0x90, 0xc8, 0x92, 0x07, 0x70, 0xf7, 0x86, 0xfe, 0x85,
	0xc8, 0xe2, 0xc1, 0x3f, 0x27, 0xa0, 0x20, 0x4d, 0x96, 0x98, 0x6f, 0x51, 0xd0, 0xfa, 0x69, 0xab,
	0xa6, 0xea, 0xad, 0x7a, 0x5d, 0x59, 0x40, 0x27, 0x43, 0xd4, 0x13, 0xb5, 0xd2, 0xd1, 0xab, 0x18,
	0x9a, 0x04, 0xc6, 0x3e, 0xc4, 0x63, 0xe4, 0x64, 0x84, 0x8c, 0x4d, 0x94, 0x14, 0xc6, 0x38, 0x44,
	0x46, 0x2c, 0xb6, 0xce, 0x9a, 0xe8, 0xef, 0x7c, 0xd7, 0x35, 0x0d, 0xbd, 0x9c, 0xd7, 0x53, 0x79,
	0xd1, 0x69, 0x29, 0xd9, 0x83, 0xff, 0x4a, 0xc0, 0x4a, 0x78, 0xe8, 0x47, 0xb4, 0xf8, 0x92, 0x5c,
	0x2b, 0x87, 0x5a, 0x88, 0x56, 0xaf, 0x2b, 0x09, 0xb9, 0x23, 0x24, 0x32, 0x8d, 0xc9, 0x79, 0x51,
	0x2c, 0xc1, 0x14, 0xd9, 0x02, 0x22, 0x13, 0x45, 0x11, 0xa6, 0xe7, 0x55, 0xb0, 0x32, 0xcc, 0x44,
	0xa4, 0x1b, 0x35, 0x1c, 0x9b, 0xb2, 0xb2, 0x0f, 0x48, 0xaf, 0xb7, 0xaa, 0x2f, 0xda, 0xca, 0x22,
	0xd9, 0x86, 0x75, 0x99, 0x5c, 0x6b, 0xd4, 0xeb, 0x2f, 0xda, 0xaa, 0x92, 0x3b, 0xf8, 0x23, 0x50,
	0xe6, 0x27, 0x1e, 0x59, 0x47, 0xfb, 0x15, 0x66, 0x90, 0x67, 0x46, 0xea, 0x92, 0x93, 0x8f, 0x5a,
	0x9d, 0x13, 0x0e, 0xcb, 0x30, 0xfd, 0xa5, 0xaa, 0x75, 0x1a, 0xd5, 0x0a, 0xa6, 0xe6, 0x0e, 0x14,
	0xc3, 0xbc, 0x93, 0x96, 0xd6, 0xf8, 0x83, 0xd6, 0x59, 0xa7, 0xd2, 0x54, 0x52, 0x07, 0xbf, 0x4c,
	0xc0, 0x72, 0x68, 0xfd, 0x2a, 0xf7, 0x51, 0xe1, 0x63, 0x46, 0x04, 0x15, 0x82, 0x8e, 0xb9, 0x67,
	0xc3, 0x69, 0x0c, 0x0f, 0x01, 0xc0, 0x91, 0x2f, 0xf9, 0x2d, 0x78, 0x6c, 0x0c, 0x4f, 0xcb, 0xe0,
	0x10, 0x8c, 0x9a, 0xf6, 0x1a, 0xdb, 0x64, 0x62, 0x6c, 0xa8, 0x57, 0xce, 0x94, 0xec, 0xc1, 0x7f,
	0xcf, 0xac, 0x15, 0x53, 0x98, 0xa4, 0xfd, 0x5c, 0x53, 0xdb, 0x6a, 0xc7, 0x1f, 0x76, 0xa2, 0x8c,
	0x93, 0xd6, 0x29, 0x8e, 0xd2, 0x51, 0x46, 0xe5, 0x55, 0xe5, 0xb5, 0x92, 0x64, 0xb3, 0x4d, 0x98,
	0x71, 0xd4, 0x6a, 0xb5, 0x11, 0xc6, 0x92, 0x7b, 0x82, 0x53, 0x6d, 0x9d, 0xd6, 0x5b, 0x5a, 0x47,
	0x49, 0xcb, 0xa6, 0x0a, 0x9e, 0x5a, 0x6d, 0x29, 0x99, 0x18, 0x6d, 0xed, 0xa6, 0xaa, 0x9e, 0x2b,
	0x59, 0x1c, 0x27, 0xe6, 0x0d, 0xa8, 0x76, 0x1a, 0x2f, 0x1b, 0x9d, 0xd7, 0xca, 0xe2, 0xf3, 0x7f,
	0x07, 0x58, 0xae, 0x9c, 0x37, 0xc4, 0x93, 0x76, 0xcc, 0xc7, 0x11, 0x64, 0x06, 0x74, 0x38, 0xb4,
	0x89, 0xfc, 0x04, 0x48, 0x7e, 0xfd, 0xbf, 0x5b, 0x8c, 0x32, 0xf8, 0x16, 0xaf, 0x94, 0xfd, 0x9f,
	0xf2, 0xc2, 0x37, 0xe5, 0x05, 0x72, 0x02, 0x8b, 0xe2, 0xe1, 0x3a, 0x09, 0xbf, 0x9b, 0x94, 0x1f,
	0xbb, 0xef, 0xee, 0xc6, 0xb1, 0xe6, 0x34, 0xfd, 0x1e, 0x40, 0x2f, 0x78, 0x05, 0x4f, 0xee, 0x48,
	0x2d, 0x22, 0x8f, 0xe7, 0x77, 0xef, 0xde, 0xc0, 0x9d, 0x53, 0xf9, 0x53, 0x48, 0x8f, 0x4d, 0xab,
	0x4f, 0xe4, 0x15, 0xbd, 0xf4, 0x90, 0x7e, 0x77, 0x3b, 0x42, 0x9f, 0x53, 0xd0, 0x02, 0x71, 0x5d,
	0xcc, 0xfe, 0xcf, 0x20, 0x6c, 0xd4, 0xfc, 0x0b, 0xfb, 0xb0, 0x51, 0x91, 0x17, 0xf6, 0xa5, 0x14,
	0x2a, 0x3c, 0x82, 0xe5, 0xa1, 0xe9, 0x7a, 0x3a, 0x15, 0xc7, 0x5e, 0xe4, 0xde, 0x0d, 0x67, 0xc6,
	0xbe, 0xd2, 0x55, 0x89, 0x7f, 0x65, 0x9b, 0xbd, 0x12, 0x86, 0x5c, 0x71, 0xfd, 0xfb, 0x05, 0x7e,
	0xed, 0xe6, 0x12, 0xf9, 0xb0, 0x33, 0xfe, 0x0d, 0x79, 0x9c, 0xa6, 0x1a, 0xac, 0xcc, 0x34, 0x0d,
	0xed, 0xbe, 0x4b, 0xee, 0xc7, 0xe9, 0x91, 0xee, 0xe5, 0xe2, 0xb4, 0xf4, 0x61, 0x7f, 0xa6, 0x65,
	0x20, 0x5f, 0xba, 0xe8, 0xe2, 0xaa, 0xc8, 0x25, 0x9f, 0xc7, 0xe9, 0xbd, 0xed, 0x8e, 0x2b, 0xae,
	0xa3, 0x1e, 0xdc, 0x0f, 0x77, 0xa4, 0x4b, 0x3d, 0xf1, 0x38, 0x3c, 0xbb, 0xa9, 0x9f, 0xf8, 0x3b,
	0x9b, 0xb8, 0x5e, 0xea, 0x90, 0x63, 0xdb, 0x18, 0x73, 0x44, 0x43, 0x90, 0x0e, 0xdf, 0x77, 0x84,
	0x20, 0x3d, 0x77, 0xe1, 0xc1, 0x53, 0x5d, 0x87, 0x55, 0xca, 0x8f, 0x9d, 0xfd, 0x30, 0x90, 0xfd,
	0x1b, 0x8f, 0xa4, 0x6f, 0xb1, 0xe7, 0x08, 0x96, 0xbb, 0xb8, 0x94, 0xf4, 0x5f, 0xfc, 0x86, 0x20,
	0x13, 0xf3, 0xc6, 0x38, 0x4e, 0xc7, 0x4f, 0xa0, 0x80, 0x9b, 0x05, 0x5f, 0xc3, 0x9d, 0xf0, 0x93,
	0xbf, 0xf7, 0xb7, 0x67, 0xb0, 0xed, 0x0f, 0xbc, 0x58, 0x1b, 0x62, 0xde, 0x3f, 0xdd, 0x04, 0x36,
	0x76, 0xf1, 0x1e, 0x28, 0x09, 0x81, 0x2d, 0xe6, 0x4e, 0x3e, 0x4e, 0x4b, 0x19, 0x96, 0xba, 0xec,
	0x6c, 0x5a, 0x37, 0x47, 0x46, 0x9f, 0x12, 0xb9, 0xe8, 0xa2, 0x87, 0xd6, 0xf1, 0xf9, 0x5d, 0xed,
	0xf2, 0x81, 0x3e, 0x30, 0x64, 0x3f, 0xba, 0xf7, 0x79, 0xaf, 0x25, 0x17, 0x59, 0xf6, 0x0f, 0x53,
	0x3f, 0xfc, 0x55, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0c, 0xca, 0x85, 0x3a, 0x5b, 0x35, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIConnectionClient is the client API for APIConnection service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIConnectionClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
	Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*DisconnectResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	DeviceInfo(ctx context.Context, in *DeviceInfoRequest, opts ...grpc.CallOption) (*DeviceInfoResponse, error)
	ListEntities(ctx context.Context, in *ListEntitiesRequest, opts ...grpc.CallOption) (*Void, error)
	SubscribeStates(ctx context.Context, in *SubscribeStatesRequest, opts ...grpc.CallOption) (*Void, error)
	SubscribeLogs(ctx context.Context, in *SubscribeLogsRequest, opts ...grpc.CallOption) (*Void, error)
	SubscribeHomeassistantServices(ctx context.Context, in *SubscribeHomeassistantServicesRequest, opts ...grpc.CallOption) (*Void, error)
	SubscribeHomeAssistantStates(ctx context.Context, in *SubscribeHomeAssistantStatesRequest, opts ...grpc.CallOption) (*Void, error)
	GetTime(ctx context.Context, in *GetTimeRequest, opts ...grpc.CallOption) (*GetTimeResponse, error)
	ExecuteService(ctx context.Context, in *ExecuteServiceRequest, opts ...grpc.CallOption) (*Void, error)
	CoverCommand(ctx context.Context, in *CoverCommandRequest, opts ...grpc.CallOption) (*Void, error)
	FanCommand(ctx context.Context, in *FanCommandRequest, opts ...grpc.CallOption) (*Void, error)
	LightCommand(ctx context.Context, in *LightCommandRequest, opts ...grpc.CallOption) (*Void, error)
	SwitchCommand(ctx context.Context, in *SwitchCommandRequest, opts ...grpc.CallOption) (*Void, error)
	CameraImage(ctx context.Context, in *CameraImageRequest, opts ...grpc.CallOption) (*Void, error)
	ClimateCommand(ctx context.Context, in *ClimateCommandRequest, opts ...grpc.CallOption) (*Void, error)
}

type aPIConnectionClient struct {
	cc *grpc.ClientConn
}

func NewAPIConnectionClient(cc *grpc.ClientConn) APIConnectionClient {
	return &aPIConnectionClient{cc}
}

func (c *aPIConnectionClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*DisconnectResponse, error) {
	out := new(DisconnectResponse)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) DeviceInfo(ctx context.Context, in *DeviceInfoRequest, opts ...grpc.CallOption) (*DeviceInfoResponse, error) {
	out := new(DeviceInfoResponse)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/device_info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) ListEntities(ctx context.Context, in *ListEntitiesRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/list_entities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) SubscribeStates(ctx context.Context, in *SubscribeStatesRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/subscribe_states", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) SubscribeLogs(ctx context.Context, in *SubscribeLogsRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/subscribe_logs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) SubscribeHomeassistantServices(ctx context.Context, in *SubscribeHomeassistantServicesRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/subscribe_homeassistant_services", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) SubscribeHomeAssistantStates(ctx context.Context, in *SubscribeHomeAssistantStatesRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/subscribe_home_assistant_states", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) GetTime(ctx context.Context, in *GetTimeRequest, opts ...grpc.CallOption) (*GetTimeResponse, error) {
	out := new(GetTimeResponse)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/get_time", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) ExecuteService(ctx context.Context, in *ExecuteServiceRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/execute_service", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) CoverCommand(ctx context.Context, in *CoverCommandRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/cover_command", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) FanCommand(ctx context.Context, in *FanCommandRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/fan_command", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) LightCommand(ctx context.Context, in *LightCommandRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/light_command", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) SwitchCommand(ctx context.Context, in *SwitchCommandRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/switch_command", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) CameraImage(ctx context.Context, in *CameraImageRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/camera_image", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIConnectionClient) ClimateCommand(ctx context.Context, in *ClimateCommandRequest, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/nativeapi.APIConnection/climate_command", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIConnectionServer is the server API for APIConnection service.
type APIConnectionServer interface {
	Hello(context.Context, *HelloRequest) (*HelloResponse, error)
	Connect(context.Context, *ConnectRequest) (*ConnectResponse, error)
	Disconnect(context.Context, *DisconnectRequest) (*DisconnectResponse, error)
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	DeviceInfo(context.Context, *DeviceInfoRequest) (*DeviceInfoResponse, error)
	ListEntities(context.Context, *ListEntitiesRequest) (*Void, error)
	SubscribeStates(context.Context, *SubscribeStatesRequest) (*Void, error)
	SubscribeLogs(context.Context, *SubscribeLogsRequest) (*Void, error)
	SubscribeHomeassistantServices(context.Context, *SubscribeHomeassistantServicesRequest) (*Void, error)
	SubscribeHomeAssistantStates(context.Context, *SubscribeHomeAssistantStatesRequest) (*Void, error)
	GetTime(context.Context, *GetTimeRequest) (*GetTimeResponse, error)
	ExecuteService(context.Context, *ExecuteServiceRequest) (*Void, error)
	CoverCommand(context.Context, *CoverCommandRequest) (*Void, error)
	FanCommand(context.Context, *FanCommandRequest) (*Void, error)
	LightCommand(context.Context, *LightCommandRequest) (*Void, error)
	SwitchCommand(context.Context, *SwitchCommandRequest) (*Void, error)
	CameraImage(context.Context, *CameraImageRequest) (*Void, error)
	ClimateCommand(context.Context, *ClimateCommandRequest) (*Void, error)
}

func RegisterAPIConnectionServer(s *grpc.Server, srv APIConnectionServer) {
	s.RegisterService(&_APIConnection_serviceDesc, srv)
}

func _APIConnection_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).Hello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).Disconnect(ctx, req.(*DisconnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_DeviceInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).DeviceInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/DeviceInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).DeviceInfo(ctx, req.(*DeviceInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_ListEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).ListEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/ListEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).ListEntities(ctx, req.(*ListEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_SubscribeStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).SubscribeStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/SubscribeStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).SubscribeStates(ctx, req.(*SubscribeStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_SubscribeLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).SubscribeLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/SubscribeLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).SubscribeLogs(ctx, req.(*SubscribeLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_SubscribeHomeassistantServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeHomeassistantServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).SubscribeHomeassistantServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/SubscribeHomeassistantServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).SubscribeHomeassistantServices(ctx, req.(*SubscribeHomeassistantServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_SubscribeHomeAssistantStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeHomeAssistantStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).SubscribeHomeAssistantStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/SubscribeHomeAssistantStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).SubscribeHomeAssistantStates(ctx, req.(*SubscribeHomeAssistantStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_GetTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).GetTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/GetTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).GetTime(ctx, req.(*GetTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_ExecuteService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).ExecuteService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/ExecuteService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).ExecuteService(ctx, req.(*ExecuteServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_CoverCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoverCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).CoverCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/CoverCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).CoverCommand(ctx, req.(*CoverCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_FanCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FanCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).FanCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/FanCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).FanCommand(ctx, req.(*FanCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_LightCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LightCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).LightCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/LightCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).LightCommand(ctx, req.(*LightCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_SwitchCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SwitchCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).SwitchCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/SwitchCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).SwitchCommand(ctx, req.(*SwitchCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_CameraImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CameraImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).CameraImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/CameraImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).CameraImage(ctx, req.(*CameraImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIConnection_ClimateCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClimateCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIConnectionServer).ClimateCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nativeapi.APIConnection/ClimateCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIConnectionServer).ClimateCommand(ctx, req.(*ClimateCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _APIConnection_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nativeapi.APIConnection",
	HandlerType: (*APIConnectionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "hello",
			Handler:    _APIConnection_Hello_Handler,
		},
		{
			MethodName: "connect",
			Handler:    _APIConnection_Connect_Handler,
		},
		{
			MethodName: "disconnect",
			Handler:    _APIConnection_Disconnect_Handler,
		},
		{
			MethodName: "ping",
			Handler:    _APIConnection_Ping_Handler,
		},
		{
			MethodName: "device_info",
			Handler:    _APIConnection_DeviceInfo_Handler,
		},
		{
			MethodName: "list_entities",
			Handler:    _APIConnection_ListEntities_Handler,
		},
		{
			MethodName: "subscribe_states",
			Handler:    _APIConnection_SubscribeStates_Handler,
		},
		{
			MethodName: "subscribe_logs",
			Handler:    _APIConnection_SubscribeLogs_Handler,
		},
		{
			MethodName: "subscribe_homeassistant_services",
			Handler:    _APIConnection_SubscribeHomeassistantServices_Handler,
		},
		{
			MethodName: "subscribe_home_assistant_states",
			Handler:    _APIConnection_SubscribeHomeAssistantStates_Handler,
		},
		{
			MethodName: "get_time",
			Handler:    _APIConnection_GetTime_Handler,
		},
		{
			MethodName: "execute_service",
			Handler:    _APIConnection_ExecuteService_Handler,
		},
		{
			MethodName: "cover_command",
			Handler:    _APIConnection_CoverCommand_Handler,
		},
		{
			MethodName: "fan_command",
			Handler:    _APIConnection_FanCommand_Handler,
		},
		{
			MethodName: "light_command",
			Handler:    _APIConnection_LightCommand_Handler,
		},
		{
			MethodName: "switch_command",
			Handler:    _APIConnection_SwitchCommand_Handler,
		},
		{
			MethodName: "camera_image",
			Handler:    _APIConnection_CameraImage_Handler,
		},
		{
			MethodName: "climate_command",
			Handler:    _APIConnection_ClimateCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
