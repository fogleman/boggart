// Code generated by "enumer -type=CartridgeStatus -trimprefix=CartridgeStatus -output=cartridge_status_enumer.go"; DO NOT EDIT.

//
package pantum

import (
	"fmt"
)

const _CartridgeStatusName = "UnknownNormalCartridgeNotDetectedCartridgeMismatchCartridgeExpiredCartridgeTonerLow"

var _CartridgeStatusIndex = [...]uint8{0, 7, 13, 33, 50, 66, 83}

func (i CartridgeStatus) String() string {
	i -= -1
	if i < 0 || i >= CartridgeStatus(len(_CartridgeStatusIndex)-1) {
		return fmt.Sprintf("CartridgeStatus(%d)", i+-1)
	}
	return _CartridgeStatusName[_CartridgeStatusIndex[i]:_CartridgeStatusIndex[i+1]]
}

var _CartridgeStatusValues = []CartridgeStatus{-1, 0, 1, 2, 3, 4}

var _CartridgeStatusNameToValueMap = map[string]CartridgeStatus{
	_CartridgeStatusName[0:7]:   -1,
	_CartridgeStatusName[7:13]:  0,
	_CartridgeStatusName[13:33]: 1,
	_CartridgeStatusName[33:50]: 2,
	_CartridgeStatusName[50:66]: 3,
	_CartridgeStatusName[66:83]: 4,
}

// CartridgeStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func CartridgeStatusString(s string) (CartridgeStatus, error) {
	if val, ok := _CartridgeStatusNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CartridgeStatus values", s)
}

// CartridgeStatusValues returns all values of the enum
func CartridgeStatusValues() []CartridgeStatus {
	return _CartridgeStatusValues
}

// IsACartridgeStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i CartridgeStatus) IsACartridgeStatus() bool {
	for _, v := range _CartridgeStatusValues {
		if i == v {
			return true
		}
	}
	return false
}
