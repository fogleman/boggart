// Code generated by go-swagger; DO NOT EDIT.

package things

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetFirmwareStatusReader is a Reader for the GetFirmwareStatus structure.
type GetFirmwareStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFirmwareStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFirmwareStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetFirmwareStatusNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFirmwareStatusOK creates a GetFirmwareStatusOK with default headers values
func NewGetFirmwareStatusOK() *GetFirmwareStatusOK {
	return &GetFirmwareStatusOK{}
}

/*GetFirmwareStatusOK handles this case with default header values.

OK
*/
type GetFirmwareStatusOK struct {
}

func (o *GetFirmwareStatusOK) Error() string {
	return fmt.Sprintf("[GET /things/{thingUID}/firmware/status][%d] getFirmwareStatusOK ", 200)
}

func (o *GetFirmwareStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFirmwareStatusNoContent creates a GetFirmwareStatusNoContent with default headers values
func NewGetFirmwareStatusNoContent() *GetFirmwareStatusNoContent {
	return &GetFirmwareStatusNoContent{}
}

/*GetFirmwareStatusNoContent handles this case with default header values.

No firmware status provided by this Thing.
*/
type GetFirmwareStatusNoContent struct {
}

func (o *GetFirmwareStatusNoContent) Error() string {
	return fmt.Sprintf("[GET /things/{thingUID}/firmware/status][%d] getFirmwareStatusNoContent ", 204)
}

func (o *GetFirmwareStatusNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
