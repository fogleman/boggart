// Code generated by go-swagger; DO NOT EDIT.

package things

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetConfigStatusReader is a Reader for the GetConfigStatus structure.
type GetConfigStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConfigStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConfigStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetConfigStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetConfigStatusOK creates a GetConfigStatusOK with default headers values
func NewGetConfigStatusOK() *GetConfigStatusOK {
	return &GetConfigStatusOK{}
}

/*GetConfigStatusOK handles this case with default header values.

OK
*/
type GetConfigStatusOK struct {
	Payload string
}

func (o *GetConfigStatusOK) Error() string {
	return fmt.Sprintf("[GET /things/{thingUID}/config/status][%d] getConfigStatusOK  %+v", 200, o.Payload)
}

func (o *GetConfigStatusOK) GetPayload() string {
	return o.Payload
}

func (o *GetConfigStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigStatusNotFound creates a GetConfigStatusNotFound with default headers values
func NewGetConfigStatusNotFound() *GetConfigStatusNotFound {
	return &GetConfigStatusNotFound{}
}

/*GetConfigStatusNotFound handles this case with default header values.

Thing not found.
*/
type GetConfigStatusNotFound struct {
}

func (o *GetConfigStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /things/{thingUID}/config/status][%d] getConfigStatusNotFound ", 404)
}

func (o *GetConfigStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
