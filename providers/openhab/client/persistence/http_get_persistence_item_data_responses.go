// Code generated by go-swagger; DO NOT EDIT.

package persistence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kihamo/boggart/providers/openhab/models"
)

// HTTPGetPersistenceItemDataReader is a Reader for the HTTPGetPersistenceItemData structure.
type HTTPGetPersistenceItemDataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HTTPGetPersistenceItemDataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHTTPGetPersistenceItemDataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewHTTPGetPersistenceItemDataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewHTTPGetPersistenceItemDataOK creates a HTTPGetPersistenceItemDataOK with default headers values
func NewHTTPGetPersistenceItemDataOK() *HTTPGetPersistenceItemDataOK {
	return &HTTPGetPersistenceItemDataOK{}
}

/*HTTPGetPersistenceItemDataOK handles this case with default header values.

OK
*/
type HTTPGetPersistenceItemDataOK struct {
	Payload *models.ItemHistoryDTO
}

func (o *HTTPGetPersistenceItemDataOK) Error() string {
	return fmt.Sprintf("[GET /persistence/items/{itemname}][%d] httpGetPersistenceItemDataOK  %+v", 200, o.Payload)
}

func (o *HTTPGetPersistenceItemDataOK) GetPayload() *models.ItemHistoryDTO {
	return o.Payload
}

func (o *HTTPGetPersistenceItemDataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ItemHistoryDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHTTPGetPersistenceItemDataNotFound creates a HTTPGetPersistenceItemDataNotFound with default headers values
func NewHTTPGetPersistenceItemDataNotFound() *HTTPGetPersistenceItemDataNotFound {
	return &HTTPGetPersistenceItemDataNotFound{}
}

/*HTTPGetPersistenceItemDataNotFound handles this case with default header values.

Unknown Item or persistence service
*/
type HTTPGetPersistenceItemDataNotFound struct {
}

func (o *HTTPGetPersistenceItemDataNotFound) Error() string {
	return fmt.Sprintf("[GET /persistence/items/{itemname}][%d] httpGetPersistenceItemDataNotFound ", 404)
}

func (o *HTTPGetPersistenceItemDataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
