// Code generated by go-swagger; DO NOT EDIT.

package persistence

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// HTTPDeletePersistenceServiceItemReader is a Reader for the HTTPDeletePersistenceServiceItem structure.
type HTTPDeletePersistenceServiceItemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HTTPDeletePersistenceServiceItemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHTTPDeletePersistenceServiceItemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewHTTPDeletePersistenceServiceItemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHTTPDeletePersistenceServiceItemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewHTTPDeletePersistenceServiceItemOK creates a HTTPDeletePersistenceServiceItemOK with default headers values
func NewHTTPDeletePersistenceServiceItemOK() *HTTPDeletePersistenceServiceItemOK {
	return &HTTPDeletePersistenceServiceItemOK{}
}

/*HTTPDeletePersistenceServiceItemOK handles this case with default header values.

OK
*/
type HTTPDeletePersistenceServiceItemOK struct {
	Payload []string
}

func (o *HTTPDeletePersistenceServiceItemOK) Error() string {
	return fmt.Sprintf("[DELETE /persistence/items/{itemname}][%d] httpDeletePersistenceServiceItemOK  %+v", 200, o.Payload)
}

func (o *HTTPDeletePersistenceServiceItemOK) GetPayload() []string {
	return o.Payload
}

func (o *HTTPDeletePersistenceServiceItemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHTTPDeletePersistenceServiceItemBadRequest creates a HTTPDeletePersistenceServiceItemBadRequest with default headers values
func NewHTTPDeletePersistenceServiceItemBadRequest() *HTTPDeletePersistenceServiceItemBadRequest {
	return &HTTPDeletePersistenceServiceItemBadRequest{}
}

/*HTTPDeletePersistenceServiceItemBadRequest handles this case with default header values.

Invalid filter parameters
*/
type HTTPDeletePersistenceServiceItemBadRequest struct {
}

func (o *HTTPDeletePersistenceServiceItemBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /persistence/items/{itemname}][%d] httpDeletePersistenceServiceItemBadRequest ", 400)
}

func (o *HTTPDeletePersistenceServiceItemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHTTPDeletePersistenceServiceItemNotFound creates a HTTPDeletePersistenceServiceItemNotFound with default headers values
func NewHTTPDeletePersistenceServiceItemNotFound() *HTTPDeletePersistenceServiceItemNotFound {
	return &HTTPDeletePersistenceServiceItemNotFound{}
}

/*HTTPDeletePersistenceServiceItemNotFound handles this case with default header values.

Unknown persistence service
*/
type HTTPDeletePersistenceServiceItemNotFound struct {
}

func (o *HTTPDeletePersistenceServiceItemNotFound) Error() string {
	return fmt.Sprintf("[DELETE /persistence/items/{itemname}][%d] httpDeletePersistenceServiceItemNotFound ", 404)
}

func (o *HTTPDeletePersistenceServiceItemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
