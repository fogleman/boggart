// Code generated by go-swagger; DO NOT EDIT.

package audio

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetDefaultSourceReader is a Reader for the GetDefaultSource structure.
type GetDefaultSourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDefaultSourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDefaultSourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetDefaultSourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDefaultSourceOK creates a GetDefaultSourceOK with default headers values
func NewGetDefaultSourceOK() *GetDefaultSourceOK {
	return &GetDefaultSourceOK{}
}

/*GetDefaultSourceOK handles this case with default header values.

OK
*/
type GetDefaultSourceOK struct {
}

func (o *GetDefaultSourceOK) Error() string {
	return fmt.Sprintf("[GET /audio/defaultsource][%d] getDefaultSourceOK ", 200)
}

func (o *GetDefaultSourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDefaultSourceNotFound creates a GetDefaultSourceNotFound with default headers values
func NewGetDefaultSourceNotFound() *GetDefaultSourceNotFound {
	return &GetDefaultSourceNotFound{}
}

/*GetDefaultSourceNotFound handles this case with default header values.

Source not found
*/
type GetDefaultSourceNotFound struct {
}

func (o *GetDefaultSourceNotFound) Error() string {
	return fmt.Sprintf("[GET /audio/defaultsource][%d] getDefaultSourceNotFound ", 404)
}

func (o *GetDefaultSourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
