// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetItemsParams creates a new GetItemsParams object
// with the default values initialized.
func NewGetItemsParams() *GetItemsParams {
	var (
		recursiveDefault = bool(false)
	)
	return &GetItemsParams{
		Recursive: &recursiveDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetItemsParamsWithTimeout creates a new GetItemsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetItemsParamsWithTimeout(timeout time.Duration) *GetItemsParams {
	var (
		recursiveDefault = bool(false)
	)
	return &GetItemsParams{
		Recursive: &recursiveDefault,

		timeout: timeout,
	}
}

// NewGetItemsParamsWithContext creates a new GetItemsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetItemsParamsWithContext(ctx context.Context) *GetItemsParams {
	var (
		recursiveDefault = bool(false)
	)
	return &GetItemsParams{
		Recursive: &recursiveDefault,

		Context: ctx,
	}
}

// NewGetItemsParamsWithHTTPClient creates a new GetItemsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetItemsParamsWithHTTPClient(client *http.Client) *GetItemsParams {
	var (
		recursiveDefault = bool(false)
	)
	return &GetItemsParams{
		Recursive:  &recursiveDefault,
		HTTPClient: client,
	}
}

/*GetItemsParams contains all the parameters to send to the API endpoint
for the get items operation typically these are written to a http.Request
*/
type GetItemsParams struct {

	/*AcceptLanguage
	  language

	*/
	AcceptLanguage *string
	/*Fields
	  limit output to the given fields (comma separated)

	*/
	Fields *string
	/*Metadata
	  metadata selector

	*/
	Metadata *string
	/*Recursive
	  get member items recursively

	*/
	Recursive *bool
	/*Tags
	  item tag filter

	*/
	Tags *string
	/*Type
	  item type filter

	*/
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get items params
func (o *GetItemsParams) WithTimeout(timeout time.Duration) *GetItemsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get items params
func (o *GetItemsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get items params
func (o *GetItemsParams) WithContext(ctx context.Context) *GetItemsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get items params
func (o *GetItemsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get items params
func (o *GetItemsParams) WithHTTPClient(client *http.Client) *GetItemsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get items params
func (o *GetItemsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAcceptLanguage adds the acceptLanguage to the get items params
func (o *GetItemsParams) WithAcceptLanguage(acceptLanguage *string) *GetItemsParams {
	o.SetAcceptLanguage(acceptLanguage)
	return o
}

// SetAcceptLanguage adds the acceptLanguage to the get items params
func (o *GetItemsParams) SetAcceptLanguage(acceptLanguage *string) {
	o.AcceptLanguage = acceptLanguage
}

// WithFields adds the fields to the get items params
func (o *GetItemsParams) WithFields(fields *string) *GetItemsParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the get items params
func (o *GetItemsParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithMetadata adds the metadata to the get items params
func (o *GetItemsParams) WithMetadata(metadata *string) *GetItemsParams {
	o.SetMetadata(metadata)
	return o
}

// SetMetadata adds the metadata to the get items params
func (o *GetItemsParams) SetMetadata(metadata *string) {
	o.Metadata = metadata
}

// WithRecursive adds the recursive to the get items params
func (o *GetItemsParams) WithRecursive(recursive *bool) *GetItemsParams {
	o.SetRecursive(recursive)
	return o
}

// SetRecursive adds the recursive to the get items params
func (o *GetItemsParams) SetRecursive(recursive *bool) {
	o.Recursive = recursive
}

// WithTags adds the tags to the get items params
func (o *GetItemsParams) WithTags(tags *string) *GetItemsParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the get items params
func (o *GetItemsParams) SetTags(tags *string) {
	o.Tags = tags
}

// WithType adds the typeVar to the get items params
func (o *GetItemsParams) WithType(typeVar *string) *GetItemsParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get items params
func (o *GetItemsParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetItemsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AcceptLanguage != nil {

		// header param Accept-Language
		if err := r.SetHeaderParam("Accept-Language", *o.AcceptLanguage); err != nil {
			return err
		}

	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if o.Metadata != nil {

		// query param metadata
		var qrMetadata string
		if o.Metadata != nil {
			qrMetadata = *o.Metadata
		}
		qMetadata := qrMetadata
		if qMetadata != "" {
			if err := r.SetQueryParam("metadata", qMetadata); err != nil {
				return err
			}
		}

	}

	if o.Recursive != nil {

		// query param recursive
		var qrRecursive bool
		if o.Recursive != nil {
			qrRecursive = *o.Recursive
		}
		qRecursive := swag.FormatBool(qrRecursive)
		if qRecursive != "" {
			if err := r.SetQueryParam("recursive", qRecursive); err != nil {
				return err
			}
		}

	}

	if o.Tags != nil {

		// query param tags
		var qrTags string
		if o.Tags != nil {
			qrTags = *o.Tags
		}
		qTags := qrTags
		if qTags != "" {
			if err := r.SetQueryParam("tags", qTags); err != nil {
				return err
			}
		}

	}

	if o.Type != nil {

		// query param type
		var qrType string
		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {
			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
