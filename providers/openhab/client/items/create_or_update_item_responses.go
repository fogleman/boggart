// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// CreateOrUpdateItemReader is a Reader for the CreateOrUpdateItem structure.
type CreateOrUpdateItemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOrUpdateItemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateOrUpdateItemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateOrUpdateItemCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateOrUpdateItemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateOrUpdateItemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateOrUpdateItemMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateOrUpdateItemOK creates a CreateOrUpdateItemOK with default headers values
func NewCreateOrUpdateItemOK() *CreateOrUpdateItemOK {
	return &CreateOrUpdateItemOK{}
}

/*CreateOrUpdateItemOK handles this case with default header values.

OK
*/
type CreateOrUpdateItemOK struct {
	Payload string
}

func (o *CreateOrUpdateItemOK) Error() string {
	return fmt.Sprintf("[PUT /items/{itemname}][%d] createOrUpdateItemOK  %+v", 200, o.Payload)
}

func (o *CreateOrUpdateItemOK) GetPayload() string {
	return o.Payload
}

func (o *CreateOrUpdateItemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrUpdateItemCreated creates a CreateOrUpdateItemCreated with default headers values
func NewCreateOrUpdateItemCreated() *CreateOrUpdateItemCreated {
	return &CreateOrUpdateItemCreated{}
}

/*CreateOrUpdateItemCreated handles this case with default header values.

Item created.
*/
type CreateOrUpdateItemCreated struct {
}

func (o *CreateOrUpdateItemCreated) Error() string {
	return fmt.Sprintf("[PUT /items/{itemname}][%d] createOrUpdateItemCreated ", 201)
}

func (o *CreateOrUpdateItemCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOrUpdateItemBadRequest creates a CreateOrUpdateItemBadRequest with default headers values
func NewCreateOrUpdateItemBadRequest() *CreateOrUpdateItemBadRequest {
	return &CreateOrUpdateItemBadRequest{}
}

/*CreateOrUpdateItemBadRequest handles this case with default header values.

Item null.
*/
type CreateOrUpdateItemBadRequest struct {
}

func (o *CreateOrUpdateItemBadRequest) Error() string {
	return fmt.Sprintf("[PUT /items/{itemname}][%d] createOrUpdateItemBadRequest ", 400)
}

func (o *CreateOrUpdateItemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOrUpdateItemNotFound creates a CreateOrUpdateItemNotFound with default headers values
func NewCreateOrUpdateItemNotFound() *CreateOrUpdateItemNotFound {
	return &CreateOrUpdateItemNotFound{}
}

/*CreateOrUpdateItemNotFound handles this case with default header values.

Item not found.
*/
type CreateOrUpdateItemNotFound struct {
}

func (o *CreateOrUpdateItemNotFound) Error() string {
	return fmt.Sprintf("[PUT /items/{itemname}][%d] createOrUpdateItemNotFound ", 404)
}

func (o *CreateOrUpdateItemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOrUpdateItemMethodNotAllowed creates a CreateOrUpdateItemMethodNotAllowed with default headers values
func NewCreateOrUpdateItemMethodNotAllowed() *CreateOrUpdateItemMethodNotAllowed {
	return &CreateOrUpdateItemMethodNotAllowed{}
}

/*CreateOrUpdateItemMethodNotAllowed handles this case with default header values.

Item not editable.
*/
type CreateOrUpdateItemMethodNotAllowed struct {
}

func (o *CreateOrUpdateItemMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /items/{itemname}][%d] createOrUpdateItemMethodNotAllowed ", 405)
}

func (o *CreateOrUpdateItemMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
