// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewAddTagParams creates a new AddTagParams object
// with the default values initialized.
func NewAddTagParams() *AddTagParams {
	var ()
	return &AddTagParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddTagParamsWithTimeout creates a new AddTagParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddTagParamsWithTimeout(timeout time.Duration) *AddTagParams {
	var ()
	return &AddTagParams{

		timeout: timeout,
	}
}

// NewAddTagParamsWithContext creates a new AddTagParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddTagParamsWithContext(ctx context.Context) *AddTagParams {
	var ()
	return &AddTagParams{

		Context: ctx,
	}
}

// NewAddTagParamsWithHTTPClient creates a new AddTagParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddTagParamsWithHTTPClient(client *http.Client) *AddTagParams {
	var ()
	return &AddTagParams{
		HTTPClient: client,
	}
}

/*AddTagParams contains all the parameters to send to the API endpoint
for the add tag operation typically these are written to a http.Request
*/
type AddTagParams struct {

	/*Itemname
	  item name

	*/
	Itemname string
	/*Tag
	  tag

	*/
	Tag string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add tag params
func (o *AddTagParams) WithTimeout(timeout time.Duration) *AddTagParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add tag params
func (o *AddTagParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add tag params
func (o *AddTagParams) WithContext(ctx context.Context) *AddTagParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add tag params
func (o *AddTagParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add tag params
func (o *AddTagParams) WithHTTPClient(client *http.Client) *AddTagParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add tag params
func (o *AddTagParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithItemname adds the itemname to the add tag params
func (o *AddTagParams) WithItemname(itemname string) *AddTagParams {
	o.SetItemname(itemname)
	return o
}

// SetItemname adds the itemname to the add tag params
func (o *AddTagParams) SetItemname(itemname string) {
	o.Itemname = itemname
}

// WithTag adds the tag to the add tag params
func (o *AddTagParams) WithTag(tag string) *AddTagParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the add tag params
func (o *AddTagParams) SetTag(tag string) {
	o.Tag = tag
}

// WriteToRequest writes these params to a swagger request
func (o *AddTagParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param itemname
	if err := r.SetPathParam("itemname", o.Itemname); err != nil {
		return err
	}

	// path param tag
	if err := r.SetPathParam("tag", o.Tag); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
