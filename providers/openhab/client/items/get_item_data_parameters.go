// Code generated by go-swagger; DO NOT EDIT.

package items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetItemDataParams creates a new GetItemDataParams object
// with the default values initialized.
func NewGetItemDataParams() *GetItemDataParams {
	var ()
	return &GetItemDataParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetItemDataParamsWithTimeout creates a new GetItemDataParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetItemDataParamsWithTimeout(timeout time.Duration) *GetItemDataParams {
	var ()
	return &GetItemDataParams{

		timeout: timeout,
	}
}

// NewGetItemDataParamsWithContext creates a new GetItemDataParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetItemDataParamsWithContext(ctx context.Context) *GetItemDataParams {
	var ()
	return &GetItemDataParams{

		Context: ctx,
	}
}

// NewGetItemDataParamsWithHTTPClient creates a new GetItemDataParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetItemDataParamsWithHTTPClient(client *http.Client) *GetItemDataParams {
	var ()
	return &GetItemDataParams{
		HTTPClient: client,
	}
}

/*GetItemDataParams contains all the parameters to send to the API endpoint
for the get item data operation typically these are written to a http.Request
*/
type GetItemDataParams struct {

	/*AcceptLanguage
	  language

	*/
	AcceptLanguage *string
	/*Itemname
	  item name

	*/
	Itemname string
	/*Metadata
	  metadata selector

	*/
	Metadata *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get item data params
func (o *GetItemDataParams) WithTimeout(timeout time.Duration) *GetItemDataParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get item data params
func (o *GetItemDataParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get item data params
func (o *GetItemDataParams) WithContext(ctx context.Context) *GetItemDataParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get item data params
func (o *GetItemDataParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get item data params
func (o *GetItemDataParams) WithHTTPClient(client *http.Client) *GetItemDataParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get item data params
func (o *GetItemDataParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAcceptLanguage adds the acceptLanguage to the get item data params
func (o *GetItemDataParams) WithAcceptLanguage(acceptLanguage *string) *GetItemDataParams {
	o.SetAcceptLanguage(acceptLanguage)
	return o
}

// SetAcceptLanguage adds the acceptLanguage to the get item data params
func (o *GetItemDataParams) SetAcceptLanguage(acceptLanguage *string) {
	o.AcceptLanguage = acceptLanguage
}

// WithItemname adds the itemname to the get item data params
func (o *GetItemDataParams) WithItemname(itemname string) *GetItemDataParams {
	o.SetItemname(itemname)
	return o
}

// SetItemname adds the itemname to the get item data params
func (o *GetItemDataParams) SetItemname(itemname string) {
	o.Itemname = itemname
}

// WithMetadata adds the metadata to the get item data params
func (o *GetItemDataParams) WithMetadata(metadata *string) *GetItemDataParams {
	o.SetMetadata(metadata)
	return o
}

// SetMetadata adds the metadata to the get item data params
func (o *GetItemDataParams) SetMetadata(metadata *string) {
	o.Metadata = metadata
}

// WriteToRequest writes these params to a swagger request
func (o *GetItemDataParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AcceptLanguage != nil {

		// header param Accept-Language
		if err := r.SetHeaderParam("Accept-Language", *o.AcceptLanguage); err != nil {
			return err
		}

	}

	// path param itemname
	if err := r.SetPathParam("itemname", o.Itemname); err != nil {
		return err
	}

	if o.Metadata != nil {

		// query param metadata
		var qrMetadata string
		if o.Metadata != nil {
			qrMetadata = *o.Metadata
		}
		qMetadata := qrMetadata
		if qMetadata != "" {
			if err := r.SetQueryParam("metadata", qMetadata); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
