// Code generated by go-swagger; DO NOT EDIT.

package links

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetLinkReader is a Reader for the GetLink structure.
type GetLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLinkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetLinkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLinkOK creates a GetLinkOK with default headers values
func NewGetLinkOK() *GetLinkOK {
	return &GetLinkOK{}
}

/*GetLinkOK handles this case with default header values.

OK
*/
type GetLinkOK struct {
}

func (o *GetLinkOK) Error() string {
	return fmt.Sprintf("[GET /links/{itemName}/{channelUID}][%d] getLinkOK ", 200)
}

func (o *GetLinkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLinkNotFound creates a GetLinkNotFound with default headers values
func NewGetLinkNotFound() *GetLinkNotFound {
	return &GetLinkNotFound{}
}

/*GetLinkNotFound handles this case with default header values.

Content does not match the path
*/
type GetLinkNotFound struct {
}

func (o *GetLinkNotFound) Error() string {
	return fmt.Sprintf("[GET /links/{itemName}/{channelUID}][%d] getLinkNotFound ", 404)
}

func (o *GetLinkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
