// Code generated by go-swagger; DO NOT EDIT.

package links

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UnlinkReader is a Reader for the Unlink structure.
type UnlinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnlinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnlinkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUnlinkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUnlinkMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUnlinkOK creates a UnlinkOK with default headers values
func NewUnlinkOK() *UnlinkOK {
	return &UnlinkOK{}
}

/*UnlinkOK handles this case with default header values.

OK
*/
type UnlinkOK struct {
}

func (o *UnlinkOK) Error() string {
	return fmt.Sprintf("[DELETE /links/{itemName}/{channelUID}][%d] unlinkOK ", 200)
}

func (o *UnlinkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnlinkNotFound creates a UnlinkNotFound with default headers values
func NewUnlinkNotFound() *UnlinkNotFound {
	return &UnlinkNotFound{}
}

/*UnlinkNotFound handles this case with default header values.

Link not found.
*/
type UnlinkNotFound struct {
}

func (o *UnlinkNotFound) Error() string {
	return fmt.Sprintf("[DELETE /links/{itemName}/{channelUID}][%d] unlinkNotFound ", 404)
}

func (o *UnlinkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnlinkMethodNotAllowed creates a UnlinkMethodNotAllowed with default headers values
func NewUnlinkMethodNotAllowed() *UnlinkMethodNotAllowed {
	return &UnlinkMethodNotAllowed{}
}

/*UnlinkMethodNotAllowed handles this case with default header values.

Link not editable.
*/
type UnlinkMethodNotAllowed struct {
}

func (o *UnlinkMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /links/{itemName}/{channelUID}][%d] unlinkMethodNotAllowed ", 405)
}

func (o *UnlinkMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
