// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ThingStatusInfo thing status info
// swagger:model ThingStatusInfo
type ThingStatusInfo struct {

	// description
	Description string `json:"description,omitempty"`

	// status
	// Enum: [UNINITIALIZED INITIALIZING UNKNOWN ONLINE OFFLINE REMOVING REMOVED]
	Status string `json:"status,omitempty"`

	// status detail
	// Enum: [NONE HANDLER_MISSING_ERROR HANDLER_REGISTERING_ERROR HANDLER_INITIALIZING_ERROR HANDLER_CONFIGURATION_PENDING CONFIGURATION_PENDING COMMUNICATION_ERROR CONFIGURATION_ERROR BRIDGE_OFFLINE FIRMWARE_UPDATING DUTY_CYCLE BRIDGE_UNINITIALIZED GONE DISABLED]
	StatusDetail string `json:"statusDetail,omitempty"`
}

// Validate validates this thing status info
func (m *ThingStatusInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatusDetail(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var thingStatusInfoTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UNINITIALIZED","INITIALIZING","UNKNOWN","ONLINE","OFFLINE","REMOVING","REMOVED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		thingStatusInfoTypeStatusPropEnum = append(thingStatusInfoTypeStatusPropEnum, v)
	}
}

const (

	// ThingStatusInfoStatusUNINITIALIZED captures enum value "UNINITIALIZED"
	ThingStatusInfoStatusUNINITIALIZED string = "UNINITIALIZED"

	// ThingStatusInfoStatusINITIALIZING captures enum value "INITIALIZING"
	ThingStatusInfoStatusINITIALIZING string = "INITIALIZING"

	// ThingStatusInfoStatusUNKNOWN captures enum value "UNKNOWN"
	ThingStatusInfoStatusUNKNOWN string = "UNKNOWN"

	// ThingStatusInfoStatusONLINE captures enum value "ONLINE"
	ThingStatusInfoStatusONLINE string = "ONLINE"

	// ThingStatusInfoStatusOFFLINE captures enum value "OFFLINE"
	ThingStatusInfoStatusOFFLINE string = "OFFLINE"

	// ThingStatusInfoStatusREMOVING captures enum value "REMOVING"
	ThingStatusInfoStatusREMOVING string = "REMOVING"

	// ThingStatusInfoStatusREMOVED captures enum value "REMOVED"
	ThingStatusInfoStatusREMOVED string = "REMOVED"
)

// prop value enum
func (m *ThingStatusInfo) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, thingStatusInfoTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ThingStatusInfo) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

var thingStatusInfoTypeStatusDetailPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NONE","HANDLER_MISSING_ERROR","HANDLER_REGISTERING_ERROR","HANDLER_INITIALIZING_ERROR","HANDLER_CONFIGURATION_PENDING","CONFIGURATION_PENDING","COMMUNICATION_ERROR","CONFIGURATION_ERROR","BRIDGE_OFFLINE","FIRMWARE_UPDATING","DUTY_CYCLE","BRIDGE_UNINITIALIZED","GONE","DISABLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		thingStatusInfoTypeStatusDetailPropEnum = append(thingStatusInfoTypeStatusDetailPropEnum, v)
	}
}

const (

	// ThingStatusInfoStatusDetailNONE captures enum value "NONE"
	ThingStatusInfoStatusDetailNONE string = "NONE"

	// ThingStatusInfoStatusDetailHANDLERMISSINGERROR captures enum value "HANDLER_MISSING_ERROR"
	ThingStatusInfoStatusDetailHANDLERMISSINGERROR string = "HANDLER_MISSING_ERROR"

	// ThingStatusInfoStatusDetailHANDLERREGISTERINGERROR captures enum value "HANDLER_REGISTERING_ERROR"
	ThingStatusInfoStatusDetailHANDLERREGISTERINGERROR string = "HANDLER_REGISTERING_ERROR"

	// ThingStatusInfoStatusDetailHANDLERINITIALIZINGERROR captures enum value "HANDLER_INITIALIZING_ERROR"
	ThingStatusInfoStatusDetailHANDLERINITIALIZINGERROR string = "HANDLER_INITIALIZING_ERROR"

	// ThingStatusInfoStatusDetailHANDLERCONFIGURATIONPENDING captures enum value "HANDLER_CONFIGURATION_PENDING"
	ThingStatusInfoStatusDetailHANDLERCONFIGURATIONPENDING string = "HANDLER_CONFIGURATION_PENDING"

	// ThingStatusInfoStatusDetailCONFIGURATIONPENDING captures enum value "CONFIGURATION_PENDING"
	ThingStatusInfoStatusDetailCONFIGURATIONPENDING string = "CONFIGURATION_PENDING"

	// ThingStatusInfoStatusDetailCOMMUNICATIONERROR captures enum value "COMMUNICATION_ERROR"
	ThingStatusInfoStatusDetailCOMMUNICATIONERROR string = "COMMUNICATION_ERROR"

	// ThingStatusInfoStatusDetailCONFIGURATIONERROR captures enum value "CONFIGURATION_ERROR"
	ThingStatusInfoStatusDetailCONFIGURATIONERROR string = "CONFIGURATION_ERROR"

	// ThingStatusInfoStatusDetailBRIDGEOFFLINE captures enum value "BRIDGE_OFFLINE"
	ThingStatusInfoStatusDetailBRIDGEOFFLINE string = "BRIDGE_OFFLINE"

	// ThingStatusInfoStatusDetailFIRMWAREUPDATING captures enum value "FIRMWARE_UPDATING"
	ThingStatusInfoStatusDetailFIRMWAREUPDATING string = "FIRMWARE_UPDATING"

	// ThingStatusInfoStatusDetailDUTYCYCLE captures enum value "DUTY_CYCLE"
	ThingStatusInfoStatusDetailDUTYCYCLE string = "DUTY_CYCLE"

	// ThingStatusInfoStatusDetailBRIDGEUNINITIALIZED captures enum value "BRIDGE_UNINITIALIZED"
	ThingStatusInfoStatusDetailBRIDGEUNINITIALIZED string = "BRIDGE_UNINITIALIZED"

	// ThingStatusInfoStatusDetailGONE captures enum value "GONE"
	ThingStatusInfoStatusDetailGONE string = "GONE"

	// ThingStatusInfoStatusDetailDISABLED captures enum value "DISABLED"
	ThingStatusInfoStatusDetailDISABLED string = "DISABLED"
)

// prop value enum
func (m *ThingStatusInfo) validateStatusDetailEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, thingStatusInfoTypeStatusDetailPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ThingStatusInfo) validateStatusDetail(formats strfmt.Registry) error {

	if swag.IsZero(m.StatusDetail) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusDetailEnum("statusDetail", "body", m.StatusDetail); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ThingStatusInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThingStatusInfo) UnmarshalBinary(b []byte) error {
	var res ThingStatusInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
