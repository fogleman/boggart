// Code generated by go-swagger; DO NOT EDIT.

package information

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kihamo/boggart/providers/tvt/models"
)

// GetBasicConfigReader is a Reader for the GetBasicConfig structure.
type GetBasicConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBasicConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBasicConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetBasicConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBasicConfigOK creates a GetBasicConfigOK with default headers values
func NewGetBasicConfigOK() *GetBasicConfigOK {
	return &GetBasicConfigOK{}
}

/*GetBasicConfigOK handles this case with default header values.

Successful operation
*/
type GetBasicConfigOK struct {
	Payload models.BasicConfig
}

func (o *GetBasicConfigOK) Error() string {
	return fmt.Sprintf("[POST /queryBasicCfg][%d] getBasicConfigOK  %+v", 200, o.Payload)
}

func (o *GetBasicConfigOK) GetPayload() models.BasicConfig {
	return o.Payload
}

func (o *GetBasicConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBasicConfigDefault creates a GetBasicConfigDefault with default headers values
func NewGetBasicConfigDefault(code int) *GetBasicConfigDefault {
	return &GetBasicConfigDefault{
		_statusCode: code,
	}
}

/*GetBasicConfigDefault handles this case with default header values.

Unexpected error
*/
type GetBasicConfigDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get basic config default response
func (o *GetBasicConfigDefault) Code() int {
	return o._statusCode
}

func (o *GetBasicConfigDefault) Error() string {
	return fmt.Sprintf("[POST /queryBasicCfg][%d] getBasicConfig default  %+v", o._statusCode, o.Payload)
}

func (o *GetBasicConfigDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBasicConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
