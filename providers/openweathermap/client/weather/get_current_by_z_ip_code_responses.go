// Code generated by go-swagger; DO NOT EDIT.

package weather

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kihamo/boggart/providers/openweathermap/models"
)

// GetCurrentByZIPCodeReader is a Reader for the GetCurrentByZIPCode structure.
type GetCurrentByZIPCodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCurrentByZIPCodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCurrentByZIPCodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetCurrentByZIPCodeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCurrentByZIPCodeOK creates a GetCurrentByZIPCodeOK with default headers values
func NewGetCurrentByZIPCodeOK() *GetCurrentByZIPCodeOK {
	return &GetCurrentByZIPCodeOK{}
}

/*GetCurrentByZIPCodeOK handles this case with default header values.

Successful operation
*/
type GetCurrentByZIPCodeOK struct {
	Payload *models.Current
}

func (o *GetCurrentByZIPCodeOK) Error() string {
	return fmt.Sprintf("[GET /data/2.5/weather?zip={zip}][%d] getCurrentByZIpCodeOK  %+v", 200, o.Payload)
}

func (o *GetCurrentByZIPCodeOK) GetPayload() *models.Current {
	return o.Payload
}

func (o *GetCurrentByZIPCodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Current)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCurrentByZIPCodeDefault creates a GetCurrentByZIPCodeDefault with default headers values
func NewGetCurrentByZIPCodeDefault(code int) *GetCurrentByZIPCodeDefault {
	return &GetCurrentByZIPCodeDefault{
		_statusCode: code,
	}
}

/*GetCurrentByZIPCodeDefault handles this case with default header values.

Unexpected error
*/
type GetCurrentByZIPCodeDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get current by z IP code default response
func (o *GetCurrentByZIPCodeDefault) Code() int {
	return o._statusCode
}

func (o *GetCurrentByZIPCodeDefault) Error() string {
	return fmt.Sprintf("[GET /data/2.5/weather?zip={zip}][%d] getCurrentByZIPCode default  %+v", o._statusCode, o.Payload)
}

func (o *GetCurrentByZIPCodeDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCurrentByZIPCodeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
