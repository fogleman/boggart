// Code generated by go-swagger; DO NOT EDIT.

package forecast

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kihamo/boggart/providers/openweathermap/models"
)

// GetForecastByCityNameReader is a Reader for the GetForecastByCityName structure.
type GetForecastByCityNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetForecastByCityNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetForecastByCityNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetForecastByCityNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetForecastByCityNameOK creates a GetForecastByCityNameOK with default headers values
func NewGetForecastByCityNameOK() *GetForecastByCityNameOK {
	return &GetForecastByCityNameOK{}
}

/*GetForecastByCityNameOK handles this case with default header values.

Successful operation
*/
type GetForecastByCityNameOK struct {
	Payload *models.Forecast
}

func (o *GetForecastByCityNameOK) Error() string {
	return fmt.Sprintf("[GET /data/2.5/forecast?q={q}][%d] getForecastByCityNameOK  %+v", 200, o.Payload)
}

func (o *GetForecastByCityNameOK) GetPayload() *models.Forecast {
	return o.Payload
}

func (o *GetForecastByCityNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Forecast)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetForecastByCityNameDefault creates a GetForecastByCityNameDefault with default headers values
func NewGetForecastByCityNameDefault(code int) *GetForecastByCityNameDefault {
	return &GetForecastByCityNameDefault{
		_statusCode: code,
	}
}

/*GetForecastByCityNameDefault handles this case with default header values.

Unexpected error
*/
type GetForecastByCityNameDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get forecast by city name default response
func (o *GetForecastByCityNameDefault) Code() int {
	return o._statusCode
}

func (o *GetForecastByCityNameDefault) Error() string {
	return fmt.Sprintf("[GET /data/2.5/forecast?q={q}][%d] getForecastByCityName default  %+v", o._statusCode, o.Payload)
}

func (o *GetForecastByCityNameDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetForecastByCityNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
