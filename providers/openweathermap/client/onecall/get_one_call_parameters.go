// Code generated by go-swagger; DO NOT EDIT.

package onecall

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOneCallParams creates a new GetOneCallParams object
// with the default values initialized.
func NewGetOneCallParams() *GetOneCallParams {
	var ()
	return &GetOneCallParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetOneCallParamsWithTimeout creates a new GetOneCallParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetOneCallParamsWithTimeout(timeout time.Duration) *GetOneCallParams {
	var ()
	return &GetOneCallParams{

		timeout: timeout,
	}
}

// NewGetOneCallParamsWithContext creates a new GetOneCallParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetOneCallParamsWithContext(ctx context.Context) *GetOneCallParams {
	var ()
	return &GetOneCallParams{

		Context: ctx,
	}
}

// NewGetOneCallParamsWithHTTPClient creates a new GetOneCallParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetOneCallParamsWithHTTPClient(client *http.Client) *GetOneCallParams {
	var ()
	return &GetOneCallParams{
		HTTPClient: client,
	}
}

/*GetOneCallParams contains all the parameters to send to the API endpoint
for the get one call operation typically these are written to a http.Request
*/
type GetOneCallParams struct {

	/*Exclude
	  Exclude some parts of the weather data from the API response. It should be a comma-delimited list (without spaces)

	*/
	Exclude []string
	/*Lang
	  Multilingual support

	*/
	Lang *string
	/*Lat
	  Coordinates of the location of your interest

	*/
	Lat float64
	/*Lon
	  Coordinates of the location of your interest

	*/
	Lon float64
	/*Units
	  Standard, metric, and imperial units are available

	*/
	Units *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get one call params
func (o *GetOneCallParams) WithTimeout(timeout time.Duration) *GetOneCallParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get one call params
func (o *GetOneCallParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get one call params
func (o *GetOneCallParams) WithContext(ctx context.Context) *GetOneCallParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get one call params
func (o *GetOneCallParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get one call params
func (o *GetOneCallParams) WithHTTPClient(client *http.Client) *GetOneCallParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get one call params
func (o *GetOneCallParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExclude adds the exclude to the get one call params
func (o *GetOneCallParams) WithExclude(exclude []string) *GetOneCallParams {
	o.SetExclude(exclude)
	return o
}

// SetExclude adds the exclude to the get one call params
func (o *GetOneCallParams) SetExclude(exclude []string) {
	o.Exclude = exclude
}

// WithLang adds the lang to the get one call params
func (o *GetOneCallParams) WithLang(lang *string) *GetOneCallParams {
	o.SetLang(lang)
	return o
}

// SetLang adds the lang to the get one call params
func (o *GetOneCallParams) SetLang(lang *string) {
	o.Lang = lang
}

// WithLat adds the lat to the get one call params
func (o *GetOneCallParams) WithLat(lat float64) *GetOneCallParams {
	o.SetLat(lat)
	return o
}

// SetLat adds the lat to the get one call params
func (o *GetOneCallParams) SetLat(lat float64) {
	o.Lat = lat
}

// WithLon adds the lon to the get one call params
func (o *GetOneCallParams) WithLon(lon float64) *GetOneCallParams {
	o.SetLon(lon)
	return o
}

// SetLon adds the lon to the get one call params
func (o *GetOneCallParams) SetLon(lon float64) {
	o.Lon = lon
}

// WithUnits adds the units to the get one call params
func (o *GetOneCallParams) WithUnits(units *string) *GetOneCallParams {
	o.SetUnits(units)
	return o
}

// SetUnits adds the units to the get one call params
func (o *GetOneCallParams) SetUnits(units *string) {
	o.Units = units
}

// WriteToRequest writes these params to a swagger request
func (o *GetOneCallParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesExclude := o.Exclude

	joinedExclude := swag.JoinByFormat(valuesExclude, "")
	// query array param exclude
	if err := r.SetQueryParam("exclude", joinedExclude...); err != nil {
		return err
	}

	if o.Lang != nil {

		// query param lang
		var qrLang string
		if o.Lang != nil {
			qrLang = *o.Lang
		}
		qLang := qrLang
		if qLang != "" {
			if err := r.SetQueryParam("lang", qLang); err != nil {
				return err
			}
		}

	}

	// query param lat
	qrLat := o.Lat
	qLat := swag.FormatFloat64(qrLat)
	if qLat != "" {
		if err := r.SetQueryParam("lat", qLat); err != nil {
			return err
		}
	}

	// query param lon
	qrLon := o.Lon
	qLon := swag.FormatFloat64(qrLon)
	if qLon != "" {
		if err := r.SetQueryParam("lon", qLon); err != nil {
			return err
		}
	}

	if o.Units != nil {

		// query param units
		var qrUnits string
		if o.Units != nil {
			qrUnits = *o.Units
		}
		qUnits := qrUnits
		if qUnits != "" {
			if err := r.SetQueryParam("units", qUnits); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
