// Code generated by go-swagger; DO NOT EDIT.

package feed

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kihamo/boggart/providers/pass24online/models"
)

// GetFeedReader is a Reader for the GetFeed structure.
type GetFeedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFeedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFeedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetFeedDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetFeedOK creates a GetFeedOK with default headers values
func NewGetFeedOK() *GetFeedOK {
	return &GetFeedOK{}
}

/*GetFeedOK handles this case with default header values.

Successful operation
*/
type GetFeedOK struct {
	Payload *models.FeedResponse
}

func (o *GetFeedOK) Error() string {
	return fmt.Sprintf("[GET /feed][%d] getFeedOK  %+v", 200, o.Payload)
}

func (o *GetFeedOK) GetPayload() *models.FeedResponse {
	return o.Payload
}

func (o *GetFeedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FeedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFeedDefault creates a GetFeedDefault with default headers values
func NewGetFeedDefault(code int) *GetFeedDefault {
	return &GetFeedDefault{
		_statusCode: code,
	}
}

/*GetFeedDefault handles this case with default header values.

Unexpected error
*/
type GetFeedDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get feed default response
func (o *GetFeedDefault) Code() int {
	return o._statusCode
}

func (o *GetFeedDefault) Error() string {
	return fmt.Sprintf("[GET /feed][%d] getFeed default  %+v", o._statusCode, o.Payload)
}

func (o *GetFeedDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFeedDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
