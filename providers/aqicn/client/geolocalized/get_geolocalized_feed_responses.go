// Code generated by go-swagger; DO NOT EDIT.

package geolocalized

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/kihamo/boggart/providers/aqicn/models"
)

// GetGeolocalizedFeedReader is a Reader for the GetGeolocalizedFeed structure.
type GetGeolocalizedFeedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGeolocalizedFeedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGeolocalizedFeedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetGeolocalizedFeedDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetGeolocalizedFeedOK creates a GetGeolocalizedFeedOK with default headers values
func NewGetGeolocalizedFeedOK() *GetGeolocalizedFeedOK {
	return &GetGeolocalizedFeedOK{}
}

/*GetGeolocalizedFeedOK handles this case with default header values.

Successful operation
*/
type GetGeolocalizedFeedOK struct {
	Payload *GetGeolocalizedFeedOKBody
}

func (o *GetGeolocalizedFeedOK) Error() string {
	return fmt.Sprintf("[GET /feed/geo:{lat};{lng}/][%d] getGeolocalizedFeedOK  %+v", 200, o.Payload)
}

func (o *GetGeolocalizedFeedOK) GetPayload() *GetGeolocalizedFeedOKBody {
	return o.Payload
}

func (o *GetGeolocalizedFeedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetGeolocalizedFeedOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeolocalizedFeedDefault creates a GetGeolocalizedFeedDefault with default headers values
func NewGetGeolocalizedFeedDefault(code int) *GetGeolocalizedFeedDefault {
	return &GetGeolocalizedFeedDefault{
		_statusCode: code,
	}
}

/*GetGeolocalizedFeedDefault handles this case with default header values.

Unexpected error
*/
type GetGeolocalizedFeedDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get geolocalized feed default response
func (o *GetGeolocalizedFeedDefault) Code() int {
	return o._statusCode
}

func (o *GetGeolocalizedFeedDefault) Error() string {
	return fmt.Sprintf("[GET /feed/geo:{lat};{lng}/][%d] getGeolocalizedFeed default  %+v", o._statusCode, o.Payload)
}

func (o *GetGeolocalizedFeedDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGeolocalizedFeedDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetGeolocalizedFeedOKBody get geolocalized feed o k body
swagger:model GetGeolocalizedFeedOKBody
*/
type GetGeolocalizedFeedOKBody struct {

	// data
	Data *models.Data `json:"data,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this get geolocalized feed o k body
func (o *GetGeolocalizedFeedOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGeolocalizedFeedOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getGeolocalizedFeedOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetGeolocalizedFeedOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGeolocalizedFeedOKBody) UnmarshalBinary(b []byte) error {
	var res GetGeolocalizedFeedOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
