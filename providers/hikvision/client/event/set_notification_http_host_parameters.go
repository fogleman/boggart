// Code generated by go-swagger; DO NOT EDIT.

package event

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kihamo/boggart/providers/hikvision/models"
)

// NewSetNotificationHttpHostParams creates a new SetNotificationHttpHostParams object
// with the default values initialized.
func NewSetNotificationHttpHostParams() *SetNotificationHttpHostParams {
	var ()
	return &SetNotificationHttpHostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSetNotificationHttpHostParamsWithTimeout creates a new SetNotificationHttpHostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSetNotificationHttpHostParamsWithTimeout(timeout time.Duration) *SetNotificationHttpHostParams {
	var ()
	return &SetNotificationHttpHostParams{

		timeout: timeout,
	}
}

// NewSetNotificationHttpHostParamsWithContext creates a new SetNotificationHttpHostParams object
// with the default values initialized, and the ability to set a context for a request
func NewSetNotificationHttpHostParamsWithContext(ctx context.Context) *SetNotificationHttpHostParams {
	var ()
	return &SetNotificationHttpHostParams{

		Context: ctx,
	}
}

// NewSetNotificationHttpHostParamsWithHTTPClient creates a new SetNotificationHttpHostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSetNotificationHttpHostParamsWithHTTPClient(client *http.Client) *SetNotificationHttpHostParams {
	var ()
	return &SetNotificationHttpHostParams{
		HTTPClient: client,
	}
}

/*SetNotificationHttpHostParams contains all the parameters to send to the API endpoint
for the set notification http host operation typically these are written to a http.Request
*/
type SetNotificationHttpHostParams struct {

	/*HttpHostNotification*/
	HttpHostNotification *models.HttpHostNotification
	/*HttpHost
	  HTTP host ID

	*/
	HttpHost uint64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the set notification http host params
func (o *SetNotificationHttpHostParams) WithTimeout(timeout time.Duration) *SetNotificationHttpHostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set notification http host params
func (o *SetNotificationHttpHostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set notification http host params
func (o *SetNotificationHttpHostParams) WithContext(ctx context.Context) *SetNotificationHttpHostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set notification http host params
func (o *SetNotificationHttpHostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set notification http host params
func (o *SetNotificationHttpHostParams) WithHTTPClient(client *http.Client) *SetNotificationHttpHostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set notification http host params
func (o *SetNotificationHttpHostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHttpHostNotification adds the httpHostNotification to the set notification http host params
func (o *SetNotificationHttpHostParams) WithHttpHostNotification(httpHostNotification *models.HttpHostNotification) *SetNotificationHttpHostParams {
	o.SetHttpHostNotification(httpHostNotification)
	return o
}

// SetHttpHostNotification adds the httpHostNotification to the set notification http host params
func (o *SetNotificationHttpHostParams) SetHttpHostNotification(httpHostNotification *models.HttpHostNotification) {
	o.HttpHostNotification = httpHostNotification
}

// WithHttpHost adds the httpHost to the set notification http host params
func (o *SetNotificationHttpHostParams) WithHttpHost(httpHost uint64) *SetNotificationHttpHostParams {
	o.SetHttpHost(httpHost)
	return o
}

// SetHttpHost adds the httpHost to the set notification http host params
func (o *SetNotificationHttpHostParams) SetHttpHost(httpHost uint64) {
	o.HttpHost = httpHost
}

// WriteToRequest writes these params to a swagger request
func (o *SetNotificationHttpHostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.HttpHostNotification != nil {
		if err := r.SetBodyParam(o.HttpHostNotification); err != nil {
			return err
		}
	}

	// path param httpHost
	if err := r.SetPathParam("httpHost", swag.FormatUint64(o.HttpHost)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
