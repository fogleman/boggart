// Code generated by go-swagger; DO NOT EDIT.

package event

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	static "github.com/kihamo/boggart/providers/hikvision/static/models"
)

// NewSetNotificationHTTPHostParams creates a new SetNotificationHTTPHostParams object
// with the default values initialized.
func NewSetNotificationHTTPHostParams() *SetNotificationHTTPHostParams {
	var ()
	return &SetNotificationHTTPHostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSetNotificationHTTPHostParamsWithTimeout creates a new SetNotificationHTTPHostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSetNotificationHTTPHostParamsWithTimeout(timeout time.Duration) *SetNotificationHTTPHostParams {
	var ()
	return &SetNotificationHTTPHostParams{

		timeout: timeout,
	}
}

// NewSetNotificationHTTPHostParamsWithContext creates a new SetNotificationHTTPHostParams object
// with the default values initialized, and the ability to set a context for a request
func NewSetNotificationHTTPHostParamsWithContext(ctx context.Context) *SetNotificationHTTPHostParams {
	var ()
	return &SetNotificationHTTPHostParams{

		Context: ctx,
	}
}

// NewSetNotificationHTTPHostParamsWithHTTPClient creates a new SetNotificationHTTPHostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSetNotificationHTTPHostParamsWithHTTPClient(client *http.Client) *SetNotificationHTTPHostParams {
	var ()
	return &SetNotificationHTTPHostParams{
		HTTPClient: client,
	}
}

/*SetNotificationHTTPHostParams contains all the parameters to send to the API endpoint
for the set notification Http host operation typically these are written to a http.Request
*/
type SetNotificationHTTPHostParams struct {

	/*HTTPHostNotification*/
	HTTPHostNotification *static.HTTPHostNotification
	/*HTTPHost
	  HTTP host ID

	*/
	HTTPHost uint64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the set notification Http host params
func (o *SetNotificationHTTPHostParams) WithTimeout(timeout time.Duration) *SetNotificationHTTPHostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set notification Http host params
func (o *SetNotificationHTTPHostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set notification Http host params
func (o *SetNotificationHTTPHostParams) WithContext(ctx context.Context) *SetNotificationHTTPHostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set notification Http host params
func (o *SetNotificationHTTPHostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set notification Http host params
func (o *SetNotificationHTTPHostParams) WithHTTPClient(client *http.Client) *SetNotificationHTTPHostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set notification Http host params
func (o *SetNotificationHTTPHostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHTTPHostNotification adds the hTTPHostNotification to the set notification Http host params
func (o *SetNotificationHTTPHostParams) WithHTTPHostNotification(hTTPHostNotification *static.HTTPHostNotification) *SetNotificationHTTPHostParams {
	o.SetHTTPHostNotification(hTTPHostNotification)
	return o
}

// SetHTTPHostNotification adds the httpHostNotification to the set notification Http host params
func (o *SetNotificationHTTPHostParams) SetHTTPHostNotification(hTTPHostNotification *static.HTTPHostNotification) {
	o.HTTPHostNotification = hTTPHostNotification
}

// WithHTTPHost adds the hTTPHost to the set notification Http host params
func (o *SetNotificationHTTPHostParams) WithHTTPHost(hTTPHost uint64) *SetNotificationHTTPHostParams {
	o.SetHTTPHost(hTTPHost)
	return o
}

// SetHTTPHost adds the httpHost to the set notification Http host params
func (o *SetNotificationHTTPHostParams) SetHTTPHost(hTTPHost uint64) {
	o.HTTPHost = hTTPHost
}

// WriteToRequest writes these params to a swagger request
func (o *SetNotificationHTTPHostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.HTTPHostNotification != nil {
		if err := r.SetBodyParam(o.HTTPHostNotification); err != nil {
			return err
		}
	}

	// path param httpHost
	if err := r.SetPathParam("httpHost", swag.FormatUint64(o.HTTPHost)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
