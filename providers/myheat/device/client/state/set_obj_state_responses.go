// Code generated by go-swagger; DO NOT EDIT.

package state

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/kihamo/boggart/providers/myheat/device/models"
)

// SetObjStateReader is a Reader for the SetObjState structure.
type SetObjStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetObjStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetObjStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSetObjStateOK creates a SetObjStateOK with default headers values
func NewSetObjStateOK() *SetObjStateOK {
	return &SetObjStateOK{}
}

/* SetObjStateOK describes a response with status code 200, with default header values.

Successful login
*/
type SetObjStateOK struct {
	Payload *models.Status
}

func (o *SetObjStateOK) Error() string {
	return fmt.Sprintf("[POST /setObjState][%d] setObjStateOK  %+v", 200, o.Payload)
}
func (o *SetObjStateOK) GetPayload() *models.Status {
	return o.Payload
}

func (o *SetObjStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SetObjStateBody set obj state body
swagger:model SetObjStateBody
*/
type SetObjStateBody struct {
	models.SetStateSecurityRequest

	models.SetStateHeatingModeRequest

	models.SetStateEnvironmentRequest

	models.SetStateEngineeringRequest
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *SetObjStateBody) UnmarshalJSON(raw []byte) error {
	// SetObjStateParamsBodyAO0
	var setObjStateParamsBodyAO0 models.SetStateSecurityRequest
	if err := swag.ReadJSON(raw, &setObjStateParamsBodyAO0); err != nil {
		return err
	}
	o.SetStateSecurityRequest = setObjStateParamsBodyAO0

	// SetObjStateParamsBodyAO1
	var setObjStateParamsBodyAO1 models.SetStateHeatingModeRequest
	if err := swag.ReadJSON(raw, &setObjStateParamsBodyAO1); err != nil {
		return err
	}
	o.SetStateHeatingModeRequest = setObjStateParamsBodyAO1

	// SetObjStateParamsBodyAO2
	var setObjStateParamsBodyAO2 models.SetStateEnvironmentRequest
	if err := swag.ReadJSON(raw, &setObjStateParamsBodyAO2); err != nil {
		return err
	}
	o.SetStateEnvironmentRequest = setObjStateParamsBodyAO2

	// SetObjStateParamsBodyAO3
	var setObjStateParamsBodyAO3 models.SetStateEngineeringRequest
	if err := swag.ReadJSON(raw, &setObjStateParamsBodyAO3); err != nil {
		return err
	}
	o.SetStateEngineeringRequest = setObjStateParamsBodyAO3

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o SetObjStateBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 4)

	setObjStateParamsBodyAO0, err := swag.WriteJSON(o.SetStateSecurityRequest)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, setObjStateParamsBodyAO0)

	setObjStateParamsBodyAO1, err := swag.WriteJSON(o.SetStateHeatingModeRequest)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, setObjStateParamsBodyAO1)

	setObjStateParamsBodyAO2, err := swag.WriteJSON(o.SetStateEnvironmentRequest)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, setObjStateParamsBodyAO2)

	setObjStateParamsBodyAO3, err := swag.WriteJSON(o.SetStateEngineeringRequest)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, setObjStateParamsBodyAO3)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this set obj state body
func (o *SetObjStateBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SetStateSecurityRequest
	if err := o.SetStateSecurityRequest.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with models.SetStateHeatingModeRequest
	if err := o.SetStateHeatingModeRequest.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with models.SetStateEnvironmentRequest
	if err := o.SetStateEnvironmentRequest.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with models.SetStateEngineeringRequest
	if err := o.SetStateEngineeringRequest.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this set obj state body based on the context it is used
func (o *SetObjStateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SetStateSecurityRequest
	if err := o.SetStateSecurityRequest.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with models.SetStateHeatingModeRequest
	if err := o.SetStateHeatingModeRequest.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with models.SetStateEnvironmentRequest
	if err := o.SetStateEnvironmentRequest.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with models.SetStateEngineeringRequest
	if err := o.SetStateEngineeringRequest.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *SetObjStateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SetObjStateBody) UnmarshalBinary(b []byte) error {
	var res SetObjStateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
