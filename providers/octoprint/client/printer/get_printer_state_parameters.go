// Code generated by go-swagger; DO NOT EDIT.

package printer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetPrinterStateParams creates a new GetPrinterStateParams object
// with the default values initialized.
func NewGetPrinterStateParams() *GetPrinterStateParams {
	var ()
	return &GetPrinterStateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPrinterStateParamsWithTimeout creates a new GetPrinterStateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPrinterStateParamsWithTimeout(timeout time.Duration) *GetPrinterStateParams {
	var ()
	return &GetPrinterStateParams{

		timeout: timeout,
	}
}

// NewGetPrinterStateParamsWithContext creates a new GetPrinterStateParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPrinterStateParamsWithContext(ctx context.Context) *GetPrinterStateParams {
	var ()
	return &GetPrinterStateParams{

		Context: ctx,
	}
}

// NewGetPrinterStateParamsWithHTTPClient creates a new GetPrinterStateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPrinterStateParamsWithHTTPClient(client *http.Client) *GetPrinterStateParams {
	var ()
	return &GetPrinterStateParams{
		HTTPClient: client,
	}
}

/*GetPrinterStateParams contains all the parameters to send to the API endpoint
for the get printer state operation typically these are written to a http.Request
*/
type GetPrinterStateParams struct {

	/*Exclude
	  List of attributes to not return in the response

	*/
	Exclude []string
	/*History
	  The printerâ€™s temperature history by supplying

	*/
	History *bool
	/*Limit
	  The amount of data points limited

	*/
	Limit *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get printer state params
func (o *GetPrinterStateParams) WithTimeout(timeout time.Duration) *GetPrinterStateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get printer state params
func (o *GetPrinterStateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get printer state params
func (o *GetPrinterStateParams) WithContext(ctx context.Context) *GetPrinterStateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get printer state params
func (o *GetPrinterStateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get printer state params
func (o *GetPrinterStateParams) WithHTTPClient(client *http.Client) *GetPrinterStateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get printer state params
func (o *GetPrinterStateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExclude adds the exclude to the get printer state params
func (o *GetPrinterStateParams) WithExclude(exclude []string) *GetPrinterStateParams {
	o.SetExclude(exclude)
	return o
}

// SetExclude adds the exclude to the get printer state params
func (o *GetPrinterStateParams) SetExclude(exclude []string) {
	o.Exclude = exclude
}

// WithHistory adds the history to the get printer state params
func (o *GetPrinterStateParams) WithHistory(history *bool) *GetPrinterStateParams {
	o.SetHistory(history)
	return o
}

// SetHistory adds the history to the get printer state params
func (o *GetPrinterStateParams) SetHistory(history *bool) {
	o.History = history
}

// WithLimit adds the limit to the get printer state params
func (o *GetPrinterStateParams) WithLimit(limit *int64) *GetPrinterStateParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get printer state params
func (o *GetPrinterStateParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WriteToRequest writes these params to a swagger request
func (o *GetPrinterStateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesExclude := o.Exclude

	joinedExclude := swag.JoinByFormat(valuesExclude, "csv")
	// query array param exclude
	if err := r.SetQueryParam("exclude", joinedExclude...); err != nil {
		return err
	}

	if o.History != nil {

		// query param history
		var qrHistory bool
		if o.History != nil {
			qrHistory = *o.History
		}
		qHistory := swag.FormatBool(qrHistory)
		if qHistory != "" {
			if err := r.SetQueryParam("history", qHistory); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
