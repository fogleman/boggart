// Code generated by go-swagger; DO NOT EDIT.

package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kihamo/boggart/providers/octoprint/models"
)

// DisplayLayerProgressReader is a Reader for the DisplayLayerProgress structure.
type DisplayLayerProgressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisplayLayerProgressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDisplayLayerProgressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDisplayLayerProgressOK creates a DisplayLayerProgressOK with default headers values
func NewDisplayLayerProgressOK() *DisplayLayerProgressOK {
	return &DisplayLayerProgressOK{}
}

/*DisplayLayerProgressOK handles this case with default header values.

Successful operation
*/
type DisplayLayerProgressOK struct {
	Payload *models.PluginDisplayLayerProgress
}

func (o *DisplayLayerProgressOK) Error() string {
	return fmt.Sprintf("[GET /plugin/DisplayLayerProgress/values][%d] displayLayerProgressOK  %+v", 200, o.Payload)
}

func (o *DisplayLayerProgressOK) GetPayload() *models.PluginDisplayLayerProgress {
	return o.Payload
}

func (o *DisplayLayerProgressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PluginDisplayLayerProgress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
