// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// DeviceSignal device signal
// swagger:model DeviceSignal
type DeviceSignal struct {

	// cell ID
	CellID int64 `json:"CellID,omitempty" xml:"cell_id"`

	// e c i o
	ECIO string `json:"ECIO,omitempty" xml:"ecio"`

	// l t e band info
	LTEBandInfo string `json:"LTEBandInfo,omitempty" xml:"lte_bandinfo"`

	// l t e band width
	LTEBandWidth string `json:"LTEBandWidth,omitempty" xml:"lte_bandwidth"`

	// mode
	Mode int64 `json:"Mode,omitempty" xml:"mode"`

	// p c i
	PCI int64 `json:"PCI,omitempty" xml:"pci"`

	// p s a t t
	PSATT int64 `json:"PSATT,omitempty" xml:"psatt"`

	// r s c p
	RSCP string `json:"RSCP,omitempty" xml:"rscp"`

	// r s r p
	RSRP string `json:"RSRP,omitempty" xml:"rsrp"`

	// r s r q
	RSRQ string `json:"RSRQ,omitempty" xml:"rsrq"`

	// r s s i
	RSSI string `json:"RSSI,omitempty" xml:"rssi"`

	// s c
	SC int64 `json:"SC,omitempty" xml:"sc"`

	// s i n r
	SINR string `json:"SINR,omitempty" xml:"sinr"`
}

// Validate validates this device signal
func (m *DeviceSignal) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeviceSignal) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeviceSignal) UnmarshalBinary(b []byte) error {
	var res DeviceSignal
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
